[{"D:\\dev-projects\\telmo-academy-v3\\client\\src\\index.js":"1","D:\\dev-projects\\telmo-academy-v3\\client\\src\\App.js":"2","D:\\dev-projects\\telmo-academy-v3\\client\\src\\store.js":"3","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\auth.js":"4","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Footer.js":"5","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Home.js":"6","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseLessons.js":"7","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Course.js":"8","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Courses.js":"9","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Register.js":"10","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Logout.js":"11","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Membership.js":"12","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Login.js":"13","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Checkout.js":"14","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipCheckout.js":"15","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipSuccess.js":"16","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Activate.js":"17","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CheckoutSuccess.js":"18","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ForgotPassword.js":"19","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseUpdate.js":"20","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ResetPassword.js":"21","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ActivateEmail.js":"22","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminCtn.js":"23","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCtn.js":"24","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseCreate.js":"25","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\types.js":"26","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\authConstants.js":"27","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\userConstants.js":"28","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\courses.js":"29","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseCard.js":"30","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileBilling.js":"31","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCourses.js":"32","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AllUsers.js":"33","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\Profile.js":"34","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseUpdate.js":"35","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileSidebar.js":"36","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\FeatureCourses.js":"37","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Courses.js":"38","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminSidebar.js":"39","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Header.js":"40","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\SecondHeader.js":"41","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\AdminSidebar.js":"42","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Loader.js":"43","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\imageUpload.js":"44","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\payments.js":"45","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\index.js":"46","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\courseConstants.js":"47","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\membership.js":"48","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\admin.js":"49","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Navbar.js":"50","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\courses.js":"51","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\auth.js":"52","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\payment.js":"53","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\admin.js":"54","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\adminConstants.js":"55","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\UserProfile.js":"56","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Sales.js":"57","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Coupons.js":"58","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\NewCoupon.js":"59","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\EditCoupon.js":"60","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\couponConstants.js":"61"},{"size":154,"mtime":1588368838947,"results":"62","hashOfConfig":"63"},{"size":3419,"mtime":1609154196939,"results":"64","hashOfConfig":"63"},{"size":393,"mtime":1587241502709,"results":"65","hashOfConfig":"63"},{"size":8525,"mtime":1609329744187,"results":"66","hashOfConfig":"63"},{"size":1058,"mtime":1601578017673,"results":"67","hashOfConfig":"63"},{"size":4923,"mtime":1606344336158,"results":"68","hashOfConfig":"63"},{"size":6380,"mtime":1607886994491,"results":"69","hashOfConfig":"63"},{"size":6276,"mtime":1607878304842,"results":"70","hashOfConfig":"63"},{"size":3459,"mtime":1606592413621,"results":"71","hashOfConfig":"63"},{"size":4718,"mtime":1607122465294,"results":"72","hashOfConfig":"63"},{"size":594,"mtime":1605527533139,"results":"73","hashOfConfig":"63"},{"size":4713,"mtime":1607887637658,"results":"74","hashOfConfig":"63"},{"size":2992,"mtime":1599079055555,"results":"75","hashOfConfig":"63"},{"size":9193,"mtime":1610580297488,"results":"76","hashOfConfig":"63"},{"size":3038,"mtime":1601507359698,"results":"77","hashOfConfig":"63"},{"size":896,"mtime":1601506704235,"results":"78","hashOfConfig":"63"},{"size":1528,"mtime":1605909522734,"results":"79","hashOfConfig":"63"},{"size":1765,"mtime":1605555676416,"results":"80","hashOfConfig":"63"},{"size":2334,"mtime":1599078986616,"results":"81","hashOfConfig":"63"},{"size":4965,"mtime":1597324714836,"results":"82","hashOfConfig":"83"},{"size":3249,"mtime":1605553579581,"results":"84","hashOfConfig":"63"},{"size":1422,"mtime":1605730944904,"results":"85","hashOfConfig":"63"},{"size":2271,"mtime":1609435760721,"results":"86","hashOfConfig":"63"},{"size":1204,"mtime":1605722913319,"results":"87","hashOfConfig":"63"},{"size":4230,"mtime":1607640900018,"results":"88","hashOfConfig":"63"},{"size":1710,"mtime":1605723275400,"results":"89","hashOfConfig":"63"},{"size":224,"mtime":1605723213944,"results":"90","hashOfConfig":"63"},{"size":575,"mtime":1609332017239,"results":"91","hashOfConfig":"63"},{"size":7669,"mtime":1610059327263,"results":"92","hashOfConfig":"63"},{"size":1046,"mtime":1607640339478,"results":"93","hashOfConfig":"63"},{"size":3733,"mtime":1607189547602,"results":"94","hashOfConfig":"63"},{"size":2601,"mtime":1608568853289,"results":"95","hashOfConfig":"63"},{"size":13375,"mtime":1609330252285,"results":"96","hashOfConfig":"63"},{"size":9679,"mtime":1607189513095,"results":"97","hashOfConfig":"63"},{"size":7048,"mtime":1607886328024,"results":"98","hashOfConfig":"63"},{"size":1583,"mtime":1607189472407,"results":"99","hashOfConfig":"63"},{"size":9323,"mtime":1606343967047,"results":"100","hashOfConfig":"63"},{"size":2024,"mtime":1607189583930,"results":"101","hashOfConfig":"63"},{"size":1891,"mtime":1609329886084,"results":"102","hashOfConfig":"63"},{"size":605,"mtime":1600366597710,"results":"103","hashOfConfig":"63"},{"size":6848,"mtime":1609158364338,"results":"104","hashOfConfig":"63"},{"size":386,"mtime":1597948581674,"results":"105","hashOfConfig":"83"},{"size":332,"mtime":1605369245325,"results":"106","hashOfConfig":"63"},{"size":3401,"mtime":1597497863156,"results":"107","hashOfConfig":"63"},{"size":4419,"mtime":1610577184019,"results":"108","hashOfConfig":"63"},{"size":257,"mtime":1606423583344,"results":"109","hashOfConfig":"63"},{"size":290,"mtime":1606341064197,"results":"110","hashOfConfig":"63"},{"size":1761,"mtime":1608506206271,"results":"111","hashOfConfig":"63"},{"size":8944,"mtime":1609522614585,"results":"112","hashOfConfig":"63"},{"size":2107,"mtime":1596048824215,"results":"113","hashOfConfig":"63"},{"size":2009,"mtime":1608506263740,"results":"114","hashOfConfig":"63"},{"size":4183,"mtime":1609162959827,"results":"115","hashOfConfig":"63"},{"size":2234,"mtime":1610322756982,"results":"116","hashOfConfig":"63"},{"size":3185,"mtime":1609964577305,"results":"117","hashOfConfig":"63"},{"size":2174,"mtime":1609511065462,"results":"118","hashOfConfig":"63"},{"size":8571,"mtime":1608567641454,"results":"119","hashOfConfig":"63"},{"size":12338,"mtime":1609021602782,"results":"120","hashOfConfig":"63"},{"size":16752,"mtime":1609435774710,"results":"121","hashOfConfig":"63"},{"size":7146,"mtime":1609421170957,"results":"122","hashOfConfig":"63"},{"size":9007,"mtime":1609518231894,"results":"123","hashOfConfig":"63"},{"size":264,"mtime":1610319588780,"results":"124","hashOfConfig":"63"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"ps6lgt",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"127"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"127"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"127"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"127"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"127"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"127"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"127"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"127"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"127"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"127"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"127"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},"98tof7",{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"127"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"127"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"127"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"127"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"127"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"127"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"127"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"127"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"127"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"127"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"127"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"127"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"127"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"127"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"127"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"127"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"127"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"127"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"127"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"127"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"127"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"127"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"127"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"127"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"D:\\dev-projects\\telmo-academy-v3\\client\\src\\index.js",[],["288","289"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\App.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\store.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\auth.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Footer.js",["290","291","292","293","294","295","296","297"],"import React from 'react'\r\nimport footerLogo from '../../images/telmoacademy-logo1.png';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"footerSocialCtn\">\r\n            <img src={footerLogo} alt=\"Telmo Academy Logo\"/>\r\n            {/* <span className=\"footerEmail\"><i className=\"fas fa-envelope\"></i>support@telmoacademy.com</span> */}\r\n            <span className=\"footerSocial\">\r\n              <a href=\"#\"><i className=\"fab fa-youtube\"></i></a>\r\n              <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\r\n              <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"footerLinks\">\r\n            <a href=\"#\">Privacy</a>\r\n            <a href=\"#\">Terms</a>\r\n            <a href=\"#\">Blog</a>\r\n            <a href=\"#\">Contact</a>\r\n            <a href=\"#\">About</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Home.js",["298","299","300","301"],"import React, { Fragment, useEffect } from 'react';\r\nimport Header from '../partials/Header';\r\nimport CourseCard from './CourseCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCourses } from '../../actions/courses';\r\nimport './Home.css';\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading, token } = auth;\r\n\r\n\r\n  const courses = useSelector(state => state.courses);\r\n  const courseLoading = courses.loading;\r\n\r\n  useEffect(() => {\r\n      dispatch(getCourses());\r\n  }, []);\r\n\r\n  console.log(courses);\r\n\r\n  const coursesFiltered = courses.all.length > 0 && courses.all.filter((course) => {\r\n    return course.featured;\r\n  });\r\n\r\n  coursesFiltered.length > 0 && coursesFiltered.sort((a, b) => {\r\n    return a.featuredPosition - b.featuredPosition;\r\n  })\r\n\r\n  const allFeatured = coursesFiltered.length > 0 && coursesFiltered.map((course, i) => {\r\n    return (\r\n      <CourseCard \r\n        name={course.name} \r\n        price={course.price} \r\n        key={i}\r\n        tag={course.tag}\r\n      />\r\n    )\r\n  });\r\n\r\n  console.log(courses)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <h3 className=\"popularCourses\">Popular Courses</h3>\r\n        <div className=\"popularCoursesCtn\">\r\n          <div className=\"row\">\r\n            {/* <CourseCard />\r\n            <CourseCard />\r\n            <CourseCard />\r\n            <CourseCard /> */}\r\n\r\n              {allFeatured}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"homeCounter\">\r\n        <div className=\"overlay\"></div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">3057</h1>\r\n              <h5 className=\"homeCounterSubTitle\">students</h5>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">22471</h1>\r\n              <h5 className=\"homeCounterSubTitle\">views</h5>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">64</h1>\r\n              <h5 className=\"homeCounterSubTitle\">countries reached</h5>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">8</h1>\r\n              <h5 className=\"homeCounterSubTitle\">courses published</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"homeObjectives\">\r\n        <div className=\"container\">\r\n          <h3 className=\"homeObjectivesMainTitle\">Learning Objectives </h3>\r\n          <p className=\"homeObjectivesMainDescription\">The skills you can expect to achieve with us</p>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-suitcase\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Get Job Ready</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Gain practical experience as you go by creating portfolio-worthy projects that will help you land your next job</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-trophy\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Get in-depth knowledge</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learning to code means more than just memorizing syntax. Instead, we help you think like a real programmer</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-globe\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Freelancing</h5>\r\n              <p className=\"homeObjectivesObjDescription\">All the tips tricks you need to know to start your freelance career</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <i className=\"far fa-handshake\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Get Hired</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learn how to build an Online Portfolio, and an Awesome CV that will get you hired</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-star\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Responsive Design</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learn how to build websites that will look good on Desktops, Tablets and Mobile phones</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-code\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Clean Code</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learn to write simple, elegante and bug free code, just like a professional</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseLessons.js",["302","303","304","305","306","307","308","309"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './CourseLesson.css';\r\nimport store from '../../store';\r\nimport { useParams, Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getCourse, getCoursesOwned, finishLessonAction, lessonsWatchedAction } from '../../actions/courses';\r\n\r\nconst CourseLessons = ({ \r\n\tcourse, \r\n\tauth, \r\n\tgetCoursesOwned, \r\n\tgetCourse, \r\n\tfinishLessonAction, \r\n\tlessonsWatchedAction }) => {\r\n\r\n\tconst [page, setPage] = useState({\r\n\t\tloaded: false\r\n\t});\r\n\r\n\tlet { courseTag, lesson } = useParams();\r\n\r\n\tlesson = parseInt(lesson);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet isSubscribed = true;\r\n\t\tif (isSubscribed) {\r\n\t\t\tsetPage({ loaded: true });\r\n\t\t\tgetCourse(courseTag);\r\n\t\t}\r\n\r\n\t\treturn () => (isSubscribed = false);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet isSubscribed = true;\r\n\t\tif (isSubscribed) {\r\n\t\t\t\r\n\t\t\tsetCoursesOwned();\r\n\t\t}\r\n\r\n\t\treturn () => (isSubscribed = false);\r\n\t}, [auth && auth.user && auth.user._id]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet isSubscribed = true;\r\n\t\tif (isSubscribed) {\r\n\t\t\tredirectUser();\r\n\t\t}\r\n\t\treturn () => (isSubscribed = false);\r\n\t}, [auth.coursesOwned])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlessonsWatchedAction(courseTag, auth.token);\r\n\t}, [auth && auth.token])\r\n\t// useEffect(() => {\r\n\t// \tconsole.log(\"calling redirect user\")\r\n\t// \tif ( (page.loaded && auth && auth.user && auth.user.role !== \"admin\" && !checkCourseAccess) || (auth && auth.membership && auth.membership.active)) {\r\n\t// \t\tredirectUser();\r\n\t// \t}\r\n\t// }, [page.loaded, auth.membership, auth.user]);\r\n\r\n\tconst setCoursesOwned = async () => {\r\n\t\tawait getCoursesOwned(auth && auth.user && auth.user._id);\r\n\r\n\t}\r\n\r\n\tconst totalLessons = course && course.data && course.data.classes && course.data.classes.length;\r\n\t// console.log(totalLessons);\r\n\r\n\t// console.log(course);\r\n\t// console.log(lesson)\r\n\r\n\tconst checkLesson = (theClass, i) => {\r\n\t\t// console.log(\"INSIDE Checking Lesson\");\r\n\t\t// console.log(theClass.watched)\r\n\t\tfor (let y = 0; y <= theClass.watched.length; y++) {\r\n\t\t\t// console.log(\"Are there classes\");\r\n\t\t\t// console.log(theClass.watched.length > 0)\r\n\t\t\tif (theClass.watched.length > 0 && JSON.stringify(theClass.watched[y].user) === JSON.stringify(auth && auth.user && auth.user._id)) {\r\n\t\t\t\t// console.log(\"We found a CLASS\");\r\n\t\t\t\treturn theClass.watched[y].complete ?\r\n\t\t\t\t\t<i className=\"fas fa-check-circle complete\"></i>\r\n\t\t\t\t\t: <i className=\"far fa-circle\"></i>\r\n\t\t\t} else {\r\n\t\t\t\treturn <i className=\"far fa-circle\"></i>\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tlet classes = course && course.data && course.data.classes && course.data.classes.map((theClass, i) => {\r\n\t\treturn (\r\n\t\t\t<div className=\"lesson\" key={i}>\r\n\t\t\t\t<div className=\"lessonComplete\" onClick={() => finishLessonAction(i, course && course.data && course.data._id, auth && auth.token)}>\r\n\t\t\t\t\t{/* {\ttheClass.watched.complete ? \r\n\t\t\t\t\t\t<i className=\"fas fa-check-circle complete\"></i>\r\n\t\t\t\t\t : <i className=\"far fa-circle\"></i>\r\n\t\t\t\t\t}  */}\r\n\t\t\t\t\t{console.log(\"CHECKING LESSON\")}\r\n\t\t\t\t\t{checkLesson(theClass, i)}\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link className={lesson === (i + 1) ? \"lessonLink lessonActive\" : \"lessonLink\"} to={`/courses/${course.data.tag}/lessons/${theClass.lecture}`}>\r\n\t\t\t\t\t{/* <i className=\"fas fa-play-circle\"></i> */}\r\n\t\t\t\t\t<p>{theClass.title} <span className=\"lessonTime\"> - ({theClass.duration} mins)</span></p>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\tconst lessonContinue = () => {\r\n\t\tif ((lesson + 1) > totalLessons) {\r\n\t\t\t// console.log(lesson);\r\n\t\t\t// console.log(\"inside of if\");\r\n\t\t\treturn <h1>Last Lesson of the Course!</h1>\r\n\t\t} else {\r\n\t\t\t// console.log(\"inside of else\");\r\n\t\t\treturn <Link to={`/courses/${course && course.data && course.data.tag}/lessons/${lesson + 1}`}><h1>Next Lesson <i className=\"fas fa-arrow-right\"></i></h1></Link>\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkCourseAccess = auth && auth.coursesOwned.length > 0 && auth.coursesOwned.find((theCourse) => {\r\n\t\treturn theCourse.tag === courseTag\r\n\t});\r\n\r\n\t// console.log(checkCourseAccess);\r\n\r\n\tconst percentageWatched = () => {\r\n\t\tif (course && course.data && course.data.classes) {\r\n\t\t\tconst totalLessons = course && course.data && course.data.classes.length;\r\n\r\n\t\t\tlet totalLessonsWatched = 0;\r\n\r\n\t\t\tfor (let i = 0; i < course.data.classes.length; i++) {\r\n\t\t\t\t//  console.log(course.data.classes[i]);\r\n\t\t\t\tif (course.data.classes[i].watched.length > 0 && course.data.classes[i].watched[0].complete) {\r\n\t\t\t\t\ttotalLessonsWatched += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn (totalLessonsWatched * 100 / totalLessons).toFixed(0);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst redirectUser = () => {\r\n\t\tif (auth && auth.user && auth.user.role !== \"admin\" && !checkCourseAccess && !auth.membership.active && page.loaded) {\r\n\t\t\treturn <Redirect to=\"/courses\" />\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"container-fluid courseLesson\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"courseLinksCtn\">\r\n\t\t\t\t\t\t<h1><i class=\"far fa-play-circle\"></i><span>{course && course.data && course.data.name}</span></h1>\r\n\r\n\t\t\t\t\t\t<h5 className=\"courseCurriculum\">{percentageWatched()}% <span>complete</span></h5>\r\n\t\t\t\t\t\t<div className=\"lessonsCtn\">\r\n\t\t\t\t\t\t\t{classes}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"courseLinksCtn backup\">\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"courseMainVideoCtn\">\r\n\t\t\t\t\t\t{lessonContinue()}\r\n\t\t\t\t\t\t<div className=\"currentLessonTitle\">\r\n\t\t\t\t\t\t\t<i class=\"fas fa-chalkboard-teacher\"></i>\r\n\t\t\t\t\t\t\t<p>{course && course.data && course.data.classes && course.data.classes[lesson - 1].title}</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"videoIframe\">\r\n\t\t\t\t\t\t\t{/* <iframe src={course && course.data && course.data.classes[lesson - 1].url} width=\"800\" height=\"600\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen></iframe> */}\r\n\t\t\t\t\t\t\t<iframe id=\"iframe1\" style={{display: 'flex'}} src={course && course.data && course.data.classes && course.data.classes[lesson - 1].url} width=\"1024\" height=\"768\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen></iframe>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcourse: state.courses,\r\n\tauth: state.auth\r\n\t// profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, \r\n\t{ getCoursesOwned, \r\n\t\tgetCourse, \r\n\t\tfinishLessonAction,\r\n\t\tlessonsWatchedAction })(CourseLessons);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Course.js",["310","311","312","313","314","315","316","317"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport parse from 'html-react-parser';\r\nimport { useParams, Link, Redirect } from 'react-router-dom';\r\nimport store from '../../store';\r\nimport { connect } from 'react-redux';\r\nimport { getCourse } from '../../actions/courses';\r\nimport { addCheckout } from '../../actions/courses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './Course.css';\r\n\r\n\r\nconst Course = ({ course, addCheckout, auth, payment }) => {\r\n\r\n  const [page, setPage] = useState({\r\n    loaded: false\r\n  })\r\n\r\n  useEffect(() => {\r\n    store.dispatch(getCourse(courseTag));\r\n    setPage({ loaded: true });\r\n    console.log(\"after page loaded\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (auth && auth.membership && auth.membership.active) {\r\n      setPage({ loaded: true });\r\n    }\r\n\r\n  }, [auth && auth.membership && auth.membership.active]);\r\n\r\n  // useEffect(() => {\r\n  //   store.dispatch(getCourse(courseTag, auth && auth.token));\r\n  // }, [auth && auth.token])\r\n\r\n  const { courseTag } = useParams();\r\n  console.log(courseTag);\r\n  console.log(course);\r\n  console.log(auth);\r\n  const description = () => {\r\n\r\n    if (course && course.data && course.data.description) {\r\n      return course.data.description\r\n    } else {\r\n      return \"\"\r\n    }\r\n  }\r\n\r\n  const goCheckout = async () => {\r\n    const selectedCourse = course && course.data;\r\n    const userEmail = auth && auth.user && auth.user.email\r\n    await addCheckout({ selectedCourse, userEmail });\r\n  }\r\n\r\n  let classes = course && course.data && course.data.classes.map((theClass, i) => {\r\n    return (\r\n      <div className={ i % 2 == 0 ? \"courseClassItems bg-light\" : \"courseClassItems\" } key={i}>\r\n        <div className=\"courseClassLecture\"><i className=\"far fa-file\"></i>Lecture {theClass.lecture}</div>\r\n        <div className=\"courseClassTitle\">\r\n          <Link to={`/courses/${course.data.tag}/lessons/1`}>{theClass.title}</Link>\r\n          <span>{theClass.duration} min</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const courseId = course && course.data && course.data._id;\r\n\r\n  const userGotCourse = auth && auth.coursesOwned.filter((course) => {\r\n    console.log(course._id)\r\n    return course._id == courseId\r\n  });\r\n  console.log(auth && auth.coursesOwned);\r\n  console.log(userGotCourse);\r\n\r\n  if (payment && payment.addingToCheckout) {\r\n    console.log(payment.addingToCheckout);\r\n    return <Redirect to=\"/cart/checkout\" />\r\n  }\r\n\r\n  if (auth && auth.membership && auth.membership.active) {\r\n    console.log(\"final check\");\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n\r\n      <div className=\"courseCtn\">\r\n        <div className=\"container\">\r\n\r\n          <div className=\"courseCtnHeader\">\r\n            <h1 className=\"coursePageTitle\">{course && course.data && course.data.name}</h1>\r\n          </div>\r\n\r\n          <div className=\"courseCtnBody\">\r\n            <div className=\"courseIntro\">\r\n              <iframe src={course && course.data && course.data.intro} width=\"640\" height=\"360\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen></iframe>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\" >Description</div>\r\n                  <div className=\"courseDescription card-body\">\r\n                    {parse(description())}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"curriculumCtn card\">\r\n                  <div className=\"card-body\">\r\n                    <h4 className=\"courseOverview\">Curriculum</h4>\r\n                    {classes}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4 offset-sm-2 offset-lg-0 col-sm-8\">\r\n                {(page.loaded && auth && auth.membership && auth.membership.active) ? null : (\r\n                  <div className=\"card purchaseButtons membershipCardCtn\">\r\n                    <div className=\"card-header\">\r\n                      Unlimited access all courses\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h1>$18/month</h1>\r\n                      <Link className=\"membershipPay\" id=\"membershipButton\" to=\"/membership\"> <span className=\"buyMembershipPrice\">Buy Membership</span></Link>\r\n                    </div>\r\n                  </div>\r\n                )\r\n                }\r\n\r\n                {userGotCourse && userGotCourse.length > 0 || (auth && auth.membership && auth.membership.active) ? (\r\n                  <div className=\"card purchaseButtons\">\r\n                    <div className=\"card-header\">\r\n\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <Link className=\"buyButton\" to={`/courses/${course && course.data && course.data.tag}/lessons/1`}><span className=\"buyCoursePrice\">Start Learning</span></Link>\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n                }\r\n                {userGotCourse && userGotCourse.length < 1 && (\r\n                  <div className=\"card purchaseButtons\">\r\n                    <div className=\"card-header\">\r\n                      Buy Lifetime Access:\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h1>${course && course.data && course.data.price} USD</h1>\r\n                      <Link to=\"/cart/checkout\"></Link>\r\n                      {auth && auth.isAuthenticated ?\r\n                        <button className=\"membershipPay buyLifetime\" onClick={goCheckout}><span className=\"buyCoursePrice\">Buy Course</span></button>\r\n                        : <button className=\"buyButton buyLifetime\"><Link to=\"/register\" className=\"buyCoursePrice\">Buy Course</Link></button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  course: state.courses,\r\n  auth: state.auth,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCheckout })(Course);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Courses.js",["318","319","320","321","322","323","324"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { getCourses } from '../../actions/courses';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport Loader from '../utils/Loader';\r\nimport { Form } from 'react-bootstrap';\r\nimport './Courses.css';\r\n\r\nconst Courses = () => {\r\n  const dispatch = useDispatch();\r\n  const courses = useSelector(state => state.courses);\r\n  const { loading, all } = courses;\r\n\r\n  const [coursesThumbnail, setCoursesThumbnail] = useState([]);\r\n\r\n  const [stateCourses, setStateCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!loading){\r\n      setStateCourses(all);\r\n    }\r\n\r\n  }, [loading]);\r\n\r\n  console.log(courses);\r\n  const images = require.context('../../images/courses', true);\r\n\r\n  // const loadMyThumbNail = async () => {\r\n  //   console.log(courses.all);\r\n  //   const allThumbnails = courses && courses.all.map((course, index) => {\r\n  //     return images(`./${course.tag}.jpg`);\r\n  //   });\r\n  //   setCoursesThumbnail(allThumbnails);\r\n  // };\r\n\r\n  const allCourses = stateCourses.map((course, index) => {\r\n\r\n    // if( course && course.hasThumbnail) {\r\n    //   img = images(`./${course.tag}.jpg`);\r\n    // } else {\r\n    //   img = images(`./default-course.jpg`);\r\n    // }\r\n\r\n    // let img = images(`./${course.tag}.jpg`);\r\n    let img = `/images/${course.tag}.jpg`;\r\n    if (course.tag != \"monthly-plan\") {\r\n      return (\r\n        <div className=\"offset-1 col-10 offset-md-0 col-md-4 col-lg-3\" key={index}>\r\n          <div className=\"cardBorder\">\r\n            <div className=\"courseThumbnail courseFeatured1\">\r\n              <Link to={`/courses/${course.tag}`}>\r\n                <img src={img} alt=\"courseThumbnail\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"courseTitleCtn\">\r\n              <Link to={`/courses/${course.tag}`}>{course.name}</Link>\r\n            </div>\r\n            <div className=\"separator\"></div>\r\n            <div className=\"priceCtn\">\r\n              <span className=\"studentNumbers\"><i className=\"fas fa-user\"></i> Telmo Sampaio</span><span className=\"price\">${course.price}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  })\r\n  \r\n  const findCourse = (e) => {\r\n    console.log(e.target.value);\r\n    const text = e.target.value.toLowerCase();\r\n    console.log(text);\r\n    const filteredCourses = courses && courses.all.filter((course) => {\r\n      console.log(course.name)\r\n      return course.name.toLowerCase().indexOf(text) > -1;\r\n    }) \r\n\r\n    console.log(filteredCourses);\r\n    setStateCourses(filteredCourses);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"main-container\">\r\n        <div className=\"courses container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3 my-4\">\r\n              {/* <input type=\"text\" placeholder=\"Find a course\" /> */}\r\n              <Form.Control type=\"text\" placeholder=\"Find a course\" onChange={findCourse}/>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"row\">\r\n            {loading ? <Loader /> : allCourses.length < 1 ? (\r\n              <div className=\"col-6\"><h2>No Courses found</h2></div>\r\n            ) : allCourses}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Courses;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Register.js",["325","326"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport './Register.css';\r\n\r\nconst Register = () => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tpasswordConfirm: '',\r\n\t\trandNumber1: Math.floor(Math.random() * 10 + 1),\r\n\t\trandNumber2: Math.floor(Math.random() * 10 + 1),\r\n\t\tformMessage: '',\r\n\t\tresult: 0\r\n\t});\r\n\tconst { name, email, password, passwordConfirm, randNumber1, randNumber2, formMessage, result } = formData;\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst auth = useSelector(state => state.auth);\r\n\tconst { isAuthenticated, message } = auth;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (formMessage) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// resetMessage();\r\n\t\t\t\tconsole.log(\"formMessage deleted\");\r\n\t\t\t\tsetFormData({ ...formData, formMessage: \"\" });\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t}, [formMessage])\r\n\r\n\tconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(\"Inside register\")\r\n\t\tif (password !== passwordConfirm) {\r\n\t\t\t// setAlert(\"Passwords do not match\", 'danger', 3000);\r\n\t\t\tconsole.log(\"passwords\")\r\n\t\t\tsetFormData({ ...formData, formMessage: \"Passwords do not match\" });\r\n\t\t} else if ((randNumber1 + randNumber2) !== parseInt(result)) {\r\n\t\t\tconsole.log(\"results\")\r\n\t\t\tconsole.log(\"Random Number 1\", randNumber1);\r\n\t\t\tconsole.log(typeof randNumber1);\r\n\t\t\tconsole.log(\"Random Number 2\", randNumber2);\r\n\t\t\tconsole.log(\"Result\", result);\r\n\t\t\tconsole.log(randNumber1 === result);\r\n\t\t\tconsole.log(randNumber1 !== result);\r\n\t\t\tsetFormData({ ...formData, formMessage: \"You are a robot!\" });\r\n\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Inside register action\")\r\n\t\t\tdispatch(register({ name, email, password, passwordConfirm }));\r\n\t\t\tsetFormData({\r\n\t\t\t\t...formData,\r\n\t\t\t\tname: '',\r\n\t\t\t\temail: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tpasswordConfirm: '',\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkResult = (e) => {\r\n\t\tsetFormData({ ...formData, result: e.target.value })\r\n\t}\r\n\r\n\t//Redirect if logged in\r\n\tif (isAuthenticated) {\r\n\t\treturn <Redirect to=\"/\" />\r\n\t}\r\n\tconsole.log(result);\r\n\tconsole.log(randNumber1)\r\n\tconsole.log(randNumber2)\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"registerCtn\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6 offset-3\">\r\n\t\t\t\t\t\t\t<div className=\"card registerCard\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"loginTitle\"><i className=\"fas fa-user\"></i> Create Your Account</h1>\r\n\t\t\t\t\t\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Name\" name=\"name\" required\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"email\" placeholder=\"Email Address\" name=\"email\" required\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"passwordConfirm\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t{randNumber1 && (\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"anti-bot\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>I'm not a Robot</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{randNumber1}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>+</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{randNumber2}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>=</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" onChange={checkResult} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" className=\"btn btn-success\" value=\"Register\" />\r\n\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t\t{formMessage && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"registerError\">\r\n\t\t\t\t\t\t\t\t\t\t<h1>{formMessage}</h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{message && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"registerSuccess\">\r\n\t\t\t\t\t\t\t\t\t\t<h1>{message}</h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p className=\"goLogin\">\r\n\t\t\t\t\t\t\t\tAlready have an account? <Link to=\"/login\">Log In</Link>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Register;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Logout.js",["327","328"],"import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Logout =  ({ history }) => {\r\n\r\n  useEffect( () => {\r\n    store.dispatch(logout());\r\n    history.push('/');\r\n  }, []);\r\n\r\n  // if(!isAuthenticated) {\r\n  //   return <Redirect to=\"/\" /> \r\n  // }\r\n  return (\r\n    <h1>Logout</h1>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Logout);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Membership.js",["329","330","331","332","333"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport './Membership.css';\r\n\r\nconst Membership = ({ register, isAuthenticated }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tpasswordConfirm: '',\r\n\t\trandNumber1: Math.floor(Math.random() * 10 + 1),\r\n\t\trandNumber2: Math.floor(Math.random() * 10 + 1),\r\n\t\tmessage: '',\r\n\t\tresult: 0\r\n\t});\r\n\tconst { name, email, password, passwordConfirm, randNumber1, randNumber2, message, result } = formData;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// resetMessage();\r\n\t\t\t\tconsole.log(\"message deleted\");\r\n\t\t\t\tsetFormData({ ...formData, message: \"\" });\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t}, [message])\r\n\r\n\tconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(\"Inside register\")\r\n\t\tif (password !== passwordConfirm) {\r\n\t\t\t// setAlert(\"Passwords do not match\", 'danger', 3000);\r\n\t\t\tconsole.log(\"passwords\")\r\n\t\t\tsetFormData({ ...formData, message: \"Passwords do not match\" });\r\n\t\t} else if ((randNumber1 + randNumber2) !== parseInt(result)) {\r\n\t\t\tconsole.log(\"results\")\r\n\t\t\tconsole.log(\"Random Number 1\", randNumber1);\r\n\t\t\tconsole.log(typeof randNumber1);\r\n\t\t\tconsole.log(\"Random Number 2\", randNumber2);\r\n\t\t\tconsole.log(\"Result\", result);\r\n\t\t\tconsole.log(randNumber1 === result);\r\n\t\t\tconsole.log(randNumber1 !== result);\r\n\t\t\tsetFormData({ ...formData, message: \"You are a robot!\" });\r\n\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Inside register action\")\r\n\t\t\tregister({ name, email, password, passwordConfirm });\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkResult = (e) => {\r\n\t\tsetFormData({ ...formData, result: e.target.value })\r\n\t}\r\n\r\n\t//Redirect if logged in\r\n\t// if (isAuthenticated) {\r\n\t// \treturn <Redirect to=\"/\" />\r\n\t// }\r\n\tconsole.log(result);\r\n\tconsole.log(randNumber1)\r\n\tconsole.log(randNumber2)\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"membershipCtn\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-lg-5 offset-lg-1 col-md-10 offset-md-1\">\r\n\t\t\t\t\t\t\t<div className=\"annualCtn\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"membershipRecommended\">MOST POPULAR</h2>\r\n\t\t\t\t\t\t\t\t<h3 className=\"membershipTitle\">Annual</h3>\r\n\t\t\t\t\t\t\t\t<h1 className=\"membershipPrice\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipDollar\">$</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipPriceValue\">99<span>.99</span></span>\r\n\t\t\t\t\t\t\t\t\t<span>/year</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipPriceToPay\">$179.88</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipBilled\">BILLED YEARLY</span>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t<ul className=\"membershipFeatures\">\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Access all courses from Library</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>New courses every month</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Cancel at any time</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Download courses project files</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>30% Discount in all courses</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<Link className=\"membershipBuyButton\" to=\"/membership/annual\">Start Plan</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-lg-5 col-md-10 offset-md-1\">\r\n\t\t\t\t\t\t\t<div className=\"monthlyCtn\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"membershipTitle\">Monthly</h3>\r\n\t\t\t\t\t\t\t\t<h1 className=\"membershipPrice\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipDollar\">$</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipPriceValue\">24<span>.99</span></span>\r\n\t\t\t\t\t\t\t\t\t<span>/Month</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<ul className=\"membershipFeatures\">\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Access all courses from Library</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>New courses every month</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Cancel at any time</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-times\"></i><span style={{textDecoration: \"line-through\"}}>Download courses project files</span></li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-times\"></i><span style={{textDecoration: \"line-through\"}}>30% Discount in all courses</span></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<Link className=\"membershipBuyButton\" to=\"/membership/monthly\">Start Plan</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { register })(Membership);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Login.js",["334"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import { setAlert } from '../../actions/alert';\r\nimport './Login.css';\r\nimport { login, resetMessage } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = ({ login, resetMessage, isAuthenticated, auth, active }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\r\n\tconst [message, setMessage] = useState(\"\")\r\n\r\n\tuseEffect(() => {\r\n\t\tresetMessage();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMessage(auth.message);\r\n\t}, [auth.message])\r\n\r\n\tconst { email, password } = formData;\r\n\tconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tlogin({ email, password });\r\n\t}\r\n\r\n\t//Redirect if logged in\r\n\tif (isAuthenticated && active === \"notActive\") {\r\n\t\treturn <Redirect to=\"/activate\" />\r\n\t} else if (isAuthenticated) {\r\n\t\treturn <Redirect to=\"/\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"loginCtn\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6 offset-3\">\r\n\t\t\t\t\t\t\t<div className=\"card loginCard\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"loginTitle\"><i className=\"fas fa-user\"></i>Login to Telmo Academy</h1>\r\n\t\t\t\t\t\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Email Address</label><br />\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"email\" name=\"email\" required\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Password</label><br />\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" className=\"btn btn-success\" value=\"Login\" />\r\n\r\n\t\t\t\t\t\t\t\t\t{message && (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"loginError\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h1>{message}</h1>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-3 offset-3\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<h3><Link to=\"/forgotPassword\">Forgot your password?</Link></h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<h3><Link to=\"/register\">Create an Account</Link></h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nLogin.propTypes = {\r\n\t// setAlert: PropTypes.func.isRequired,\r\n\tlogin: PropTypes.func.isRequired,\r\n\tisAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\tauth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, resetMessage })(Login);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Checkout.js",["335","336","337","338","339","340","341","342"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipCheckout.js",["343","344","345"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { payAction, membershipPayment } from '../../actions/payments';\r\nimport './MembershipCheckout.css';\r\n\r\nconst MembershipCheckout = ({ payAction, payment,  paymentToken, auth, membershipPayment }) => {\r\n  const [data, setData] = useState({\r\n    instance: {}\r\n  });\r\n\r\n  const { duration } = useParams();\r\n\r\n  useEffect(() => {\r\n    payAction();\r\n  }, []);\r\n\r\n  const buy = (membershipDuration) => {\r\n    let nonce;\r\n    let getNonce = data.instance.requestPaymentMethod()\r\n      .then(data => {\r\n        console.log(data);\r\n        nonce = data.nonce\r\n\r\n        // console.log('send nonce and total to process ', nonce);\r\n        const paymentData = {\r\n          paymentMethodNonce: nonce\r\n        }\r\n\r\n        // processPayment(userId, token, paymentData)\r\n        membershipPayment(auth && auth.user, auth && auth.token, paymentData, membershipDuration);\r\n      })\r\n      .catch(error => {\r\n        console.log('dropin error: ', error)\r\n      })\r\n  }\r\n\r\n  const showDropIn = () => (\r\n    paymentToken && <Fragment>\r\n      <DropIn options={{\r\n        authorization: paymentToken,\r\n        paypal: {\r\n          flow: \"vault\"\r\n        }\r\n      }} onInstance={instance => (data.instance = instance)} />\r\n      {\r\n        duration === \"monthly\" ? (\r\n          <button onClick={() => buy(\"monthly\")} className=\"membershipPay\">Finish Payment</button>\r\n        ) : (\r\n          <button onClick={() => buy(\"yearly\")} className=\"membershipPay\">Finish Payment</button>\r\n        )\r\n      \r\n      }\r\n\r\n    </Fragment>\r\n  )\r\n  console.log(duration)\r\n  \r\n  if(payment && payment.paymentComplete) {\r\n    return <Redirect to=\"/membership/success\"/>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"MembershipCheckoutCtn\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 offset-lg-2\">\r\n              <div className=\"paypal\">\r\n                <h1>{ duration === \"monthly\" ? \"Monthly Subscription\" : \"Annual Subscription\"}</h1>\r\n                <div className=\"discountCtn\">\r\n                  <input type=\"text\" placeholder=\"Discound Code\"/><button>Apply</button>\r\n                </div>\r\n                \r\n                <div className=\"MembershipTotal\">\r\n                  <span>Total to pay:</span>\r\n                  <span>${ duration === \"monthly\" ? \"24.99\" : \"179.88\"} USD</span>\r\n                </div>\r\n                {showDropIn()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  paymentToken: state.payment.paymentToken,\r\n  payment: state.payment,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { payAction, membershipPayment })(MembershipCheckout);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipSuccess.js",["346","347","348","349"],"import React, {Fragment, useEffect} from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { resetPaymentResult } from '../../actions/payments';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\n\r\nconst MembershipSuccess = ({auth, payment}) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1>Your membership is now active</h1>\r\n            <h1>You will receive an email soon</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  active: state.auth.active,\r\n  courses: state.courses,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps)(MembershipSuccess);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Activate.js",["350","351"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activateEmail } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { RESET_MESSAGE } from '../../contants/authConstants';\r\nconst Activate = ({ history }) => {\r\n\r\n  // if (!isAuthenticated) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { isAuthenticated, user, message, loading } = auth;\r\n\r\n  // useEffect(() => {\r\n  //   if(!isAuthenticated && !loading ) {\r\n  //     history.push('/');\r\n  //   }\r\n  // }, [isAuthenticated, loading])\r\n\r\n  useEffect(() => {\r\n    if(user && !loading) {\r\n      dispatch({ type: RESET_MESSAGE });\r\n    } else if (!loading && !user) {\r\n      history.push('/');\r\n    }\r\n  }, [user, loading])\r\n\r\n  const email = user && user.email;\r\n\r\n  const sendEmail = () => {\r\n    dispatch(activateEmail({ email }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>Please confirm Email Address</h1>\r\n            <h4>To activate your account</h4>\r\n            <button className=\"btn btn-success\" onClick={sendEmail}>Resend Email Activation</button>\r\n            {message && (\r\n              <h5>{message}</h5>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Activate;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CheckoutSuccess.js",["352","353","354"],"import React, { useState, useEffect} from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { resetPaymentResult } from '../../actions/payments';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport store from '../../store';\r\nimport './CheckoutSuccess.css';\r\n\r\nconst CheckoutSuccess = ({auth, payment}) => {\r\n\r\n  const [page, setPage] = useState({\r\n    loaded: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    //     console.log(auth);\r\n    // console.log(active == 'notActive');\r\n    // console.log(!auth.loading)\r\n\r\n    store.dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n    store.dispatch(resetPaymentResult());\r\n    // console.log(auth);\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if( auth && auth.isAuthenticated ) {\r\n      setPage({\r\n        loaded: true\r\n      })\r\n    }\r\n    \r\n  }, [auth && auth.isAuthenticated]);\r\n\r\n  if( auth && !auth.isAuthenticated && page.loaded) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>Thank you! Your Order is Complete</h1>\r\n            <h4>You will receive an email confirmation shortly.</h4>\r\n            <Link className=\"checkoutSuccessBtn\" to=\"/courses\">Start Learning</Link>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  active: state.auth.active,\r\n  courses: state.courses,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutSuccess);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ForgotPassword.js",["355","356"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { fgt_pass, resetMessage } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './ForgotPassword.css';\r\n\r\nconst ForgotPassword = ({ fgt_pass, resetMessage, auth }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: ''\r\n  });\r\n\r\n  const [message, setMessage] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    console.log(\"reseting the message, in forgotpass\");\r\n    resetMessage();\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMessage(auth.message);\r\n    \r\n  }, [auth.message]);\r\n\r\n  const { email } = formData;\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    fgt_pass({ email });\r\n    // removeMessage();\r\n    \r\n  }\r\n\r\n  // const removeMessage = () => {\r\n  //   setTimeout(()=> {\r\n  //     setMessage(\"\");\r\n  //   }, 7000);\r\n  // }\r\n\r\n  console.log(message);\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"forgotPasswordCtn\">\r\n        {/* <h1 className=\"large text-primary\">Forgot Password</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Please enter your email address</p> */}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 offset-3\">\r\n              <div className=\"card forgotPasswordCard\">\r\n                <h1 className=\"loginTitle\"><i className=\"fas fa-envelope\"></i>Please enter your email address</h1>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <input type=\"submit\" className=\"btn btn-success\" value=\"Reset Password\" />\r\n                </form>\r\n                <h1 className=\"forgotPasswordMessage\">{message}</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { fgt_pass, resetMessage })(ForgotPassword);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseUpdate.js",["357","358"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCourse } from '../../actions/courses';\r\nimport { updateCourseAction } from '../../actions/courses';\r\nimport AdminSidebar from '../partials/AdminSidebar';\r\nimport './Admin.css'\r\n\r\nconst CourseUpdate = ({ course, auth, updateCourseAction }) => {\r\n\tconsole.log(auth);\r\n\r\n\tconst [courseState, setCourseState] = useState({\r\n\t\tid: \"\",\r\n\t\tcourseName: \"\",\r\n\t\tcourseIntro: \"\",\r\n\t\tcourseTag: \"\",\r\n\t\tcourseDescription: \" \",\r\n\t\tcoursePrice: \"\",\r\n\t\tclasses: [ {\r\n\t\t\tlecture: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\turl: \"\",\r\n\t\t\tduration: 0\r\n\t\t}],\r\n\t\tloaded: false\r\n\t});\r\n\r\n\tconst { courseTag } = useParams();\r\n\r\n\tuseEffect( () => {\r\n\t\tsetCourseValues();\r\n\t}, [courseState.loaded]);\r\n\t\r\n\tconst setCourseValues = async () => {\r\n\t\tawait store.dispatch(getCourse(courseTag));\r\n\r\n\t\tif( course && course.data && course.data._id ) {\r\n\t\t\tfor( let i=0; i < course.data.classes.length; i++) {\r\n\t\t\t\tdelete course.data.classes[i]._id\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tid: course && course.data && course.data._id,\r\n\t\t\tcourseName: course && course.data && course.data.name,\r\n\t\t\tcourseIntro: course && course.data && course.data.intro,\r\n\t\t\tcourseTag: course && course.data && course.data.tag,\r\n\t\t\tcourseDescription: course && course.data && course.data.description,\r\n\t\t\tcoursePrice: parseInt(course && course.data && course.data.price),\r\n\t\t\tclasses: course && course.data && course.data.classes,\r\n\t\t\tloaded: true\r\n\t\t})\r\n\t}\r\n\r\n\tconst addClass = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tclasses: [ ...courseState.classes, {\r\n\t\t\t\tlecture: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\turl: \"\",\r\n\t\t\t\tduration: 0\r\n\t\t\t} ]\r\n\t\t});\r\n\t}\r\n\r\n\tconst updateCourse = (e) => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateClass = (e) => {\r\n\t\t\r\n\t\tconst index = e.target.parentElement.firstChild.value;\r\n    console.log(\"current index is \" + index);\r\n\t\tconst stateRef = { ...courseState };\r\n\r\n\t\tif( e.target.name === ( \"duration\" || \"lecture\") ) {\r\n\t\t\tstateRef.classes[index][e.target.name] = parseInt( e.target.value );\r\n\t\t} else {\r\n\t\t\tstateRef.classes[index][e.target.name] = e.target.value;\r\n\t\t}\r\n\t\tsetCourseState(stateRef);\r\n\t}\r\n\t\t\r\n\tconst allClasses = courseState.classes && courseState.classes.length > 0 && courseState.classes.map( (theClass, i) => {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div key={i}>\r\n\t\t\t\t<input type=\"hidden\" value={i}/>\r\n\t\t\t\t<input type=\"number\" name=\"lecture\" placeholder=\"lecture\" onChange={updateClass} value={courseState.classes[i].lecture} />\r\n\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\" onChange={  updateClass } value={courseState.classes[i].title} />\r\n\t\t\t\t<input type=\"text\" name=\"url\" placeholder=\"url\" onChange={  updateClass } value={courseState.classes[i].url} />\r\n\t\t\t\t<input type=\"number\" name=\"duration\" placeholder=\"duration\" onChange={  updateClass } value={courseState.classes[i].duration} />\r\n\t\t\t</div>\r\n\t\t\t// value={courseState.classes[i].lecture}\r\n\t\t)\r\n\t});\r\n\r\n\tconsole.log( course )\r\n\tconsole.log(courseState);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<AdminSidebar />\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Update the Course</h1>\r\n\t\t\t\t\t\t\t<label>Name</label><input required type=\"text\" name=\"courseName\" onChange={updateCourse} value={courseState.loaded ? courseState.courseName : \" \"} size=\"50\"/><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Intro</label><input required type=\"text\" name=\"courseIntro\" onChange={updateCourse} value={courseState.loaded ? courseState.courseIntro : \"\"} size=\"70\"/><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Tag</label><input required type=\"text\" name=\"courseTag\" onChange={updateCourse} value={courseState.loaded ? courseState.courseTag : \"\"} size=\"50\"/><br/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<label>Course Description</label><br/>\r\n\t\t\t\t\t\t\t\t<textarea required type=\"text\" name=\"courseDescription\" onChange={updateCourse} rows=\"15\" cols=\"80\" value={courseState.loaded ? courseState.courseDescription : \"\"} /><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Price</label><input required type=\"number\" name=\"coursePrice\" onChange={updateCourse} value={courseState.loaded ? courseState.coursePrice : \"\"} /><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Classes</label>\r\n\t\t\t\t\t\t\t\t{allClasses}\r\n\t\t\t\t\t\t\t\t<button onClick={addClass}>Add Class</button>\r\n\t\t\t\t\t\t\t\t<button onClick={() => updateCourseAction(courseState)}>Update Course</button>\r\n\t\t\t\t\t\t\t\t{ course && course.message ? \r\n\t\t\t\t\t\t\t\t\t<h1>{course.message}</h1> : null }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcourse: state.courses,\r\n\tauth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { updateCourseAction })(CourseUpdate);\r\n\r\n\r\n",["359","360"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ResetPassword.js",["361","362"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { reset_pass } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './ResetPassword.css';\r\n\r\nconst ResetPassword = ({history}) => {\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    passwordConfirm: '',\r\n    error: ''\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { message, isAuthenticated } = auth;\r\n\r\n  let { token } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/\");\r\n    } else if(message === 'Password reseted') {\r\n      setTimeout(() => {\r\n        return <Redirect to=\"/profile\" />\r\n      }, 3000);\r\n    }\r\n    \r\n  }, [isAuthenticated, message])\r\n\r\n  const { password, passwordConfirm, error } = formData;\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== passwordConfirm) {\r\n      setFormData({ ...formData, error: 'Passwords are not the same' });\r\n    } else {\r\n      dispatch(reset_pass({ password, passwordConfirm, token }));\r\n      setFormData({ ...formData, error: '' });\r\n    }\r\n\r\n  }\r\n  console.log(\"My token frontend is \" + token);\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  } else if(message === 'Password reseted') {\r\n    setTimeout(() => {\r\n      return <Redirect to=\"/profile\" />\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"forgotPasswordCtn\">\r\n        {/* <h1 className=\"large text-primary\">Forgot Password</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Please enter your email address</p> */}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 offset-3\">\r\n              <div className=\"card forgotPasswordCard\">\r\n                <h1 className=\"loginTitle\"><i className=\"fas fa-user\"></i> Please enter your new password</h1>\r\n                \r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" placeholder=\"Confirm Password\" name=\"passwordConfirm\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <input type=\"submit\" className=\"btn btn-success\" value=\"Update Password\" />\r\n                </form>\r\n                {error && (\r\n                  <h1 className=\"passwordUpdateMessage\">{error}</h1>\r\n                )}\r\n                {message && (\r\n                  <h1 className=\"passwordUpdateMessage\">{message}</h1>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  message: state.auth.message,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default ResetPassword;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ActivateEmail.js",["363","364","365"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { activateEmailAction } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport Loader from '../utils/Loader';\r\n\r\nconst ActivateEmail = ({ history }) => {\r\n  const { token } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { user, message, active, loading } = auth;\r\n\r\n  console.log(\"This is my token \" + token);\r\n  useEffect(() => {\r\n    console.log(\"This is My Message+++++\");\r\n    console.log(message);\r\n    dispatch(activateEmailAction(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current message is\");\r\n    console.log(message);\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>{message}</h1>\r\n            {loading ? <Loader /> : message === \"You are Activated\" ? (\r\n              <Link to='/courses' className='btn btn-success'>Start learning</Link>\r\n            ) : (\r\n                <Link to='/activate' className='btn btn-success'>Activate account</Link>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActivateEmail;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminCtn.js",["366"],"import React, { memo, useEffect } from 'react'\r\nimport AdminSidebar from './AdminSidebar';\r\nimport UserProfile from './UserProfile';\r\nimport Courses from './Courses';\r\nimport CourseCreate from './CourseCreate';\r\nimport CourseUpdate from './CourseUpdate';\r\nimport FeatureCourses from './FeatureCourses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { useSelector } from 'react-redux';\r\nimport AllUsers from './AllUsers';\r\nimport Sales from './Sales';\r\nimport Coupons from './Coupons';\r\nimport NewCoupon from './NewCoupon';\r\nimport EditCoupon from './EditCoupon';\r\n\r\nconst AdminCtn = ({match, history}) => {\r\n  // console.log(match);\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  useEffect(() => {\r\n    if (active === 'notActive' && !auth.loading) {\r\n      console.log(\"inside redirect\");\r\n      history.push(\"/activate\");\r\n    } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [auth, active]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"profileCtn\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <AdminSidebar />\r\n            { (match.params.page === \"courses\" && !match.params.subPage) ? <Courses /> : null }\r\n            { match.params.page === \"courses\" ? (match.params.subPage === \"create\" ? <CourseCreate /> : null) : null }\r\n            { match.params.page === \"courses\" ? (match.params.subPage === \"update\" ? <CourseUpdate /> : null) : null }\r\n            { match.params.page === \"user\" ? <UserProfile /> : null }\r\n            { match.params.page === \"featureCourses\" ? <FeatureCourses /> : null }\r\n            { match.params.page === \"users\" ? <AllUsers /> : null }\r\n            { match.params.page === \"sales\" ? <Sales /> : null }\r\n            { match.params.page === \"coupons\" && !match.params.subPage ? <Coupons /> : null }\r\n            { match.params.page === \"coupons\" ? (match.params.subPage === \"new\" ? <NewCoupon /> : null) : null }\r\n            { match.params.page === \"coupons\" ? (match.params.subPage === \"edit\" ? <EditCoupon /> :null) : null }\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(AdminCtn);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCtn.js",["367"],"import React, { memo, useEffect } from 'react'\r\nimport ProfileSidebar from './ProfileSidebar';\r\nimport Profile from './Profile';\r\nimport ProfileBilling from './ProfileBilling';\r\nimport ProfileCourses from './ProfileCourses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProfileCtn = ({match, history}) => {\r\n  console.log(match);\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  useEffect(() => {\r\n    if (active === 'notActive' && !auth.loading) {\r\n      console.log(\"inside redirect\");\r\n      history.push(\"/activate\");\r\n    } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [auth, active]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"profileCtn\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <ProfileSidebar />\r\n            { match.params.page === \"courses\" ? <ProfileCourses /> \r\n            : match.params.page === \"billing\" ? <ProfileBilling />\r\n            : <Profile />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(ProfileCtn);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseCreate.js",["368","369","370","371","372"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nimport { createCourseAction } from '../../actions/courses';\r\nimport './Admin.css'\r\nimport ImageUpload from '../utils/imageUpload';\r\n\r\n\r\nconst CourseCreate = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst auth = useSelector(state => state.auth);\r\n\tconst course = useSelector(state => state.courses);\r\n\r\n\tconst [courseState, setCourseState] = useState({\r\n\t\tcourseName: \"\",\r\n\t\tcourseIntro: \"\",\r\n\t\tcourseTag: \"\",\r\n\t\tcourseDescription: [],\r\n\t\tcoursePrice: \"\",\r\n\t\tclasses: [{\r\n\t\t\tlecture: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\turl: \"\",\r\n\t\t\tduration: 0\r\n\t\t}],\r\n\t});\r\n\tconst [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\tconst addClass = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tclasses: [...courseState.classes, {\r\n\t\t\t\tlecture: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\turl: \"\",\r\n\t\t\t\tduration: 0\r\n\t\t\t}]\r\n\t\t});\r\n\t}\r\n\r\n\tconst updateCourse = (e) => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateClass = (e) => {\r\n\r\n\t\tconst index = e.target.parentElement.firstChild.value;\r\n\t\tconsole.log(\"current index is \" + index);\r\n\t\tconst stateRef = { ...courseState };\r\n\r\n\t\tstateRef.classes[index][e.target.name] = e.target.value;\r\n\t\tsetCourseState(stateRef);\r\n\t}\r\n\r\n\tconst allClasses = courseState.classes.map((theClass, i) => {\r\n\r\n\t\treturn (\r\n\t\t\t<div key={i}>\r\n\t\t\t\t<input type=\"hidden\" value={i} />\r\n\t\t\t\t<input type=\"text\" name=\"lecture\" placeholder=\"lecture\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"url\" placeholder=\"url\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"duration\" placeholder=\"duration\" onChange={updateClass} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t});\r\n\r\n\r\n\tconst saveBlogDetails = () => {\r\n\t\tsetEditorState(editorState);\r\n\t}\r\n\r\n\tconst createCourse = () => {\r\n\t\t// editor.save().then((outputData) => {\r\n\t\t// \tconsole.log(outputData);\r\n\t\t// \tsetCourseState({\r\n\t\t// \t\t...courseState,\r\n\t\t// \t\tcourseDescription: outputData\r\n\t\t// \t})\r\n\t\t// })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (courseState.courseDescription.length > 0) {\r\n\t\t\tdispatch(createCourseAction(courseState));\r\n\t\t}\r\n\t}, [courseState.courseDescription]);\r\n\r\n\tconst onEditorStateChange = (editorState) => {\r\n\t\tsetEditorState(editorState);\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tcourseDescription: draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n\t\t})\r\n\t}\r\n\r\n\tconsole.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Create your Course</h1>\r\n\t\t\t\t\t\t\t\t<ImageUpload courseTag={courseState.courseTag} />\r\n\t\t\t\t\t\t\t\t<label>Name</label><input required type=\"text\" name=\"courseName\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Intro</label><input required type=\"text\" name=\"courseIntro\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Tag</label><input required type=\"text\" name=\"courseTag\" onChange={updateCourse} /><br />\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Description</label><br />\r\n\t\t\t\t\t\t\t\t{/* <textarea id=\"editorjs\" required type=\"text\" name=\"courseDescription\" onChange={updateCourse} rows=\"15\" cols=\"80\" /><br /> */}\r\n\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\t\t\ttoolbarClassName=\"toolbarClassName\"\r\n\t\t\t\t\t\t\t\t\twrapperClassName=\"wrapperClassName\"\r\n\t\t\t\t\t\t\t\t\teditorClassName=\"editorClassName\"\r\n\t\t\t\t\t\t\t\t\tonEditorStateChange={onEditorStateChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Price</label><input required type=\"text\" name=\"coursePrice\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Classes</label>\r\n\t\t\t\t\t\t\t\t{allClasses}\r\n\t\t\t\t\t\t\t\t<button onClick={addClass}>Add Class</button>\r\n\t\t\t\t\t\t\t\t<button onClick={createCourse}>Create Course</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CourseCreate;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\types.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\authConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\userConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\courses.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseCard.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileBilling.js",["373","374"],"import React, { useEffect } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { checkMembership, cancelMembership, membershipResubscribe } from '../../actions/membership';\r\nimport { getBilling } from '../../actions/payments';\r\nimport './Profile.css';\r\n\r\nfunction ProfileBilling() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const payment = useSelector(state => state.payment);\r\n  \r\n  useEffect(() => {\r\n\r\n    dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n    // console.log(\"before check membership \");\r\n    if (auth && auth.user && auth.user.membership && auth.user.membership.customerId) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n\r\n    dispatch(getBilling());\r\n\r\n    // console.log(auth);\r\n  }, [auth && auth.user && auth.user._id]);\r\n \r\n  const userBilling = payment && payment.billing && payment.billing.map((bill) => {\r\n    const date = new Date(bill.date);\r\n    const newDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    return (\r\n      <div key={bill._id} className=\"row billingRow\">\r\n        <div className=\"col-2\"><h4>{newDate}</h4></div>\r\n        <div className=\"col-3\"><h4>{bill.productName}</h4></div>\r\n        <div className=\"col-3\"><h4>{bill._id}</h4></div>\r\n        <div className=\"col-2\"><h4>${bill.price}</h4></div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const untilDate = new Date(auth && auth.membership.paidThroughDate);\r\n  const newUntilDate = `${untilDate.getDate()}/${untilDate.getMonth() + 1}/${untilDate.getFullYear()}`;\r\n\r\n  return (\r\n    <div className=\"col-lg-9 col-md-12 col-sm-12 billingCtn\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          Membership Details\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {auth && auth.membership && !auth.membership.active && (\r\n            <h3><b>Membership Status:</b> Not active</h3>\r\n          )}\r\n          {auth && auth.membership.active && (\r\n            <>\r\n              <h3><b>Membership Status:</b> {auth && auth.membership.status}</h3>\r\n              <h3><b>Membership Valid Until:</b> {newUntilDate}</h3>\r\n            </>\r\n          )}\r\n          {auth && auth.membership.status === \"Active\" && (\r\n            <button className=\"cancelMembership\" onClick={() => dispatch(cancelMembership(auth && auth.token))}>Cancel Membership</button>\r\n          )}\r\n          {auth && auth.membership.status === \"Canceled\" && auth && auth.user &&\r\n            auth.user.membership && auth.user.membership.billingHistory && auth.user.membership.billingHistory.length > 0 && (\r\n              <button onClick={() => dispatch(membershipResubscribe(auth && auth.token))} className=\"actionButton\">Resubscribe</button>\r\n            )}\r\n          {auth && auth.membership && auth.membership.status === \"Failed\" && (\r\n            <Link to=\"/membership\">Add a new payment method</Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <h2><b>Billing History</b></h2>\r\n      <div className=\"userBillingCtn\">\r\n        <div className=\"billingScroll\">\r\n          <div className=\"row userBillingHistoryTitle\">\r\n            <div className=\"col-2\"><h4>Date - dd/mm/yyyy</h4></div>\r\n            <div className=\"col-3\"><h4>Product Name</h4></div>\r\n            <div className=\"col-3\"><h4>Order Number</h4></div>\r\n            <div className=\"col-2\"><h4>Sale Price</h4></div>\r\n          </div>\r\n          <hr />\r\n          {userBilling}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileBilling;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCourses.js",["375","376","377","378","379"],"import React, { useEffect, Fragment, useState, useRef } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { checkMembership } from '../../actions/membership';\r\nimport Loader from '../utils/Loader';\r\nimport './Profile.css';\r\n\r\nfunction ProfileCourses() {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading } = auth;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n\r\n    console.log(\"before check membership \");\r\n    if (auth && auth.user && auth.user.membership && auth.user.membership.customerId) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n  }, [auth && auth.user && auth.user._id]);\r\n\r\n  const coursesimage = require.context('../../images/courses', true);\r\n\r\n  const allCourses = auth && auth.coursesOwned.map((course, index) => {\r\n    let img = \"\";\r\n    if (course && course.hasThumbnail) {\r\n      img = coursesimage(`./${course.tag}.jpg`);\r\n    } else {\r\n      img = coursesimage(`./default-course.jpg`);\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-xl-3 col-lg-4 col-md-6\" key={index}>\r\n        <div className=\"cardBorder\">\r\n          <div className=\"courseThumbnail courseFeatured1\">\r\n            <Link to={`/courses/${course.tag}/lessons/1`}>\r\n              <img src={img.default} alt=\"javascript\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"courseTitleCtn\">\r\n            <Link to={`/courses/${course.tag}/lessons/1`}>{course.name}</Link>\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div className=\"priceCtn\">\r\n            <span className=\"studentNumbers\"><i className=\"fas fa-user\"></i> Telmo Sampaio</span><span className=\"price\">${course.price}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"col-lg-9 col-md-8\">\r\n      <div className=\"myCoursesCtn\">\r\n        <h1>My Courses</h1>\r\n        <div className=\"row\">\r\n          {loading ? <Loader /> : allCourses.length > 0 ? allCourses :\r\n            <div className=\"col-12\">\r\n              <h2>No courses owned...</h2>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileCourses.propTypes = {\r\n  // getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n  // profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileCourses;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AllUsers.js",["380","381","382","383","384","385","386"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allUsersAction } from '../../actions/admin';\r\nimport { saveUsersAction, deleteUsersAction } from '../../actions/admin';\r\n// import ModalWindow from '../utils/ModalWindow';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport './AllUsers.css'\r\n\r\nconst AllUsers = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { users, loading } = admin;\r\n  // const courses = useSelector(state => state.courses);\r\n\r\n  const [stateUsers, setStateUsers] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [userSelected, setUserSelected] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const [orderState, setOrderState] = useState({\r\n    orderName: \"\",\r\n    asc: false\r\n  });\r\n\r\n  const [pageUsers, setPageUsers] = useState({\r\n    usersPerPage: 3,\r\n    values: [],\r\n    number: 1,\r\n    firstPage: 0,\r\n    lastPage: 1\r\n  });\r\n\r\n  const removeAdminFromUsers = users.filter(user => {\r\n    return user.role !== \"admin\";\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(allUsersAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setStateUsers(removeAdminFromUsers);\r\n    }\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    // console.log(stateUsers);\r\n    const findSelected = stateUsers.find(user => {\r\n      // console.log(user);\r\n      return user.selected\r\n    });\r\n    // console.log(findSelected);\r\n\r\n    setUserSelected(Boolean(findSelected));\r\n\r\n    setPageUsers({\r\n      ...pageUsers,\r\n      values: paginate(stateUsers, pageUsers.usersPerPage, 1),\r\n      number: 1,\r\n      firstPage: 0,\r\n      // lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1).length\r\n      lastPage: 1\r\n    });\r\n  }, [stateUsers]);\r\n\r\n  function paginate(array, page_size, page_number) {\r\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n  }\r\n\r\n  const selectUsers = (usersSelected, event) => {\r\n    // console.log(stateUsers);\r\n    console.log(event.target.type)\r\n    if (usersSelected === \"all\") {\r\n      const selectAllUsers = stateUsers.map((user, i) => {\r\n        // if () {\r\n        // console.log(user);\r\n        // console.log(selectAll)\r\n        return {\r\n          ...user,\r\n          selected: !selectAll,\r\n          key: i\r\n        }\r\n        // }\r\n      });\r\n\r\n      const filteredUsers = selectAllUsers.filter(user => {\r\n        return user.role !== \"admin\";\r\n      });\r\n\r\n      console.log(filteredUsers)\r\n      setStateUsers(filteredUsers);\r\n      setSelectAll(!selectAll);\r\n    } else {\r\n      const selectAllCopy = [...stateUsers];\r\n      // selectAllCopy[usersSelected].selected = !selectAllCopy[usersSelected].selected;\r\n      selectAllCopy[usersSelected].selected = event.target.checked;\r\n\r\n      setStateUsers(selectAllCopy);\r\n    }\r\n\r\n  }\r\n\r\n  const allUsers = pageUsers.values.map((user, i) => {\r\n    if (user.role !== \"admin\") {\r\n      const today = new Date();\r\n      const joinedDate = new Date(user.joined);\r\n      const newJoinedDate = `${('0' + joinedDate.getDate()).slice(-2)}/${('0' + joinedDate.getMonth() + 1).slice(-2)}/${joinedDate.getFullYear()}`;\r\n      // console.log(\"Inside all Users\");\r\n      // console.log(user.selected)\r\n      const lastLogin = new Date(user.lastLogin);\r\n      const lastLoginDate = () => {\r\n        if (today.getDate() === lastLogin.getDate() &&\r\n          today.getMonth() === lastLogin.getMonth() &&\r\n          today.getFullYear() === lastLogin.getFullYear()\r\n        ) {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - Today`\r\n        } else {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - ${lastLogin.getDate()}/${lastLogin.getMonth() + 1}/${lastLogin.getFullYear()}`;\r\n        }\r\n      }\r\n      return (\r\n        <tr key={user._id}>\r\n          <td>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={user.selected == null ? false : user.selected}\r\n              value={user.selected}\r\n              onChange={(e) => { selectUsers(i, e) }}\r\n            />\r\n            <div className=\"allUsersTableDiv\"><Link to={`/admin/user/${user._id}`}>{user.name}</Link></div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.email}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.active}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">${user.purchases} USD</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{newJoinedDate}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{lastLoginDate()}</div>\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n  })\r\n\r\n  const orderBy = (order) => {\r\n    console.log(\"ordering by date\");\r\n    removeAdminFromUsers.sort(function (a, b) {\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      if (order === \"date\") {\r\n        if (orderState.orderName === \"date\" && orderState.asc) {\r\n          return new Date(a.joined) - new Date(b.joined);\r\n        } else {\r\n          return new Date(b.joined) - new Date(a.joined);\r\n        }\r\n      } else if (order === \"purchases\") {\r\n        if (orderState.orderName === \"purchases\" && orderState.asc) {\r\n          return a.purchases - b.purchases;\r\n        } else {\r\n          return b.purchases - a.purchases;\r\n        }\r\n      } else if (order === \"email\") {\r\n        if (orderState.orderName === \"email\" && orderState.asc) {\r\n          if (a.email > b.email) { return -1; }\r\n          if (a.email < b.email) { return 1; }\r\n        } else {\r\n          if (a.email < b.email) { return -1; }\r\n          if (a.email > b.email) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"name\") {\r\n        let nameA = a.name.toLowerCase();\r\n        let nameB = b.name.toLowerCase();\r\n\r\n        if (orderState.orderName === \"name\" && orderState.asc) {\r\n          if (nameA > nameB) { return -1; }\r\n          if (nameA < nameB) { return 1; }\r\n        } else {\r\n          if (nameA < nameB) { return -1; }\r\n          if (nameA > nameB) { return 1; }\r\n        }\r\n\r\n        return 0;\r\n      } else if (order === \"active\") {\r\n        let activeA = a.active.toLowerCase();\r\n        let activeB = b.active.toLowerCase();\r\n\r\n        if (orderState.orderName === \"active\" && orderState.asc) {\r\n          if (activeA < activeB) { return -1; }\r\n          if (activeA > activeB) { return 1; }\r\n        } else {\r\n          if (activeA > activeB) { return -1; }\r\n          if (activeA < activeB) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"lastLogin\") {\r\n        if (orderState.lastLogin === \"date\" && orderState.asc) {\r\n          return new Date(a.lastLogin) - new Date(b.lastLogin);\r\n        } else {\r\n          return new Date(b.lastLogin) - new Date(a.lastLogin);\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    setStateUsers(removeAdminFromUsers);\r\n    // setTest({ loading: false })\r\n    setOrderState({\r\n      orderName: order,\r\n      asc: !orderState.asc\r\n    })\r\n  }\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    const selectedUsers = stateUsers.filter((user) => {\r\n      return user.selected\r\n    });\r\n\r\n    console.log(selectedUsers)\r\n\r\n    if (selectedUsers.length > 0) {\r\n      let title = \"\";\r\n      // let users = selectedUsers.map(user => {\r\n      //   return user._id;\r\n      // })\r\n      if (e.target.value === \"activate\") {\r\n        title = \"Activate Users\"\r\n      } else if (e.target.value === \"delete\") {\r\n        title = \"Delete Users\"\r\n      }\r\n\r\n      setModalText({\r\n        title: title,\r\n        action: e.target.value,\r\n        users: selectedUsers\r\n      });\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  const saveChanges = () => {\r\n    console.log(\"inside save changes\");\r\n    if (modalText.action === \"activate\") {\r\n      dispatch(saveUsersAction(modalText));\r\n    } else if (modalText.action === \"delete\") {\r\n      dispatch(deleteUsersAction(modalText));\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n  const movePage = (direction) => {\r\n    if (direction === \"previous\") {\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 1),\r\n        number: pageUsers.number - 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 2).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length\r\n      })\r\n    } else {\r\n      console.log(pageUsers.number);\r\n      console.log(paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length);\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1),\r\n        number: pageUsers.number + 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 2).length\r\n      })\r\n    }\r\n  }\r\n\r\n  const findUser = (e) => {\r\n    console.log(\"find a user\");\r\n    // console.log(e.target.value);\r\n    const text = e.target.value.toLowerCase();\r\n    console.log(text);\r\n    const filteredusers = removeAdminFromUsers.filter((user) => {\r\n      console.log(user.name)\r\n      return (user.name.toLowerCase().indexOf(text) > -1 || user.email.toLowerCase().indexOf(text) > -1);\r\n    })\r\n\r\n    console.log(filteredusers);\r\n    setStateUsers(filteredusers);\r\n  }\r\n\r\n  console.log(pageUsers);\r\n\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <h5 className=\"mb-4\">Showing 1 - 25 of {stateUsers.length} Students</h5>\r\n          <div className=\"row\">\r\n            <Col sm=\"5\">\r\n              <Form.Control className=\"my-3 input-md\" type=\"text\" placeholder=\"Find a user\" onChange={findUser} />\r\n            </Col>\r\n          </div>\r\n          <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={(e) => { selectUsers(\"all\", e) }}\r\n                  />\r\n                  {userSelected ? (\r\n                    <select defaultValue={'DEFAULT'} onChange={handleChange}>\r\n                      <option value=\"DEFAULT\" disabled>Bulk Actions</option>\r\n                      <option value=\"activate\">Activate</option>\r\n                      <option value=\"delete\">Delete</option>\r\n                    </select>\r\n                  ) : (\r\n                      <span onClick={() => orderBy(\"name\")}>Name</span>\r\n                    )}\r\n                </th>\r\n                <th onClick={() => orderBy(\"email\")}>Email</th>\r\n                <th onClick={() => orderBy(\"active\")}>Active</th>\r\n                <th onClick={() => orderBy(\"purchases\")}>Purchases</th>\r\n                <th onClick={() => orderBy(\"date\")}>Joined</th>\r\n                <th onClick={() => orderBy(\"lastLogin\")}>Last login</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allUsers.length > 0 ? allUsers : <h3 className=\"my-3\">No Users found</h3>}\r\n            </tbody>\r\n            {/* <h1>{!test.loading ? \"Working\" : null}</h1> */}\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <nav aria-label=\"Page navigation example\" className=\"mt-3\">\r\n            <ul className=\"pagination justify-content-center\">\r\n              <li className={pageUsers.firstPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"previous\")} className=\"page-link\" href=\"#\">Previous</a>\r\n              </li>\r\n              <li className={pageUsers.lastPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"next\")}\r\n                  className=\"page-link\"\r\n                  href=\"#\">Next</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to {modalText.action} the following users?</p>\r\n          {modalText.users.map((user, i) => {\r\n            return <p key={i}><b>{user.name}</b></p>;\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllUsers\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\Profile.js",["387","388","389","390","391","392"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { updateUserAction } from '../../actions/auth';\r\nimport { checkMembership } from '../../actions/membership';\r\nimport './Profile.css';\r\n\r\nfunction Profile( ) {\r\n  const [cropState, setCropState] = useState({\r\n    src: null,\r\n    crop: {\r\n      aspect: 1,\r\n      height: 297,\r\n      unit: \"px\",\r\n      width: 297,\r\n      x: 0,\r\n      y: 0\r\n    }\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  const [page, setPage] = useState({\r\n    loaded: false,\r\n    showImagePreview: false\r\n  });\r\n\r\n  const [userDetails, setUserDetails] = useState({\r\n    name: '',\r\n    newPassword: '',\r\n    newPasswordConfirm: '',\r\n    password: '',\r\n    error: ''\r\n  })\r\n\r\n  const [imageUpload, setImageUpload] = useState({\r\n    error: ''\r\n  })\r\n\r\n  const loaderDelay = () => {\r\n    setTimeout(() => {\r\n      setPage({ ...page, loaded: true })\r\n    }, 500);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n    console.log(\"before check membership \");\r\n    if (auth && auth.user && auth.user.membership && auth.user.membership.customerId) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n\r\n    setUserDetails({\r\n      ...userDetails,\r\n      name: auth && auth.user && auth.user.name\r\n    })\r\n\r\n    // console.log(auth);\r\n  }, [auth && auth.user && auth.user._id]);\r\n\r\n  const updateUserDetails = (event) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  const submitUserDetails = (event) => {\r\n    event.preventDefault();\r\n    if (userDetails.newPassword !== userDetails.newPasswordConfirm) {\r\n      setUserDetails({\r\n        ...userDetails,\r\n        error: \"Passwords do not match\"\r\n      })\r\n    }\r\n\r\n    dispatch(updateUserAction(auth && auth.token, userDetails));\r\n  }\r\n\r\n  const imageMaxSize = 2000000 // bytes\r\n  const acceptedFileTypes = 'image/png, image/jpg, image/jpeg, image/gif';\r\n  const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => { return item.trim() });\r\n  //let imageRef = null;\r\n  let imageRef = useRef();\r\n  let fileRef = useRef();\r\n\r\n  let userPic = null;\r\n  const images = require.context('../../images/', true);\r\n\r\n  let img;\r\n\r\n  if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n    // import Pic from `/${auth.user._id}.jpg`;\r\n    // userPic = <img src={`/${auth.user._id}.jpg`} />\r\n    img = images(`./${auth.user._id}.jpg`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" onLoad={() => setPage({ loaded: true })} />\r\n  } else {\r\n    img = images(`./default.png`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" onLoad={() => setPage({ loaded: true })} />\r\n  }\r\n\r\n  const onSelectFile = e => {\r\n    console.log(\"INSIDE onSelectFile\");\r\n    console.log(e.target.files[0].size);\r\n    console.log(e.target.files[0].type);\r\n    console.log(acceptedFileTypesArray)\r\n\r\n    if (e.target.files[0].size > imageMaxSize) {\r\n      setImageUpload({ error: 'Image size should be less than 2 MB' });\r\n      return\r\n    } else if (!acceptedFileTypesArray.includes(e.target.files[0].type)) {\r\n      setImageUpload({ error: 'Image should be of the type JPG, JPEG, PNG or GIF' });\r\n      return\r\n    }\r\n\r\n    setPage({ ...page, showImagePreview: true })\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      console.log(reader.result);\r\n      reader.addEventListener('load', () => {\r\n\r\n        setCropState({\r\n          ...cropState,\r\n          src: reader.result\r\n        })\r\n        // setPage({ ...page, showImagePreview: true })\r\n      }\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onImageLoaded = async image => {\r\n    console.log(image);\r\n    imageRef.current = image;\r\n  };\r\n\r\n  const onCropComplete = crop => {\r\n    makeClientCrop(crop);\r\n  };\r\n\r\n  const onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    console.log(\"inside onCropChange\");\r\n    setCropState({\r\n      ...cropState,\r\n      crop\r\n    });\r\n  };\r\n\r\n  const makeClientCrop = async (crop) => {\r\n    console.log(imageRef.current);\r\n    if (imageRef.current && crop.width && crop.height) {\r\n      console.log(crop);\r\n      const croppedImageUrl = await getCroppedImg(\r\n        imageRef.current,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      console.log(croppedImageUrl);\r\n      setCropState({\r\n        ...cropState,\r\n        croppedImageUrl: croppedImageUrl\r\n      });\r\n    }\r\n  }\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    console.log(image);\r\n    console.log(crop);\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const reader = new FileReader()\r\n    canvas.toBlob(blob => {\r\n      reader.readAsDataURL(blob)\r\n      reader.onloadend = () => {\r\n        dataURLtoFile(reader.result, `${auth.user._id}.jpg`);\r\n      }\r\n    })\r\n  }\r\n\r\n  const dataURLtoFile = (dataurl, filename) => {\r\n    let arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    let croppedImage = new File([u8arr], filename, { type: mime });\r\n    setCropState({\r\n      ...cropState,\r\n      croppedImage: croppedImage\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', cropState.croppedImage);\r\n    formData.append('userId', auth.user._id);\r\n\r\n    console.log(formData);\r\n\r\n    const res = await axios.post(\"/api/users/profilePic\", formData, config);\r\n    console.log(\"res.data\");\r\n    console.log(res.data);\r\n  }\r\n\r\n  const closeImagePreview = () => {\r\n    setPage({ ...page, showImagePreview: false })\r\n    console.log(fileRef.current);\r\n    fileRef.current.value = null;\r\n    setCropState({\r\n      ...cropState,\r\n      crop: {\r\n        aspect: 1 / 1\r\n      }\r\n    })\r\n  }\r\n\r\n  // if (active == 'notActive' && !auth.loading) {\r\n  //   console.log(\"inside redirect\");\r\n  //   return <Redirect to=\"/activate\" />\r\n  // } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n\r\n  console.log(page);\r\n  // console.log(cropState)\r\n\r\n  return (\r\n\r\n    <div className=\"col-xl-10 col-lg-9 col-md-12 col-sm-12 userRightCol\">\r\n      <div className=\"userDetails\">\r\n        {imageUpload.error &&\r\n          <h1>{imageUpload.error}</h1>\r\n        }\r\n        {!page.loaded && (\r\n          <div className=\"preLoaderProfilePic\">\r\n            <div className=\"spinner-border \" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"uploadButtonCtn\">\r\n          <label htmlFor=\"file\">{userPic}</label>\r\n          <input ref={fileRef} type=\"file\" id=\"file\" accept=\"image/*\" onChange={onSelectFile} />\r\n        </div>\r\n\r\n        {page.showImagePreview && (<div className=\"imagePreviewOverlay\">\r\n          <i className=\"fa fa-times-circle closeOverlay\" onClick={closeImagePreview}></i>\r\n          <h2>Crop your Image</h2>\r\n          {cropState.src && (\r\n            <ReactCrop\r\n              src={cropState.src}\r\n              crop={cropState.crop}\r\n              ruleOfThirds\r\n              onImageLoaded={onImageLoaded}\r\n              onComplete={onCropComplete}\r\n              onChange={onCropChange}\r\n            />\r\n          )}\r\n          {cropState.croppedImageUrl && (\r\n            <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={cropState.croppedImageUrl} />\r\n          )}\r\n          {cropState.src ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <button type=\"submit\" className=\"uploadButton\">Save image</button>\r\n            </form>\r\n          ) : null\r\n          }\r\n        </div>)\r\n        }\r\n\r\n        <h3>Upload a new profile image</h3>\r\n        <form onSubmit={submitUserDetails}>\r\n          <label htmlFor=\"\">Full Name</label>\r\n          <input type=\"text\" placeholder=\"My name\" value={userDetails.name || \"\"} name=\"name\" onChange={updateUserDetails} />\r\n          <label htmlFor=\"\">New Password</label>\r\n          <input type=\"password\" name=\"newPassword\" onChange={updateUserDetails} />\r\n          <label htmlFor=\"\">Confirm Password</label>\r\n          <input type=\"password\" name=\"newPasswordConfirm\" onChange={updateUserDetails} />\r\n\r\n          <hr />\r\n          <label htmlFor=\"\">To save changes, enter current password</label>\r\n          <input type=\"password\" name=\"password\" onChange={updateUserDetails} />\r\n          <p className=\"formError\">{auth && auth.message}</p>\r\n          <button className=\"saveChanges\" type=\"submit\">Save Changes</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseUpdate.js",["393","394","395"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCourse } from '../../actions/courses';\r\nimport { updateCourseAction } from '../../actions/courses';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport { stateFromHTML } from 'draft-js-import-html';\r\n\r\nimport './Admin.css';\r\nimport './CourseUpdate.css';\r\n\r\nconst CourseUpdate = ({ course, auth, updateCourseAction }) => {\r\n\tconsole.log(auth);\r\n\r\n\tconst [courseState, setCourseState] = useState({\r\n\t\tid: \"\",\r\n\t\tcourseName: \"\",\r\n\t\tcourseIntro: \"\",\r\n\t\tcourseTag: \"\",\r\n\t\tcourseDescription: \" \",\r\n\t\tcoursePrice: \"\",\r\n\t\tclasses: [{\r\n\t\t\tlecture: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\turl: \"\",\r\n\t\t\tduration: 0\r\n\t\t}],\r\n\t\tloaded: false\r\n\t});\r\n\r\n\tconst [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\tconst [saveCourse, setSaveCourse] = useState(false);\r\n\r\n\tconst { courseTag } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCourseValues();\r\n\r\n\t}, [courseState.loaded]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (courseState.courseDescription) {\r\n\t\t\tsetEditorState(EditorState.createWithContent(stateFromHTML(courseState.courseDescription)))\r\n\t\t}\r\n\t}, [courseState.courseDescription]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(saveCourse) {\r\n\t\t\tupdateCourseAction(courseState);\r\n\t\t}\r\n\t}, [saveCourse])\r\n\r\n\tconst setCourseValues = async () => {\r\n\t\tawait store.dispatch(getCourse(courseTag));\r\n\r\n\t\tif (course && course.data && course.data._id) {\r\n\t\t\tfor (let i = 0; i < course.data.classes.length; i++) {\r\n\t\t\t\tdelete course.data.classes[i]._id\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tid: course && course.data && course.data._id,\r\n\t\t\tcourseName: course && course.data && course.data.name,\r\n\t\t\tcourseIntro: course && course.data && course.data.intro,\r\n\t\t\tcourseTag: course && course.data && course.data.tag,\r\n\t\t\tcourseDescription: course && course.data && course.data.description,\r\n\t\t\tcoursePrice: parseInt(course && course.data && course.data.price),\r\n\t\t\tclasses: course && course.data && course.data.classes,\r\n\t\t\tloaded: true\r\n\t\t})\r\n\t}\r\n\r\n\tconst addClass = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tclasses: [...courseState.classes, {\r\n\t\t\t\tlecture: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\turl: \"\",\r\n\t\t\t\tduration: 0\r\n\t\t\t}]\r\n\t\t});\r\n\t}\r\n\r\n\tconst updateCourse = (e) => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateClass = (e) => {\r\n\r\n\t\tconst index = e.target.parentElement.parentElement.firstChild.value;\r\n\t\tconsole.log(\"current index is \" + index);\r\n\t\tconst stateRef = { ...courseState };\r\n\t\tconsole.log(e.target.value);\r\n\t\tif (e.target.name === (\"duration\" || \"lecture\")) {\r\n\t\t\tstateRef.classes[index][e.target.name] = parseInt(e.target.value);\r\n\t\t} else {\r\n\t\t\tstateRef.classes[index][e.target.name] = e.target.value;\r\n\t\t}\r\n\t\tsetCourseState(stateRef);\r\n\t}\r\n\r\n\tconst allClasses = courseState.classes && courseState.classes.length > 0 && courseState.classes.map((theClass, i) => {\r\n\r\n\t\treturn (\r\n\t\t\t<div key={i} className=\"card singleClassCtn\">\r\n\t\t\t\t<input type=\"hidden\" value={i} />\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<label htmlFor=\"classNumber\" className=\"col-2\">Class Number</label>\r\n\t\t\t\t\t<input id=\"classNumber\" type=\"number\" name=\"lecture\" placeholder=\"lecture\" onChange={updateClass} value={courseState.classes[i].lecture} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<label htmlFor=\"classTitle\" className=\"col-2\">Class Title</label>\r\n\t\t\t\t\t<input id=\"classTitle\" type=\"text\" name=\"title\" placeholder=\"title\" onChange={updateClass} value={courseState.classes[i].title} size=\"50\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<label htmlFor=\"classVideoUrl\" className=\"col-2\">Class Video Url</label>\r\n\t\t\t\t\t<input id=\"classVideoDuration\" type=\"text\" name=\"url\" placeholder=\"url\" onChange={updateClass} value={courseState.classes[i].url} size=\"50\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<label htmlFor=\"classVideoDuration\" className=\"col-2\">Class Video Duration</label>\r\n\t\t\t\t\t<input id=\"classVideoDuration\" type=\"number\" name=\"duration\" placeholder=\"duration\" onChange={updateClass} value={courseState.classes[i].duration} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t// value={courseState.classes[i].lecture}\r\n\t\t)\r\n\t});\r\n\r\n\tconsole.log(course)\r\n\tconsole.log(courseState);\r\n\r\n\tconst onEditorStateChange = (editorState) => {\r\n\t\tsetEditorState(editorState);\r\n\t\t// setCourseState({\r\n\t\t// \t...courseState,\r\n\t\t// \tcourseDescription: draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n\t\t// })\r\n\t}\r\n\r\n\tconst updateDescription = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tcourseDescription: draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n\t\t});\r\n\t\tsetSaveCourse(true);\r\n\t}\r\n\t// console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n\tconsole.log(courseState);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Update the Course</h1>\r\n\t\t\t\t\t\t\t\t<label>Name</label><input required type=\"text\" name=\"courseName\" onChange={updateCourse} value={courseState.loaded ? courseState.courseName : \" \"} size=\"50\" /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Intro</label><input required type=\"text\" name=\"courseIntro\" onChange={updateCourse} value={courseState.loaded ? courseState.courseIntro : \"\"} size=\"70\" /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Tag</label><input required type=\"text\" name=\"courseTag\" onChange={updateCourse} value={courseState.loaded ? courseState.courseTag : \"\"} size=\"50\" /><br />\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Description</label><br />\r\n\t\t\t\t\t\t\t\t{/* <textarea required type=\"text\" name=\"courseDescription\" onChange={updateCourse} rows=\"15\" cols=\"80\" value={courseState.loaded ? courseState.courseDescription : \"\"} /><br/> */}\r\n\r\n\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\t\t\ttoolbarClassName=\"toolbarClassName\"\r\n\t\t\t\t\t\t\t\t\twrapperClassName=\"wrapperClassName\"\r\n\t\t\t\t\t\t\t\t\teditorClassName=\"editorClassName\"\r\n\t\t\t\t\t\t\t\t\tonEditorStateChange={onEditorStateChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Price</label><input required type=\"number\" name=\"coursePrice\" onChange={updateCourse} value={courseState.loaded ? courseState.coursePrice : \"\"} /><br />\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header\">Course Classes</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{allClasses}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button onClick={addClass}>Add Class</button>\r\n\t\t\t\t\t\t\t\t<button onClick={updateDescription}>Update Course</button>\r\n\t\t\t\t\t\t\t\t{course && course.message ?\r\n\t\t\t\t\t\t\t\t\t<h1>{course.message}</h1> : null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcourse: state.courses,\r\n\tauth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { updateCourseAction })(CourseUpdate);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileSidebar.js",["396","397","398"],"import React, { useState } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../utils/Loader';\r\nimport './Profile.css';\r\n\r\nfunction ProfileSidebar( ) {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading } = auth;\r\n\r\n  let userPic = null;\r\n  const images = require.context('../../images/', true);\r\n\r\n  let img;\r\n\r\n  if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n    img = images(`./${auth.user._id}.jpg`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" />\r\n  } else {\r\n    img = images(`./default.png`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-xl-2 col-lg-3 col-md-4 userLeftCol\">\r\n      { loading ? <Loader /> : userPic }\r\n      <h3>{auth && auth.user && auth.user.name}</h3>\r\n      <h4>{auth && auth.user && auth.user.email}</h4>\r\n\r\n      <ul className=\"profileLinks\">\r\n        <li>\r\n          <NavLink exact to=\"/profile\" activeClassName=\"activeProfilePage\"><i className=\"fa fa-user\"></i>USER PROFILE</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/profile/courses\" activeClassName=\"activeProfilePage\"><i className=\"fa fa-graduation-cap\"></i>COURSES PURCHASED</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/profile/billing\" activeClassName=\"activeProfilePage\"><i className=\"far fa-credit-card\"></i>BILLING</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\FeatureCourses.js",["399","400","401"],"import React, {useRef, useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCourses, saveFeaturedCoursesAction } from '../../actions/courses';\r\nimport './FeatureCourses.css';\r\n\r\nconst FeatureCourses = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const auth = useSelector(state => state.auth);\r\n  const {loading, token} = auth;\r\n\r\n  \r\n  const courses = useSelector(state => state.courses);\r\n  const courseLoading = courses.loading;\r\n  const { message } = courses;\r\n\r\n  courses.all.length > 0 && courses.all.sort((a, b) => {\r\n    return a.featuredPosition - b.featuredPosition;\r\n  })\r\n  \r\n  const [data, setData] = useState(courses.all);\r\n\r\n  const [allItems, setAllItems] = useState([])\r\n\r\n  const updateCourses = () => {\r\n    const allupdatedCourses = courses.all.length > 0 && courses.all.map((course, i) => {\r\n      return {\r\n        id: course._id,\r\n        name: course.name,\r\n        tag: course.tag,\r\n        price: course.price,\r\n        newIndex: i + 1,\r\n        featured: course.featured,\r\n        featuredPosition: i + 1\r\n      }\r\n    });\r\n\r\n    console.log(allupdatedCourses);\r\n\r\n    setData(allupdatedCourses);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n  }, [loading]);\r\n  \r\n  useEffect(() => {\r\n    if( !courseLoading ) {\r\n      updateCourses();\r\n    }\r\n\r\n\t}, [courseLoading]);\r\n\r\n  \r\n\r\n  let item = useRef();\r\n  let itemOver = useRef();\r\n  let dropzoneRef = useRef();\r\n\r\n  const onDragStart = (event) => {\r\n    console.log(\"---- ON DRAG START -------\");\r\n    item.current = event.target;\r\n    console.log(item.current);\r\n    event\r\n      .dataTransfer\r\n      .setData('text/plain', event.target.id);\r\n  \r\n    // event\r\n    //   .currentTarget\r\n    item.current\r\n      .style\r\n      .backgroundColor = 'yellow';\r\n  }\r\n\r\n  const onDrop = (event) => {\r\n    console.log(\"on drop starting\");\r\n    console.log(item.current);\r\n    console.log(itemOver.current);\r\n    let currenTarget = itemOver.current;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // const id = event\r\n    //   .dataTransfer\r\n    //   .getData('text');\r\n\r\n    //   console.log(id);\r\n    //   const draggableElement = document.getElementById(id);\r\n    //   console.log(draggableElement);\r\n\r\n      const dropzone = event.target;\r\n      // dropzone.appendChild(draggableElement);\r\n      dropzone.appendChild(itemOver.current);\r\n\r\n      const test = [...allItems, itemOver.current]\r\n\r\n      setAllItems(test);\r\n      console.log(currenTarget.dataset.item);\r\n      // setFeatureCourses([...featureCourses, JSON.parse(dropzone.querySelector(\".example-draggable\").dataset.item) ]);\r\n      // console.log(JSON.parse(dropzone.querySelector(\".example-draggable\").dataset.item));\r\n\r\n      // const allFeatureCourses = [];\r\n      // let featureCourseNodes = dropzoneRef.current.querySelectorAll(\".example-draggable\");\r\n      // for(let i=0; i < featureCourseNodes.length; i++) {\r\n      //   allFeatureCourses.push(featureCourseNodes[i].dataset.item);\r\n      // }\r\n\r\n      // console.log(featureCourses);\r\n      \r\n\r\n    //   event\r\n    // .dataTransfer\r\n    // .clearData();\r\n  }\r\n\r\n  const onDragOver = (event) => {\r\n    // event.stopPropagation();\r\n    console.log(\"calling OnDragOver\");\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  const onDragEnd = (e) => {\r\n    console.log(\"----ON DRAG END---------\");\r\n    console.log(item.current);\r\n    item.current.style.display = 'block';\r\n\r\n    e.target.classList.remove(\"drag-up\");\r\n    itemOver.current.classList.remove(\"drag-up\");\r\n\r\n    e.target.classList.remove(\"drag-down\");\r\n    itemOver.current.classList.remove(\"drag-down\");\r\n    \r\n    let newData = [...data];\r\n    let from = Number(item.current.dataset.id);\r\n    let to = Number(itemOver.current.dataset.id);\r\n\r\n    console.log(from);\r\n    console.log(to);\r\n    newData.splice(to, 0, newData.splice(from, 1)[0]);\r\n\r\n    // console.log(newData);\r\n    // console.log(newData.splice(from, 1)[0])\r\n\r\n    // //set newIndex to judge direction of drag and drop\r\n    newData = newData.map((doc, index)=> {\r\n      doc.newIndex = index + 1;\r\n      return doc;\r\n    })\r\n\r\n    console.log(newData);\r\n\r\n    setData(newData);\r\n\r\n    // console.log(dropzoneRef.current.dataset.id);\r\n    // console.log(dropzoneRef.current.querySelectorAll(\".example-draggable\")[0]);\r\n    // console.log(dropzoneRef.current.querySelectorAll(\".example-draggable\"));\r\n\r\n    // const allFeatureCourses = [];\r\n    //   let featureCourseNodes = dropzoneRef.current.querySelectorAll(\".example-draggable\");\r\n    //   console.log(featureCourseNodes);\r\n    //   for(let i=0; i < featureCourseNodes.length; i++) {\r\n    //     console.log(\"THIS IS\");\r\n    //     console.log(featureCourseNodes[i]);\r\n    //     console.log(JSON.parse(featureCourseNodes[i].dataset.item));\r\n    //     allFeatureCourses.push(JSON.parse(featureCourseNodes[i].dataset.item));\r\n    //   }\r\n\r\n    // console.log(allFeatureCourses);\r\n  }\r\n\r\n  const dragOverItem = (e) => {\r\n    console.log(\"------ DRAG OVER ITEM -----\");\r\n    console.log(item.current);\r\n    \r\n\r\n      let featureCourseNodes = document.querySelectorAll(\".example-draggable\");\r\n      for(let i=0; i < featureCourseNodes.length; i++) {\r\n        featureCourseNodes[i].classList.remove(\"drag-up\", \"drag-down\");\r\n      }\r\n\r\n\r\n    \r\n    //itemOver.current = e.target;\r\n    itemOver.current = e.target;\r\n    // item.current = e.target;\r\n    console.log(\"ITEM OVER \");\r\n    console.log(itemOver.current);\r\n\r\n    console.log(\"EVENT TARGET \");\r\n    console.log(item.current);\r\n\r\n    item.current.style.display = \"none\";\r\n    //itemOver.current.style.display = \"none\";\r\n\r\n    if (e.target.tagName !== \"DIV\") {\r\n      return;\r\n    }\r\n\r\n    const fromIndex = JSON.parse(item.current.dataset.item).newIndex;\r\n    console.log(\"fromIndex \" + fromIndex);\r\n\r\n    const toIndex = JSON.parse(itemOver.current.dataset.item).newIndex;\r\n    console.log(\"toIndex \" + toIndex);\r\n\r\n    const animateName = fromIndex > toIndex ? \"drag-up\" : \"drag-down\";\r\n    console.log(\"animateName \" + animateName);\r\n\r\n\r\n    if (itemOver.current && item.current.dataset.item !== itemOver.current.dataset.item) {\r\n      itemOver.current.classList.remove(\"drag-up\", \"drag-down\");\r\n      // itemOver.current.classList.remove(\"drag-up\", \"drag-down\");\r\n      // itemOver.current = e.target\r\n    }\r\n\r\n    if(!itemOver.current.classList.contains(animateName)) {\r\n      itemOver.current.classList.add(animateName);\r\n      // itemOver.current = e.target;\r\n    }\r\n\r\n  }\r\n\r\n  // const allData = data.map((item, i) => {\r\n  //   return (\r\n  //     <div\r\n  //         className=\"example-draggable\"\r\n  //         draggable=\"true\"\r\n  //         onDragStart={onDragStart}\r\n  //         onDragEnd={onDragEnd}\r\n  //         onDragOver={dragOverItem}\r\n  //         data-id={i}\r\n  //         data-item={JSON.stringify(item)}\r\n         \r\n  //     >{item.name}</div>\r\n  //   )\r\n  // })\r\n\r\n  const updateFeatureCourses = (i) => {\r\n    console.log(\"Updating!!!\");\r\n    let copyFeature = [...data];\r\n    \r\n    console.log(copyFeature[i]);\r\n    console.log(copyFeature[i].featured)\r\n    copyFeature[i] = {\r\n      ...copyFeature[i],\r\n      featured: !copyFeature[i].featured\r\n    }\r\n\r\n    console.log(copyFeature[i].featured);\r\n    setData(copyFeature)\r\n  }\r\n\r\n  const allCourses = data.length > 0 && data.map((course, i) => {\r\n    // if(course.name === \"css animation\") {\r\n    //   console.log(course.name);\r\n    //   console.log(course.featured)\r\n    // }\r\n    return (\r\n      <div key={i}>\r\n        <div className=\"example-draggable\"\r\n            draggable=\"true\"\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n            onDragOver={dragOverItem}\r\n            data-id={i}\r\n            data-item={JSON.stringify(course)}\r\n        >{course.name}</div>\r\n        <input type=\"checkBox\" value={course.featured} checked={course.featured ? \"checked\" : false} onChange={() => updateFeatureCourses(i)}/>\r\n      </div>\r\n    )\r\n\t\t\r\n  })\r\n\r\n  // const allFeatureCourses = featureCourses.length > 0 && featureCourses.map((course, i) => {\r\n\r\n  //   return (\r\n  //     <div className=\"example-draggable\"\r\n  //         draggable=\"true\"\r\n  //         onDragStart={onDragStart}\r\n  //         onDragEnd={onDragEnd}\r\n  //         onDragOver={dragOverItem}\r\n  //         data-id={i}\r\n  //         data-item={course}\r\n  //     >{course.name}</div>\r\n  //   )\r\n\t\t\r\n  // })\r\n\r\n  const saveFeaturedCourses = (e) => {\r\n    // const filteredData = data.filter((course) => {\r\n    //   return course.featured;\r\n    // })\r\n    e.preventDefault();\r\n    console.log(data);\r\n    dispatch(saveFeaturedCoursesAction(data, token));\r\n  }\r\n\r\n  console.log(data)\r\n  return (\r\n    <div>\r\n    <div className=\"example-parent\">\r\n      <h1>To-do list</h1>\r\n      <div className=\"example-origin\">\r\n        To-do\r\n        {allCourses}\r\n        <button onClick={saveFeaturedCourses}>Save Feature courses</button>\r\n        { message ? ( \r\n          <h3>{message}</h3> \r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <h2>Featured Courses</h2>\r\n        <div\r\n          className=\"example-dropzone\"\r\n          onDrop={e => onDrop(e)}\r\n          onDragOver={e => onDragOver(e)}\r\n          data-id={5}\r\n        >\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FeatureCourses\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Courses.js",["402","403"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getCourses } from '../../actions/courses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './Courses.css'\r\n\r\nconst Courses = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const courses = useSelector(state => state.courses);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCourses());\r\n\t}, []);\r\n\r\n\tconst images = require.context('../../images/courses', true);\r\n\r\n\tconst allCourses = courses.all && courses.all.map((course, index) => {\r\n\r\n\t\tlet img = \"\";\r\n\t\tif (course && course.hasThumbnail) {\r\n\t\t\timg = images(`./${course.tag}.jpg`);\r\n\t\t} else {\r\n\t\t\timg = images(`./default-course.jpg`);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"col-3\" key={index}>\r\n\t\t\t\t<div className=\"cardBorder\">\r\n\t\t\t\t\t<div className=\"courseThumbnail courseFeatured1\">\r\n\t\t\t\t\t\t<Link to={`/admin/courses/update/${course.tag}`}>\r\n\t\t\t\t\t\t\t<img src={img.default} alt=\"javascript\" />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"courseTitleCtn\">\r\n\t\t\t\t\t\t<Link to={`/admin/courses/update/${course.tag}`}>{course.name}</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"separator\"></div>\r\n\t\t\t\t\t<div className=\"priceCtn\">\r\n\t\t\t\t\t\t<span className=\"studentNumbers\"><i className=\"fas fa-user\"></i> Telmo Sampaio</span><span className=\"price\">${course.price}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t})\r\n\r\n\tif (auth && auth.user && auth.user.role !== \"admin\") {\r\n\t\treturn <Redirect to=\"/\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div className=\"adminCourseTop\">\r\n\t\t\t\t\t\t\t\t<h1>Admin</h1>\r\n\t\t\t\t\t\t\t\t<Link to=\"/admin/courses/create\">New Course</Link>\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t{allCourses}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Courses;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminSidebar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Header.js",["404"],"import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport SecondHeader from './SecondHeader';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"heroTitle\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t<h3>LEARN TO CODE</h3>\r\n\t\t\t\t\t\t\t<h1>GET YOUR DREAM JOB</h1>\r\n\t\t\t\t\t\t\t<Link to=\"/courses\" className=\"actionButton\">VIEW COURSES</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\SecondHeader.js",["405","406","407","408","409","410","411"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './SecondHeader.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport logo from '../../images/telmo-academy1.png';\r\nimport { loadCheckout } from '../../actions/courses';\r\nimport { lastLoginAction } from '../../actions/auth';\r\nimport { checkMembership } from '../../actions/membership';\r\n\r\nconst SecondHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { isAuthenticated } = auth;\r\n\r\n  const payment = useSelector(state => state.payment);\r\n\r\n  let userPic = null;\r\n\r\n  const [dropDown, setDropdown] = useState({\r\n    open: false,\r\n  });\r\n\r\n  const [mobileMenu, setMobileMenu] = useState({\r\n    open: false,\r\n  });\r\n\r\n  const dropMenu = React.useRef();\r\n  const dropMobileMenu = React.useRef();\r\n\r\n  const profileIcon = React.useRef();\r\n  const burgerMenuIcon = React.useRef();\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (dropMenu.current && !dropMenu.current.contains(event.target) && !profileIcon.current.contains(event.target)) {\r\n        // console.log(\"dropMenu\");\r\n        // alert(\"You clicked outside of me!\");\r\n        // console.log(\"outside\");\r\n        setDropdown({\r\n          open: false\r\n        })\r\n      } \r\n      \r\n      if(dropMobileMenu.current && dropMenu.current && !dropMenu.current.contains(event.target) && !burgerMenuIcon.current.contains(event.target)){\r\n        // console.log(\"inside dropMobileMenu\");\r\n        setMobileMenu({\r\n          open: false\r\n        })\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [dropMenu]);\r\n\r\n  useEffect(() => {\r\n    if (auth && auth.isAuthenticated) {\r\n      dispatch(loadCheckout(auth && auth.user && auth.user._id));\r\n    }\r\n\r\n  }, [auth && auth.isAuthenticated && auth.user && auth.user.checkout]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"loading check\")\r\n    // console.log(auth && auth.token)\r\n    if (auth && auth.token) {\r\n      dispatch(checkMembership(auth && auth.token));\r\n      dispatch(lastLoginAction());\r\n    }\r\n\r\n  }, [auth && auth.isAuthenticated]);\r\n\r\n\r\n  const handleDropdown = (state, myFunc) => {\r\n    // if (!state.open) {\r\n    //   myFunc({\r\n    //     open: true\r\n    //   })\r\n    // } else {\r\n    //   myFunc({\r\n    //     open: false\r\n    //   })\r\n    // }\r\n    console.log(\"calling handleDropdown\")\r\n    myFunc({\r\n      open: !state.open\r\n    })\r\n  }\r\n\r\n  const images = require.context('../../images/', true, /\\.(png|jpe?g|svg)$/);\r\n\r\n  // console.log(\"+++++++\");\r\n  // console.log(images);\r\n\r\n  if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n    // import Pic from `/${auth.user._id}.jpg`;\r\n    // userPic = <img src={`/${auth.user._id}.jpg`} />\r\n\r\n    // console.log(\"before image\");\r\n\r\n    let img = images(`./${auth && auth.user && auth.user._id}.jpg`);\r\n    \r\n    userPic = <img src={img.default} className=\"userAvatarNav\" />;\r\n  } else {\r\n    let img = images(`./default.png`);\r\n    userPic = <img src={img.default} className=\"userAvatarNav\" />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"secondHeader\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 mainNav\">\r\n              <Link to=\"/\">\r\n                <img src={logo} alt=\"Telmo Academy Logo\" className=\"logo logo-light\" />\r\n              </Link>\r\n              <div className=\"mobileMenu\" onClick={() => handleDropdown(mobileMenu, setMobileMenu)}>\r\n                <i ref={burgerMenuIcon} className=\"fas fa-bars\"></i>\r\n              </div>\r\n              <ul className=\"desktopMenu\">\r\n                <li><Link to='/'>HOME</Link></li>\r\n                <li><Link to='/courses'>COURSES</Link></li>\r\n                {/* Add when all finished\r\n            { auth && auth.membership && !auth.membership.active && (\r\n              <li><Link to='/membership'>PRICING</Link></li>\r\n\r\n            )} */}\r\n                <li><Link to='/membership'>PRICING</Link></li>\r\n                {isAuthenticated ? (\r\n\r\n                  <div ref={dropMenu} className={dropDown.open ? \"navDropDown\" : \"hideDropDown\"}>\r\n                    <li><Link to='/profile'><i className=\"fa fa-user\"></i> Profile</Link></li>\r\n                    <li><Link to='/profile/courses'><i className=\"fa fa-play-circle\"></i> My Courses</Link></li>\r\n                    { auth && auth.user && auth.user.role === \"admin\" ? <li><Link to='/admin/courses'><i className=\"fas fa-user-shield\"></i> Admin</Link></li> : \"\"}\r\n                    <li><Link to='/logout'><i className=\"fa fa-door-open\"></i> Logout</Link></li>\r\n                  </div>\r\n\r\n                ) : (\r\n                    <Fragment>\r\n                      <li><Link to='/login'>Login</Link></li>\r\n                      <li><Link to='/Register'>Register</Link></li>\r\n                    </Fragment>\r\n                  )}\r\n                {\r\n                  isAuthenticated ? (\r\n                    <li>\r\n                      <Link className=\"checkoutLink\" to=\"/cart/checkout\">\r\n                        <i className=\"fa fa-shopping-cart\"></i>\r\n                        {payment && payment.checkout && payment.checkout.length > 0 ? (\r\n                          <span className=\"checkoutNumber\">{payment && payment.checkout && payment.checkout.length}</span>\r\n                        ) : null\r\n                        }\r\n                      </Link>\r\n                    </li>\r\n                  ) : null\r\n                }\r\n                {isAuthenticated ? <li ref={profileIcon} className=\"userAvatarNavCtn\" onClick={() => handleDropdown(dropDown, setDropdown)}>{userPic}<span className=\"userBorder\"></span></li> : \"\"}\r\n              </ul>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"navMenuCtn\">        \r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <ul ref={dropMobileMenu} className={`navMenu ${mobileMenu.open ? \"navMenuActive\" : \"\"}`}>\r\n              <li><Link to=\"/\">Home</Link></li>\r\n              <li><Link to=\"/courses\">Courses</Link></li>\r\n              <li><Link to=\"/membership\">Pricing</Link></li>\r\n              <li><Link to=\"/profile\">Profile</Link></li>\r\n              <li><Link to=\"/profile/billing\">Billing</Link></li>\r\n              <li><Link to=\"/profile/courses\">My Courses</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SecondHeader;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\AdminSidebar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Loader.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\imageUpload.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\payments.js",["412","413"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\index.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\courseConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\membership.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\admin.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Navbar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\courses.js",["414"],"import {\r\n  GET_ONE_COURSE,\r\n  GET_LESSONS_WATCHED,\r\n  GET_COURSES,\r\n  UPDATE_COURSE,\r\n  FINISH_LESSON\r\n} from '../actions/types';\r\nimport {\r\n  COURSE_LIST_REQUEST,\r\n  SAVE_FEATURED_COURSES_REQUEST,\r\n  SAVE_FEATURED_COURSES_SUCCESS,\r\n  SAVE_FEATURED_COURSES_FAIL\r\n} from '../contants/courseConstants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: null,\r\n  all: [],\r\n  message: \"\"\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  // console.log(type);\r\n\r\n  switch (type) {\r\n    case COURSE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        all: []\r\n      }\r\n    case GET_ONE_COURSE:\r\n      console.log(\"inside reducer get one course\");\r\n      return {\r\n        ...state,\r\n        data: payload.course\r\n      }\r\n    case GET_COURSES:\r\n      // console.log(\"Reducer ALL courses\");\r\n      // console.log(payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        all: payload.courses\r\n      }\r\n    case UPDATE_COURSE:\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        message: payload.message\r\n      }\r\n    case FINISH_LESSON:\r\n      // console.log(payload);\r\n      const updatedClasses = state.data.classes;\r\n      updatedClasses[payload.lesson].watched[0] = payload.watched;\r\n\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          classes: updatedClasses\r\n        }\r\n      }\r\n    case GET_LESSONS_WATCHED:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          classes: payload.course.classes\r\n        }\r\n      }\r\n    case SAVE_FEATURED_COURSES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case SAVE_FEATURED_COURSES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        all: payload\r\n      }\r\n    case SAVE_FEATURED_COURSES_FAIL:\r\n      return {\r\n        ...state,\r\n        message: payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\auth.js",["415","416"],"import {\r\n  UPDATE_USER,\r\n  UPDATE_USER_ERROR,\r\n  REGISTER_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  USER_GUEST,\r\n  LOGOUT,\r\n  LOGOUT_FAIL,\r\n  FORGOT_PASSWORD,\r\n  EMAIL_ACTIVATION,\r\n  ACCOUNT_ACTIVATION,\r\n  GET_COURSES_OWNED,\r\n  COURSE_ACCESS,\r\n  CHECK_MEMBERSHIP,\r\n  CANCEL_MEMBERSHIP,\r\n  RESUBSCRIBE_MEMBERSHIP,\r\n  AUTH_ERROR\r\n} from '../actions/types';\r\nimport { USER_DETAILS_REQUEST, USER_LAST_LOGIN_FAIL, USER_LAST_LOGIN_SUCCESS } from '../contants/userConstants';\r\nimport {\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_FAIL,\r\n  ACCOUNT_ACTIVATION_FAIL,\r\n  RESET_MESSAGE\r\n} from '../contants/authConstants';\r\n\r\nconst initialState = {\r\n  // token: localStorage.getItem('token'),\r\n  token: null,\r\n  isAuthenticated: null,\r\n  active: null,\r\n  user: null,\r\n  loading: true,\r\n  message: \"\",\r\n  coursesOwned: [],\r\n  membership: {\r\n    active: false\r\n  }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  // console.log(\"inside auth reducers\");\r\n  // console.log( type );\r\n  if (payload) {\r\n\r\n    // console.log(\"-------------CHANGING MESSAGE----------\")\r\n    // console.log(type)\r\n    // console.log( payload.message );\r\n  }\r\n  switch (type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: payload.user,\r\n        token: payload.token,\r\n        active: payload.active,\r\n        loading: false\r\n      }\r\n    case USER_GUEST:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: null,\r\n        user: null,\r\n        loading: false\r\n      }\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        message: payload.message\r\n      }\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        token: payload.token,\r\n        message: payload.message,\r\n        user: payload.user,\r\n        active: payload.user.active,\r\n        loading: false\r\n      }\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        message: payload.message\r\n      }\r\n    case RESET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: \"\"\r\n      }\r\n    // case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT_FAIL:\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        message: null\r\n      }\r\n    case FORGOT_PASSWORD:\r\n    case UPDATE_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        message: payload\r\n      }\r\n    case RESET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        message: payload\r\n      }\r\n    case RESET_PASSWORD_FAIL:\r\n    case USER_LAST_LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        message: payload\r\n      }\r\n    case EMAIL_ACTIVATION:\r\n    case ACCOUNT_ACTIVATION:\r\n    case ACCOUNT_ACTIVATION_FAIL:\r\n      return {\r\n        ...state,\r\n        active: \"active\",\r\n        message: payload.message\r\n      }\r\n    case GET_COURSES_OWNED:\r\n      return {\r\n        ...state,\r\n        coursesOwned: payload.courses\r\n      }\r\n    case COURSE_ACCESS:\r\n      return {\r\n        ...state,\r\n        courseAcces: payload.courses\r\n      }\r\n    case CHECK_MEMBERSHIP:\r\n      return {\r\n        ...state,\r\n        membership: payload\r\n      }\r\n    case CANCEL_MEMBERSHIP:\r\n      return {\r\n        ...state,\r\n        membership: {\r\n          ...state.membership,\r\n          active: payload.active,\r\n          status: payload.status\r\n        }\r\n      }\r\n    case RESUBSCRIBE_MEMBERSHIP:\r\n      return {\r\n        ...state,\r\n        membership: {\r\n          ...state.membership,\r\n          active: payload.active,\r\n          status: payload.status\r\n        }\r\n      }\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        message: payload.message,\r\n        user: {\r\n          ...state.user,\r\n          name: payload.user.name\r\n        }\r\n      }\r\n    case USER_LAST_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          lastLogin: payload\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\payment.js",["417","418"],"import {\r\n  PAY_MEMBERSHIP,\r\n  PAY_COURSE,\r\n  PAY_ERROR,\r\n  GET_PAYMENT_TOKEN,\r\n  ADD_CHECKOUT,\r\n  REMOVE_CHECKOUT,\r\n  LOAD_CHECKOUT,\r\n  RESET_PAYMENT_RESULT,\r\n  GET_USER_BILLING\r\n} from '../actions/types';\r\nimport { GET_COUPON_BY_ID_FAIL, GET_COUPON_BY_ID_REQUEST, GET_COUPON_BY_ID_RESET, GET_COUPON_BY_ID_SUCCESS } from '../contants/couponConstants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  paymentToken: '',\r\n  result: \"\",\r\n  checkout: [],\r\n  checkoutPrice: 0,\r\n  addingToCheckout: false,\r\n  paymentComplete: false,\r\n  billing: [],\r\n  coupon: {},\r\n  message: \"\"\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_COUPON_BY_ID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case PAY_MEMBERSHIP:\r\n      return {\r\n        ...state,\r\n        paymentToken: payload.clientToken,\r\n        paymentComplete: payload.paymentComplete\r\n      }\r\n    case GET_PAYMENT_TOKEN:\r\n      return {\r\n        ...state,\r\n        addingToCheckout: false,\r\n        paymentToken: payload.clientToken\r\n      }\r\n    case PAY_COURSE:\r\n      return {\r\n        ...state,\r\n        result: payload.status,\r\n        checkout: []\r\n      }\r\n    case ADD_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        addingToCheckout: true,\r\n        checkout: payload\r\n      }\r\n    case REMOVE_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        checkout: payload\r\n      }\r\n    case LOAD_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        checkout: payload.checkout,\r\n        checkoutPrice: payload.checkoutPrice\r\n      }\r\n    case RESET_PAYMENT_RESULT:\r\n      return {\r\n        ...state,\r\n        result: '',\r\n        checkout: []\r\n      }\r\n    case GET_USER_BILLING:\r\n      return {\r\n        ...state,\r\n        billing: payload.billing\r\n      }\r\n    case GET_COUPON_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        coupon: payload,\r\n      }\r\n    case GET_COUPON_BY_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: payload,\r\n      }\r\n    case GET_COUPON_BY_ID_RESET:\r\n      return {\r\n        ...state,\r\n        coupon: {}\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\admin.js",["419"],"import {\r\n  USERS_LIST_REQUEST,\r\n  USERS_LIST_SUCCESS,\r\n  USERS_LIST_FAIL,\r\n  ADMIN_UPDATE_USERS_FAIL,\r\n  ADMIN_UPDATE_USERS_SUCCESS,\r\n  ADMIN_UPDATE_USERS_REQUEST,\r\n  ADMIN_DELETE_USERS_REQUEST,\r\n  ADMIN_DELETE_USERS_SUCCESS,\r\n  ADMIN_DELETE_USERS_FAIL,\r\n  ADMIN_ENROL_USER_IN_COURSE_REQUEST,\r\n  ADMIN_ENROL_USER_IN_COURSE_SUCCESS,\r\n  ADMIN_ENROL_USER_IN_COURSE_FAIL,\r\n  ADMIN_REMOVE_USER_COURSE_REQUEST,\r\n  ADMIN_REMOVE_USER_COURSE_FAIL,\r\n  ADMIN_REMOVE_USER_COURSE_SUCCESS,\r\n  ADMIN_GET_SALES_REQUEST,\r\n  ADMIN_GET_SALES_SUCCESS,\r\n  ADMIN_GET_SALES_FAIL,\r\n  ADMIN_GET_COUPON_REQUEST,\r\n  ADMIN_GET_COUPON_SUCCESS,\r\n  ADMIN_GET_COUPON_FAIL,\r\n  ADMIN_GET_COUPONS_REQUEST,\r\n  ADMIN_GET_COUPONS_SUCCESS,\r\n  ADMIN_GET_COUPONS_FAIL\r\n} from '../contants/adminConstants';\r\nimport {\r\n  FIND_USER_PURCHASES_FAIL,\r\n  FIND_USER_PURCHASES_REQUEST,\r\n  FIND_USER_PURCHASES_SUCCESS,\r\n  FIND_USER_REQUEST,\r\n  FIND_USER_SUCCESS\r\n} from '../contants/userConstants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  users: [],\r\n  message: \"\",\r\n  userDetails: {},\r\n  userPurchases: [],\r\n  sales: [],\r\n  coupon: {},\r\n  coupons: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  // console.log(type);\r\n  // console.log(payload);\r\n  switch (type) {\r\n    case USERS_LIST_REQUEST:\r\n    case ADMIN_UPDATE_USERS_REQUEST:\r\n    case ADMIN_DELETE_USERS_REQUEST:\r\n    case FIND_USER_REQUEST:\r\n    case FIND_USER_PURCHASES_REQUEST:\r\n    case ADMIN_ENROL_USER_IN_COURSE_REQUEST:\r\n    case ADMIN_REMOVE_USER_COURSE_REQUEST:\r\n    case ADMIN_GET_SALES_REQUEST:\r\n    case ADMIN_GET_COUPON_REQUEST:\r\n    case ADMIN_GET_COUPONS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case USERS_LIST_SUCCESS:\r\n    case ADMIN_UPDATE_USERS_SUCCESS:\r\n    case ADMIN_DELETE_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: payload\r\n      }\r\n    case USERS_LIST_FAIL:\r\n    case ADMIN_UPDATE_USERS_FAIL:\r\n    case ADMIN_DELETE_USERS_FAIL:\r\n    case FIND_USER_PURCHASES_FAIL:\r\n    case ADMIN_ENROL_USER_IN_COURSE_FAIL:\r\n    case ADMIN_REMOVE_USER_COURSE_FAIL:\r\n    case ADMIN_GET_SALES_FAIL:\r\n    case ADMIN_GET_COUPON_FAIL:\r\n    case ADMIN_GET_COUPONS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: payload\r\n      }\r\n    case FIND_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: payload\r\n      }\r\n    case FIND_USER_PURCHASES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userPurchases: payload\r\n      }\r\n    case ADMIN_ENROL_USER_IN_COURSE_SUCCESS:\r\n    case ADMIN_REMOVE_USER_COURSE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          courses: payload\r\n        }\r\n      }\r\n    case ADMIN_GET_SALES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sales: payload\r\n      }\r\n    case ADMIN_GET_COUPON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        coupon: payload\r\n      }\r\n    case ADMIN_GET_COUPONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        coupons: payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\adminConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\UserProfile.js",["420","421","422","423"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, withRouter  } from 'react-router-dom';\r\nimport { getUserDetails } from '../../actions/auth';\r\nimport { getCourses } from '../../actions/courses';\r\nimport { enrollUserInCourse, removeCourseAction, getUserPurchases, deleteUsersAction } from '../../actions/admin';\r\n// import './Courses.css'\r\nimport './UserProfile.css'\r\n\r\nconst Courses = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { userPurchases } = admin;\r\n  const { _id, name, email, joined, active, purchases, courses } = admin.userDetails;\r\n  // console.log(_id)\r\n  const { subPage } = useParams();\r\n  // console.log(subPage);\r\n\r\n  const gettingCourses = useSelector(state => state.courses);\r\n  const { all } = gettingCourses;\r\n\r\n  const [courseSelected, setCourseSelected] = useState({\r\n    id: \"\",\r\n    name: \"\"\r\n  });\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [userCourses, setUserCourses] = useState([]);\r\n  const [userCoursesDetails, setUserCoursesDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserDetails(subPage));\r\n    dispatch(getUserPurchases(subPage));\r\n    dispatch(getCourses());\r\n    theUserCoursesFunc();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setUserCourses(courses);\r\n\r\n  }, [courses, userPurchases]);\r\n\r\n  useEffect(() => {\r\n    theUserCoursesFunc();\r\n  }, [userCourses])\r\n\r\n  const images = require.context('../../images/', true);\r\n  let img;\r\n  try {\r\n    img = images(`./${subPage}.jpg`);\r\n  } catch (error) {\r\n    img = images(`./default.png`);\r\n  }\r\n\r\n  const date = new Date(joined);\r\n  const userJoined = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n  const allPurchases = userPurchases.map((purchase, i) => {\r\n    const date = new Date(purchase.date);\r\n    const newDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n    return (\r\n      <tr key={i}>\r\n        <td>{newDate}</td>\r\n        <td>{purchase.price}</td>\r\n        <td>None</td>\r\n        <td>{purchase.price}</td>\r\n        <td>{purchase.productName}</td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  const allCourses = all.map((course, i) => {\r\n    return <option key={i} value={`${course._id},${course.name}`}>{course.name}</option>\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const valueSplit = e.target.value.split(\",\")\r\n    setCourseSelected({\r\n      id: valueSplit[0],\r\n      name: valueSplit[1]\r\n    });\r\n    setModalText({\r\n      ...modalText,\r\n      title: \"Enroll user in course\",\r\n      body: `Are you sure you want to enrol <b>${name}</b> in the following course?`,\r\n      action: \"adding\"\r\n    });\r\n\r\n    handleShow();\r\n  }\r\n\r\n  const modalAction = () => {\r\n    if (modalText.action === \"adding\") {\r\n      dispatch(enrollUserInCourse(courseSelected.id, _id));\r\n    } else if (modalText.action === \"removing\") {\r\n      dispatch(removeCourseAction(courseSelected.id, _id));\r\n    } else if(modalText.action === \"deleteUser\" ) {\r\n      dispatch(deleteUsersAction(modalText));\r\n      history.push(\"/admin/users\");\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n  const theUserCoursesFunc = () => {\r\n    console.log(\"calling theUserCoursesFunc\");\r\n    let courses = [];\r\n    if (userCourses && userCourses.length > 0) {\r\n      for (let i = 0; i < all.length; i++) {\r\n        for (let j = 0; j < userCourses.length; j++) {\r\n          if (all[i]._id == userCourses[j]) {\r\n            courses = [...courses, all[i]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setUserCoursesDetails(courses);\r\n  }\r\n\r\n  const removeCourse = (courseId, courseName) => {\r\n    // dispatch(removeCourseAction(courseId, userId));\r\n    setCourseSelected({\r\n      id: courseId,\r\n      name: courseName\r\n    });\r\n    setModalText({\r\n      ...modalText,\r\n      title: \"Delete course from user\",\r\n      body: \"Are you sure you want to delete the course \" + courseName + \"?\",\r\n      action: \"removing\"\r\n    });\r\n    handleShow();\r\n  }\r\n\r\n  const displayUserCourses = userCoursesDetails.map((course, i) => {\r\n    return (\r\n      <tr key={i}>\r\n        <td>{course.name}</td>\r\n        <td onClick={() => removeCourse(course._id, course.name)}><i className=\"fas fa-trash-alt\"></i></td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  const deleteUser = () => {\r\n    setModalText({\r\n      title: \"Delete user\",\r\n      action: \"deleteUser\",\r\n      body: \"Are you sure you want to delete the user \" + name,\r\n      users: [admin.userDetails]\r\n    });\r\n    handleShow();\r\n  }\r\n\r\n  console.log(userCoursesDetails);\r\n  console.log(userCourses);\r\n  return (\r\n    <>\r\n      <div className=\"adminCtn col-xl-10\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <img className=\"userAvatar\" src={img.default} style={{ width: \"100%\" }} />\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <div className=\"card userCard\">\r\n              <div className=\"userColDivider\">\r\n                <h6>Name</h6>\r\n                <h4>{name}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Email</h6>\r\n                <h4>{email}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Profile Status</h6>\r\n                <h4>{active}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Account Created</h6>\r\n                <h4>{userJoined}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Last Login</h6>\r\n                <h4>Today</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Total Purchases</h6>\r\n                <h4>${purchases} USD</h4>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <h4>Purchase History</h4>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>DATE</th>\r\n                  <th>FULL PRICE</th>\r\n                  <th>DISCOUNTS</th>\r\n                  <th>SALE PRICE</th>\r\n                  <th>PRODUCT</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {allPurchases.reverse()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <h4>User Courses</h4>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <div className=\"card userCard\">\r\n              <table>\r\n                <tbody>\r\n                  {displayUserCourses}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <h4>Enroll In Course</h4>\r\n            <p>Manually enroll this user in a new course. Users are not charged for manual enrollments.</p>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <div className=\"card userCard\">\r\n\r\n              <select defaultValue={'DEFAULT'} onChange={handleChange}>\r\n                <option value=\"DEFAULT\" disabled>Select course</option>\r\n                {allCourses}\r\n              </select>\r\n              {/* <button onClick={enrollUser}>Enroll</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"offset-md-2 col-10\">\r\n            <button onClick={deleteUser} className=\"btn btn-danger\">Delete User</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{modalText.body}</p>\r\n\r\n          <p><b>{courseSelected.name}</b></p>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={modalAction}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Courses);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Sales.js",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allUsersAction } from '../../actions/admin';\r\nimport { getSalesAction } from '../../actions/admin';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './AllUsers.css'\r\n\r\nconst Sales = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { token } = auth;\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { sales } = admin;\r\n\r\n  const [stateUsers, setStateUsers] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [userSelected, setUserSelected] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const [salesState, setSalesState] = useState([]);\r\n  const [pageSales, setPageSales] = useState({\r\n    salesPerPage: 2,\r\n    values: [],\r\n    number: 1,\r\n    firstPage: 0,\r\n    lastPage: 1\r\n  });\r\n\r\n  // const [orderState, setOrderState] = useState({\r\n  //   orderName: \"\",\r\n  //   asc: false\r\n  // })\r\n\r\n  useEffect(() => {\r\n    dispatch(getSalesAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSalesState(sales);\r\n\r\n  }, [sales])\r\n\r\n  useEffect(() => {\r\n    setPageSales({\r\n      ...pageSales,\r\n      values: paginate(salesState, pageSales.salesPerPage, 1),\r\n      lastPage: paginate(salesState, pageSales.salesPerPage, pageSales.number + 1).length\r\n    });\r\n\r\n  }, [salesState]);\r\n\r\n  const allSales = pageSales.values.map((sale, i) => {\r\n    const saleDate = new Date(sale.date);\r\n    const newSaleDate = `${saleDate.getDate()}/${saleDate.getMonth() + 1}/${saleDate.getFullYear()}`;\r\n    return (\r\n      <tr key={i}>\r\n        <td>{newSaleDate}</td>\r\n        <td>{sale.userName}</td>\r\n        <td>{sale.productName}</td>\r\n        <td>Discount</td>\r\n        <td>{sale.price}</td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  function paginate(array, page_size, page_number) {\r\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n  }\r\n\r\n  console.log(paginate(salesState, 1, 0));\r\n  // console.log(paginate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 4, 1));\r\n\r\n  // const paginationButtons = salesState.map((sale, i) => {\r\n  //   return <li key={i} class=\"page-item\"><a onClick={() => setPageSales(paginate(salesState, 1, i + 1))} class=\"page-link\" href=\"#\">{i+1}</a></li>\r\n  // })\r\n\r\n  // useEffect(() => {\r\n  //   if (!loading) {\r\n  //     setStateUsers(users);\r\n  //   }\r\n  // }, [loading]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(stateUsers);\r\n  //   const findSelected = stateUsers.find(user => {\r\n  //     console.log(user);\r\n  //     return user.selected\r\n  //   });\r\n  //   console.log(findSelected);\r\n\r\n  //   setUserSelected(Boolean(findSelected));\r\n  // }, [stateUsers])\r\n\r\n  // const selectUsers = (usersSelected, event) => {\r\n  //   // console.log(stateUsers);\r\n  //   console.log(event.target.type)\r\n  //   if (usersSelected === \"all\") {\r\n  //     const selectAllUsers = stateUsers.map((user, i) => {\r\n  //       // if () {\r\n  //         // console.log(user);\r\n  //         // console.log(selectAll)\r\n  //         return {\r\n  //           ...user,\r\n  //           selected: !selectAll,\r\n  //           key: i\r\n  //         }\r\n  //       // }\r\n  //     });\r\n\r\n  //     const filteredUsers = selectAllUsers.filter(user => {\r\n  //       return user.role != \"admin\";\r\n  //     });\r\n\r\n  //     console.log(filteredUsers)\r\n  //     setStateUsers(filteredUsers);\r\n  //     setSelectAll(!selectAll);\r\n  //   } else {\r\n  //     const selectAllCopy = [...stateUsers];\r\n  //     // selectAllCopy[usersSelected].selected = !selectAllCopy[usersSelected].selected;\r\n  //     selectAllCopy[usersSelected].selected =  event.target.checked;\r\n\r\n  //     setStateUsers(selectAllCopy);\r\n  //   }\r\n\r\n  // }\r\n\r\n  // const allUsers = stateUsers.map((user, i) => {\r\n  //   if (user.role !== \"admin\") {\r\n  //     const joinedDate = new Date(user.joined);\r\n  //     const newJoinedDate = `${joinedDate.getDate()}/${joinedDate.getMonth() + 1}/${joinedDate.getFullYear()}`;\r\n  //     // console.log(\"Inside all Users\");\r\n  //     // console.log(user.selected)\r\n  //     return (\r\n  //       <tr key={user._id}>\r\n  //         <td>\r\n  //           <input\r\n  //             type=\"checkbox\"\r\n  //             checked={user.selected == null ? false : user.selected}\r\n  //             value={user.selected}\r\n  //             onChange={(e) => { selectUsers(i, e) }}\r\n  //           />\r\n  //           <div className=\"allUsersTableDiv\"><Link to={`/admin/user/${user._id}`}>{user.name}</Link></div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">{user.email}</div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">{user.active}</div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">${user.purchases} USD</div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">{newJoinedDate}</div>\r\n  //         </td>\r\n  //       </tr>\r\n  //     )\r\n  //   }\r\n  // })\r\n\r\n  // const orderBy = (order) => {\r\n  //   console.log(\"ordering by date\");\r\n  //   users.sort(function (a, b) {\r\n  //     // Turn your strings into dates, and then subtract them\r\n  //     // to get a value that is either negative, positive, or zero.\r\n  //     if (order === \"date\") {\r\n  //       if (orderState.orderName === \"date\" && orderState.asc) {\r\n  //         return new Date(a.joined) - new Date(b.joined);\r\n  //       } else {\r\n  //         return new Date(b.joined) - new Date(a.joined);\r\n  //       }\r\n  //     } else if (order === \"purchases\") {\r\n  //       if (orderState.orderName === \"purchases\" && orderState.asc) {\r\n  //         return a.purchases - b.purchases;\r\n  //       } else {\r\n  //         return b.purchases - a.purchases;\r\n  //       }\r\n  //     } else if (order === \"email\") {\r\n  //       if (orderState.orderName === \"email\" && orderState.asc) {\r\n  //         if (a.email > b.email) { return -1; }\r\n  //         if (a.email < b.email) { return 1; }\r\n  //       } else {\r\n  //         if (a.email < b.email) { return -1; }\r\n  //         if (a.email > b.email) { return 1; }\r\n  //       }\r\n  //       return 0;\r\n  //     } else if (order === \"name\") {\r\n  //       let nameA = a.name.toLowerCase();\r\n  //       let nameB = b.name.toLowerCase();\r\n\r\n  //       if (orderState.orderName === \"name\" && orderState.asc) {\r\n  //         if (nameA > nameB) { return -1; }\r\n  //         if (nameA < nameB) { return 1; }\r\n  //       } else {\r\n  //         if (nameA < nameB) { return -1; }\r\n  //         if (nameA > nameB) { return 1; }\r\n  //       }\r\n\r\n  //       return 0;\r\n  //     } else if (order === \"active\") {\r\n  //       let activeA = a.active.toLowerCase();\r\n  //       let activeB = b.active.toLowerCase();\r\n\r\n  //       if (orderState.orderName === \"active\" && orderState.asc) {\r\n  //         if (activeA < activeB) { return -1; }\r\n  //         if (activeA > activeB) { return 1; }\r\n  //       } else {\r\n  //         if (activeA > activeB) { return -1; }\r\n  //         if (activeA < activeB) { return 1; }\r\n  //       }\r\n  //       return 0;\r\n  //     }\r\n\r\n  //   });\r\n\r\n  //   setStateUsers(users);\r\n  //   // setTest({ loading: false })\r\n  //   setOrderState({\r\n  //     orderName: order,\r\n  //     asc: !orderState.asc\r\n  //   })\r\n  // }\r\n\r\n  // const handleClose = () => setShow(false);\r\n  // const handleShow = () => setShow(true);\r\n\r\n  // const handleChange = (e) => {\r\n  //   console.log(e.target.value);\r\n\r\n  //   const selectedUsers = stateUsers.filter((user) => {\r\n  //     return user.selected\r\n  //   });\r\n\r\n  //   console.log(selectedUsers)\r\n\r\n  //   if (selectedUsers.length > 0) {\r\n  //     let title = \"\";\r\n  //     // let users = selectedUsers.map(user => {\r\n  //     //   return user._id;\r\n  //     // })\r\n  //     if (e.target.value === \"activate\") {\r\n  //       title = \"Activate Users\"\r\n  //     } else if (e.target.value === \"delete\") {\r\n  //       title = \"Delete Users\"\r\n  //     }\r\n\r\n  //     setModalText({\r\n  //       title: title,\r\n  //       action: e.target.value,\r\n  //       users: selectedUsers\r\n  //     });\r\n  //     handleShow();\r\n  //   }\r\n  // }\r\n\r\n  // const saveChanges = () => {\r\n  //   console.log(\"inside save changes\");\r\n  //   if (modalText.action === \"activate\") {\r\n  //     dispatch(saveUsersAction(modalText));\r\n  //   } else if (modalText.action === \"delete\") {\r\n  //     dispatch(deleteUsersAction(modalText));\r\n  //   }\r\n  //   setShow(false);\r\n  // }\r\n\r\n  // console.log(selectAll);\r\n  // console.log(modalText);\r\n  // console.log(stateUsers)\r\n  const movePage = (direction) => {\r\n    if (direction === \"previous\") {\r\n      setPageSales({\r\n        ...pageSales,\r\n        values: paginate(salesState, pageSales.salesPerPage, pageSales.number - 1),\r\n        number: pageSales.number - 1,\r\n        firstPage: paginate(salesState, pageSales.salesPerPage, pageSales.number - 2).length,\r\n        lastPage: paginate(salesState, pageSales.salesPerPage, pageSales.number).length\r\n      })\r\n    } else {\r\n      console.log(pageSales.number);\r\n      console.log(paginate(salesState, pageSales.salesPerPage, pageSales.number).length);\r\n      setPageSales({\r\n        ...pageSales,\r\n        values: paginate(salesState, pageSales.salesPerPage, pageSales.number + 1),\r\n        number: pageSales.number + 1,\r\n        firstPage: paginate(salesState, pageSales.salesPerPage, pageSales.number).length,\r\n        lastPage: paginate(salesState, pageSales.salesPerPage, pageSales.number + 2).length\r\n      })\r\n    }\r\n  }\r\n\r\n  // console.log(salesState);\r\n  console.log(pageSales);\r\n\r\n  // const checkEndPages = () => {\r\n  //   return paginate(salesState, 1, pageSales.number + 1).length\r\n  // }\r\n\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <h5 className=\"mb-5\">Showing {pageSales.number === 1 ? 1 : pageSales.number * pageSales.salesPerPage - 1} {(salesState.length <= pageSales.number * pageSales.salesPerPage) ? \"\" : \" - \" + pageSales.number * pageSales.salesPerPage } of {salesState.length} Transactions</h5>\r\n          <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Student</th>\r\n                <th>Product</th>\r\n                <th>Discount</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* {allUsers} */}\r\n              {allSales}\r\n            </tbody>\r\n            {/* <h1>{!test.loading ? \"Working\" : null}</h1> */}\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <nav aria-label=\"Page navigation example\" className=\"mt-3\">\r\n            <ul className=\"pagination justify-content-center\">\r\n              <li className={pageSales.firstPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"previous\")} className=\"page-link\" href=\"#\">Previous</a>\r\n              </li>\r\n              <li className={pageSales.lastPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"next\")} \r\n                  className=\"page-link\" \r\n                  href=\"#\">Next</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to {modalText.action} the following users?</p>\r\n          {modalText.users.map((user,i) => {\r\n            return <p key={i}><b>{user.name}</b></p>;\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sales;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Coupons.js",["443","444","445","446","447","448","449","450","451","452","453"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allUsersAction } from '../../actions/admin';\r\nimport { saveUsersAction, deleteUsersAction } from '../../actions/admin';\r\nimport { getCouponsAction } from '../../actions/admin';\r\n// import ModalWindow from '../utils/ModalWindow';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Col, Table } from 'react-bootstrap';\r\nimport './AllUsers.css';\r\nimport './Coupons.css'\r\n\r\nconst Coupon = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { users, loading, coupons } = admin;\r\n\r\n  const [stateUsers, setStateUsers] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [userSelected, setUserSelected] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const [orderState, setOrderState] = useState({\r\n    orderName: \"\",\r\n    asc: false\r\n  });\r\n\r\n  const [pageUsers, setPageUsers] = useState({\r\n    usersPerPage: 3,\r\n    values: [],\r\n    number: 1,\r\n    firstPage: 0,\r\n    lastPage: 1\r\n  });\r\n\r\n  const removeAdminFromUsers = users.filter(user => {\r\n    return user.role !== \"admin\";\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(allUsersAction());\r\n    dispatch(getCouponsAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setStateUsers(removeAdminFromUsers);\r\n    }\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    // console.log(stateUsers);\r\n    const findSelected = stateUsers.find(user => {\r\n      // console.log(user);\r\n      return user.selected\r\n    });\r\n    // console.log(findSelected);\r\n\r\n    setUserSelected(Boolean(findSelected));\r\n\r\n    setPageUsers({\r\n      ...pageUsers,\r\n      values: paginate(stateUsers, pageUsers.usersPerPage, 1),\r\n      number: 1,\r\n      firstPage: 0,\r\n      // lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1).length\r\n      lastPage: 1\r\n    });\r\n  }, [stateUsers]);\r\n\r\n\r\n  function paginate(array, page_size, page_number) {\r\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n  }\r\n\r\n  const selectUsers = (usersSelected, event) => {\r\n    // console.log(stateUsers);\r\n    console.log(event.target.type)\r\n    if (usersSelected === \"all\") {\r\n      const selectAllUsers = stateUsers.map((user, i) => {\r\n        // if () {\r\n        // console.log(user);\r\n        // console.log(selectAll)\r\n        return {\r\n          ...user,\r\n          selected: !selectAll,\r\n          key: i\r\n        }\r\n        // }\r\n      });\r\n\r\n      const filteredUsers = selectAllUsers.filter(user => {\r\n        return user.role != \"admin\";\r\n      });\r\n\r\n      console.log(filteredUsers)\r\n      setStateUsers(filteredUsers);\r\n      setSelectAll(!selectAll);\r\n    } else {\r\n      const selectAllCopy = [...stateUsers];\r\n      // selectAllCopy[usersSelected].selected = !selectAllCopy[usersSelected].selected;\r\n      selectAllCopy[usersSelected].selected = event.target.checked;\r\n\r\n      setStateUsers(selectAllCopy);\r\n    }\r\n\r\n  }\r\n\r\n  const allUsers = pageUsers.values.map((user, i) => {\r\n    if (user.role !== \"admin\") {\r\n      const today = new Date();\r\n      const joinedDate = new Date(user.joined);\r\n      const newJoinedDate = `${('0' + joinedDate.getDate()).slice(-2)}/${('0' + joinedDate.getMonth() + 1).slice(-2)}/${joinedDate.getFullYear()}`;\r\n      // console.log(\"Inside all Users\");\r\n      // console.log(user.selected)\r\n      const lastLogin = new Date(user.lastLogin);\r\n      const lastLoginDate = () => {\r\n        if (today.getDate() === lastLogin.getDate() &&\r\n          today.getMonth() === lastLogin.getMonth() &&\r\n          today.getFullYear() === lastLogin.getFullYear()\r\n        ) {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - Today`\r\n        } else {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - ${lastLogin.getDate()}/${lastLogin.getMonth() + 1}/${lastLogin.getFullYear()}`;\r\n        }\r\n      }\r\n      return (\r\n        <tr key={user._id}>\r\n          <td>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={user.selected == null ? false : user.selected}\r\n              value={user.selected}\r\n              onChange={(e) => { selectUsers(i, e) }}\r\n            />\r\n            <div className=\"allUsersTableDiv\"><Link to={`/admin/user/${user._id}`}>{user.name}</Link></div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.email}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.active}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">${user.purchases} USD</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{newJoinedDate}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{lastLoginDate()}</div>\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n  })\r\n\r\n  const orderBy = (order) => {\r\n    console.log(\"ordering by date\");\r\n    removeAdminFromUsers.sort(function (a, b) {\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      if (order === \"date\") {\r\n        if (orderState.orderName === \"date\" && orderState.asc) {\r\n          return new Date(a.joined) - new Date(b.joined);\r\n        } else {\r\n          return new Date(b.joined) - new Date(a.joined);\r\n        }\r\n      } else if (order === \"purchases\") {\r\n        if (orderState.orderName === \"purchases\" && orderState.asc) {\r\n          return a.purchases - b.purchases;\r\n        } else {\r\n          return b.purchases - a.purchases;\r\n        }\r\n      } else if (order === \"email\") {\r\n        if (orderState.orderName === \"email\" && orderState.asc) {\r\n          if (a.email > b.email) { return -1; }\r\n          if (a.email < b.email) { return 1; }\r\n        } else {\r\n          if (a.email < b.email) { return -1; }\r\n          if (a.email > b.email) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"name\") {\r\n        let nameA = a.name.toLowerCase();\r\n        let nameB = b.name.toLowerCase();\r\n\r\n        if (orderState.orderName === \"name\" && orderState.asc) {\r\n          if (nameA > nameB) { return -1; }\r\n          if (nameA < nameB) { return 1; }\r\n        } else {\r\n          if (nameA < nameB) { return -1; }\r\n          if (nameA > nameB) { return 1; }\r\n        }\r\n\r\n        return 0;\r\n      } else if (order === \"active\") {\r\n        let activeA = a.active.toLowerCase();\r\n        let activeB = b.active.toLowerCase();\r\n\r\n        if (orderState.orderName === \"active\" && orderState.asc) {\r\n          if (activeA < activeB) { return -1; }\r\n          if (activeA > activeB) { return 1; }\r\n        } else {\r\n          if (activeA > activeB) { return -1; }\r\n          if (activeA < activeB) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"lastLogin\") {\r\n        if (orderState.lastLogin === \"date\" && orderState.asc) {\r\n          return new Date(a.lastLogin) - new Date(b.lastLogin);\r\n        } else {\r\n          return new Date(b.lastLogin) - new Date(a.lastLogin);\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    setStateUsers(removeAdminFromUsers);\r\n    // setTest({ loading: false })\r\n    setOrderState({\r\n      orderName: order,\r\n      asc: !orderState.asc\r\n    })\r\n  }\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    const selectedUsers = stateUsers.filter((user) => {\r\n      return user.selected\r\n    });\r\n\r\n    console.log(selectedUsers)\r\n\r\n    if (selectedUsers.length > 0) {\r\n      let title = \"\";\r\n      // let users = selectedUsers.map(user => {\r\n      //   return user._id;\r\n      // })\r\n      if (e.target.value === \"activate\") {\r\n        title = \"Activate Users\"\r\n      } else if (e.target.value === \"delete\") {\r\n        title = \"Delete Users\"\r\n      }\r\n\r\n      setModalText({\r\n        title: title,\r\n        action: e.target.value,\r\n        users: selectedUsers\r\n      });\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  const saveChanges = () => {\r\n    console.log(\"inside save changes\");\r\n    if (modalText.action === \"activate\") {\r\n      dispatch(saveUsersAction(modalText));\r\n    } else if (modalText.action === \"delete\") {\r\n      dispatch(deleteUsersAction(modalText));\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n  const movePage = (direction) => {\r\n    if (direction === \"previous\") {\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 1),\r\n        number: pageUsers.number - 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 2).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length\r\n      })\r\n    } else {\r\n      console.log(pageUsers.number);\r\n      console.log(paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length);\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1),\r\n        number: pageUsers.number + 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 2).length\r\n      })\r\n    }\r\n  }\r\n\r\n  const findUser = (e) => {\r\n    console.log(\"find a user\");\r\n    // console.log(e.target.value);\r\n    const text = e.target.value.toLowerCase();\r\n    console.log(text);\r\n    const filteredusers = removeAdminFromUsers.filter((user) => {\r\n      console.log(user.name)\r\n      return (user.name.toLowerCase().indexOf(text) > -1 || user.email.toLowerCase().indexOf(text) > -1);\r\n    })\r\n\r\n    console.log(filteredusers);\r\n    setStateUsers(filteredusers);\r\n  }\r\n\r\n  const allCoupons = coupons.map((coupon, i) => {\r\n\r\n    const today = new Date();\r\n    const couponDate = new Date(coupon.date);\r\n    const newCouponDate = `${('0' + couponDate.getDate()).slice(-2)}/${('0' + couponDate.getMonth() + 1).slice(-2)}/${couponDate.getFullYear()}`;\r\n    // console.log(\"Inside all Users\");\r\n    // console.log(user.selected)\r\n    let emails = [];\r\n    let courses = [];\r\n\r\n    if (coupon.restricted.length > 0) {\r\n      for (let i = 0; i < coupon.restricted.length; i++) {\r\n        emails.push(coupon.restricted[i].email);\r\n      }\r\n    }\r\n\r\n    const allEmails = emails.length > 0 && emails.map((email, i) => {\r\n      return (\r\n        <>\r\n          <span>{email}</span>\r\n          { i === (emails.length-1) ? \"\" : <hr className=\"my-2\" />}\r\n        </>\r\n      )\r\n    });\r\n\r\n\r\n    for (let i = 0; i < coupon.courses.length; i++) {\r\n      courses.push(coupon.courses[i].name);\r\n    }\r\n\r\n    const allCourses = courses.length > 0 && courses.map((course, i) => {\r\n      return (\r\n        <>\r\n          <span key={i}>{course}</span>\r\n          { i === (courses.length-1) ? \"\" : <hr className=\"my-2\" />}\r\n        </>\r\n      )\r\n    });\r\n\r\n    const lastLogin = new Date(coupon.lastLogin);\r\n    const lastLoginDate = () => {\r\n      if (today.getDate() === lastLogin.getDate() &&\r\n        today.getMonth() === lastLogin.getMonth() &&\r\n        today.getFullYear() === lastLogin.getFullYear()\r\n      ) {\r\n        return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - Today`\r\n      } else {\r\n        return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - ${lastLogin.getDate()}/${lastLogin.getMonth() + 1}/${lastLogin.getFullYear()}`;\r\n      }\r\n    }\r\n    return (\r\n      <tr key={coupon._id}>\r\n        <td>\r\n          <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={coupon.selected == null ? false : coupon.selected}\r\n            value={coupon.selected}\r\n            onChange={(e) => { selectUsers(i, e) }}\r\n            className=\"mr-2\"\r\n          />\r\n          <div className=\"allUsersTableDiv\"><Link to={`/admin/coupons/edit/${coupon._id}`}>{coupon.code}</Link></div>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{coupon.name}</div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{newCouponDate}</div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{coupon.used}</div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{coupon.available}</div>\r\n        </td>\r\n        <td className=\"px-3\">{allCourses}</td>\r\n        <td className=\"px-3\">{allEmails.length > 0 ? allEmails : \"No Restrictions\"}</td>\r\n        <td className=\"px-3\">{coupon.active ? \"True\" : \"False\" }</td>\r\n      </tr>\r\n    )\r\n\r\n  })\r\n\r\n  return (\r\n    <div className=\"allUsersCtn container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col allCouponsTable\">\r\n          <Link to=\"/admin/coupons/new\" className=\"btn btn-primary\">New Coupon</Link>\r\n          <div className=\"row\">\r\n            <Col sm=\"5\">\r\n              <Form.Control className=\"my-3 input-md\" type=\"text\" placeholder=\"Search coupons\" onChange={findUser} />\r\n            </Col>\r\n          </div>\r\n          <Table striped bordered hover responsive size=\"sm\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={(e) => { selectUsers(\"all\", e) }}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {userSelected ? (\r\n                    <select defaultValue={'DEFAULT'} onChange={handleChange}>\r\n                      <option value=\"DEFAULT\" disabled>Bulk Actions</option>\r\n                      <option value=\"activate\">Activate</option>\r\n                      <option value=\"delete\">Delete</option>\r\n                    </select>\r\n                  ) : (\r\n                      <span onClick={() => orderBy(\"name\")}>Codes</span>\r\n                    )}\r\n                </th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"email\")}>Name</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"active\")}>Expires</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"purchases\")}>Used</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"date\")}>Available</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"lastLogin\")}>Courses</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"lastLogin\")}>Emails</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"lastLogin\")}>Active</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allCoupons.length > 0 ? allCoupons : <tr className=\"my-3\"><td>No Users found</td></tr>}\r\n            </tbody>\r\n            {/* <h1>{!test.loading ? \"Working\" : null}</h1> */}\r\n          </Table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <nav aria-label=\"Page navigation example\" className=\"mt-3\">\r\n            <ul className=\"pagination justify-content-center\">\r\n              <li className={pageUsers.firstPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"previous\")} className=\"page-link\" href=\"#\">Previous</a>\r\n              </li>\r\n              <li className={pageUsers.lastPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"next\")}\r\n                  className=\"page-link\"\r\n                  href=\"#\">Next</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to {modalText.action} the following users?</p>\r\n          {modalText.users.map((user, i) => {\r\n            return <p key={i}><b>{user.name}</b></p>;\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coupon\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\NewCoupon.js",["454","455","456"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCouponAction } from '../../actions/admin';\r\nimport { getCourses } from '../../actions/courses'\r\n\r\nimport { Button} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, InputGroup, Dropdown, FormControl } from 'react-bootstrap';\r\nimport './AllUsers.css';\r\nimport './Coupons.css'\r\n\r\nconst NewCoupon = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const courses = useSelector(state => state.courses);\r\n  const { all } = courses;\r\n\r\n  const [coursesState, setCoursesState] = useState([]);\r\n  const [coupon, setCoupon] = useState({\r\n    amountType: \"percentage\",\r\n    amount: \"\",\r\n    code: \"\",\r\n    name: \"\",\r\n    expires: \"\",\r\n    available: \"\",\r\n    emails: [],\r\n    active: false\r\n  });\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const theCourses = all.map((course, i) => {\r\n      return {\r\n        courseId: course._id,\r\n        name: course.name,\r\n        selected: false,\r\n        key: i\r\n      }\r\n    })\r\n\r\n    theCourses.push({ name: \"All Courses\", selected: false });\r\n    setCoursesState(theCourses);\r\n\r\n  }, [all]);\r\n\r\n  // The forwardRef is important!!\r\n  // Dropdown needs access to the DOM node in order to position the Menu\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n      className=\"mb-2 selectCourses form-control btn-primary\"\r\n    >\r\n      {children}\r\n    &#x25bc;\r\n    </a>\r\n  ));\r\n\r\n  // forwardRef again here!\r\n  // Dropdown needs access to the DOM of the Menu to measure it\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n\r\n  const selectCourse = (i) => {\r\n\r\n    const coursesCopy = [...coursesState];\r\n    coursesCopy[i].selected = !coursesCopy[i].selected;\r\n\r\n    setCoursesState(coursesCopy);\r\n  }\r\n\r\n  const coursesSelected = coursesState.map((course, i) => {\r\n    return course.selected ? <Button key={i} variant=\"warning\" className=\"my-4 mr-4\" onClick={() => selectCourse(i)}>{course.name}</Button> : \"\"\r\n  })\r\n\r\n  const allCourses = coursesState.map((course, i) => {\r\n    return (\r\n      <Dropdown.Item active={course.selected ? \"active\" : \"\"} key={i} eventKey={i} onClick={() => selectCourse(i)}>{course.name}</Dropdown.Item>\r\n    )\r\n  });\r\n\r\n  const coursesToCoupon = coursesState.filter((course, i) => {\r\n    return course.selected;\r\n  });\r\n\r\n  const couponUpdate = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      [e.target.name]: e.target.name === \"active\" ? e.target.checked : e.target.value\r\n    })\r\n  }\r\n\r\n  const submitCoupon = (e) => {\r\n    e.preventDefault();\r\n    if (coursesToCoupon.length < 1) {\r\n      console.log(\"Need to select courses\");\r\n    }\r\n    dispatch(createCouponAction(coursesToCoupon, coupon));\r\n    console.log(coupon);\r\n  }\r\n\r\n  const typingEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  const addEmails = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      emails: [...coupon.emails, {email}]\r\n    })\r\n  }\r\n\r\n  const allEmails = coupon.emails.map((coupon, i) => {\r\n    return <Button className=\"mr-3\" key={i} variant=\"outline-primary\">{coupon.email}</Button>\r\n  })\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <Link to=\"/admin/coupons\">Go back</Link>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              New Coupon\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={submitCoupon}>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle as={CustomToggle} id=\"dropdown-basic\">\r\n                    Select courses\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu as={CustomMenu}>\r\n                    {allCourses}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <div>{coursesSelected}</div>\r\n\r\n                <select className=\"form-control\" defaultValue={'DEFAULT'} onChange={couponUpdate} name=\"amountType\">\r\n                  <option value=\"DEFAULT\" disabled>Select Amount Type</option>\r\n                  <option value=\"dollars\">Dollars</option>\r\n                  <option value=\"percentage\">Percentage</option>\r\n                </select>\r\n                <Form.Control name=\"amount\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Enter amount\" onChange={couponUpdate} />\r\n                \r\n                <Form.Control name=\"code\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Coupon Code\" onChange={couponUpdate} />\r\n                <Form.Control name=\"name\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Coupon Name\" onChange={couponUpdate} />\r\n                <Form.Control name=\"expires\" required className=\"my-3 input-md\" type=\"date\" placeholder=\"Expires\" onChange={couponUpdate} />\r\n                <Form.Control name=\"available\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Number Available\" onChange={couponUpdate} />\r\n             \r\n                <InputGroup className=\"my-3 input-md\">\r\n                  <FormControl\r\n                    placeholder=\"Add Email\"\r\n                    aria-label=\"Add Email\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    placeholder=\"Private Email\"\r\n                    name=\"emails\"\r\n                    onChange={typingEmail}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\" onClick={addEmails}>Add Email</Button>\r\n                  </InputGroup.Append>\r\n                  \r\n                </InputGroup>\r\n                <div className=\"my-3\">{allEmails}</div>\r\n\r\n                <Form.Group id=\"formGridCheckbox\">\r\n                  <Form.Check name=\"active\" type=\"checkbox\" label=\"Activate\" onChange={couponUpdate} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                  Create Coupon\r\n              </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewCoupon;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\EditCoupon.js",["457","458","459","460","461","462"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCouponAction, getCouponIdAction, updateCouponAction } from '../../actions/admin';\r\nimport { getCourses } from '../../actions/courses';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Form, InputGroup, Dropdown, FormControl } from 'react-bootstrap';\r\nimport './AllUsers.css';\r\nimport './Coupons.css'\r\n\r\nconst EditCoupon = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const courses = useSelector(state => state.courses);\r\n  const { all } = courses;\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { coupon: theCoupon } = admin;\r\n\r\n  const [coursesState, setCoursesState] = useState([]);\r\n  const [coupon, setCoupon] = useState({\r\n    amountType: \"percentage\",\r\n    amount: \"\",\r\n    code: \"\",\r\n    name: \"\",\r\n    expires: \"\",\r\n    available: \"\",\r\n    emails: [],\r\n    active: false\r\n  });\r\n\r\n  const { courseTag: couponId } = useParams();\r\n\r\n  // console.log(couponId);\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n    dispatch(getCouponIdAction(couponId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    const getDate = new Date(theCoupon.date);\r\n    // console.log(getDate);\r\n    // console.log(typeof getDate);\r\n    if (getDate != \"Invalid Date\") {\r\n      const newDate = `${getDate.getFullYear()}-${('0' + getDate.getMonth() + 1).slice(-2)}-${('0' + getDate.getDate()).slice(-2)}`;\r\n      // console.log(newDate);\r\n      // console.log(typeof newDate);\r\n      setCoupon({\r\n        ...coupon,\r\n        amount: theCoupon.amount,\r\n        code: theCoupon.code,\r\n        name: theCoupon.name,\r\n        expires: newDate ? newDate : \"2020-12-05\",\r\n        available: theCoupon.available,\r\n        emails: theCoupon.restricted ? theCoupon.restricted : [],\r\n        active: theCoupon.active\r\n      })\r\n    }\r\n\r\n    const addSelectCourses = theCoupon.courses ? theCoupon.courses : [];\r\n    const coursesCopy = [...coursesState];\r\n\r\n    for(let i=0; i < coursesCopy.length; i++ ) {\r\n      for(let j=0; j < addSelectCourses.length; j++) {\r\n        if(coursesCopy[i].name === addSelectCourses[j].name) {\r\n          coursesCopy[i].selected = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    setCoursesState(coursesCopy);\r\n  }, [theCoupon]);\r\n\r\n  useEffect(() => {\r\n    const theCourses = all.map((course, i) => {\r\n      return {\r\n        courseId: course._id,\r\n        name: course.name,\r\n        selected: false,\r\n        key: i\r\n      }\r\n    })\r\n\r\n    theCourses.push({ name: \"All Courses\", selected: false });\r\n    setCoursesState(theCourses);\r\n\r\n  }, [all]);\r\n\r\n  // The forwardRef is important!!\r\n  // Dropdown needs access to the DOM node in order to position the Menu\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n      className=\"mb-2 selectCourses form-control btn-primary\"\r\n    >\r\n      {children}\r\n    &#x25bc;\r\n    </a>\r\n  ));\r\n\r\n  // forwardRef again here!\r\n  // Dropdown needs access to the DOM of the Menu to measure it\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n\r\n  const selectCourse = (i) => {\r\n\r\n    const coursesCopy = [...coursesState];\r\n    coursesCopy[i].selected = !coursesCopy[i].selected;\r\n\r\n    setCoursesState(coursesCopy);\r\n  }\r\n\r\n  const coursesSelected = coursesState.map((course, i) => {\r\n    return course.selected ? <Button key={i} variant=\"warning\" className=\"my-4 mr-4\" onClick={() => selectCourse(i)}>{course.name}</Button> : \"\"\r\n  })\r\n\r\n  const allCourses = coursesState.map((course, i) => {\r\n    return (\r\n      <Dropdown.Item active={course.selected ? \"active\" : \"\"} key={i} eventKey={i} onClick={() => selectCourse(i)}>{course.name}</Dropdown.Item>\r\n    )\r\n  });\r\n\r\n  const coursesToCoupon = coursesState.filter((course, i) => {\r\n    return course.selected;\r\n  });\r\n\r\n  const couponUpdate = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      [e.target.name]: e.target.name === \"active\" ? e.target.checked : e.target.value\r\n    })\r\n  }\r\n\r\n  const typingEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  const addEmails = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      emails: [...coupon.emails, { email }]\r\n    })\r\n  }\r\n\r\n  const removeEmails = (index) => {\r\n    const emailRemove = coupon.emails.length > 0 && coupon.emails.filter((email, i) => {\r\n      return index !== i\r\n    })\r\n\r\n    setCoupon({\r\n      ...coupon,\r\n      emails: emailRemove\r\n    })\r\n  }\r\n\r\n  const allEmails = coupon.emails.length > 0 && coupon.emails.map((coupon, i) => {\r\n    return <Button className=\"mr-3\" key={i} variant=\"outline-primary\" onClick={() => removeEmails(i)}>{coupon.email}</Button>\r\n  })\r\n  console.log(coupon);\r\n\r\n  const updateCoupon = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateCouponAction(coursesToCoupon, coupon, couponId));\r\n  }\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <Link to=\"/admin/coupons\">Go back</Link>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Edit Coupon\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={updateCoupon}>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle as={CustomToggle} id=\"dropdown-basic\">\r\n                    Select courses\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu as={CustomMenu}>\r\n                    {allCourses}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <div>{coursesSelected}</div>\r\n\r\n                <select className=\"form-control\" defaultValue={'DEFAULT'} onChange={couponUpdate} name=\"amountType\" value={coupon.amountType}>\r\n                  <option value=\"DEFAULT\" disabled>Select Amount Type</option>\r\n                  <option value=\"dollars\">Dollars</option>\r\n                  <option value=\"percentage\">Percentage</option>\r\n                </select>\r\n                <Form.Control name=\"amount\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Enter amount\" onChange={couponUpdate} value={coupon.amount ? coupon.amount : \"\"} />\r\n\r\n                <Form.Control name=\"code\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Coupon Code\" onChange={couponUpdate} value={coupon.code ? coupon.code : \"\"} />\r\n                <Form.Control name=\"name\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Coupon Name\" onChange={couponUpdate} value={coupon.name ? coupon.name : \"\"} />\r\n                <Form.Control name=\"expires\" required className=\"my-3 input-md\" type=\"date\" placeholder=\"Expires\" onChange={couponUpdate} value={coupon.expires ? coupon.expires : \"\"} />\r\n                <Form.Control name=\"available\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Number Available\" onChange={couponUpdate} value={coupon.available ? coupon.available : \"\"} />\r\n\r\n                <InputGroup className=\"my-3 input-md\">\r\n                  <FormControl\r\n                    placeholder=\"Add Email\"\r\n                    aria-label=\"Add Email\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    placeholder=\"Private Email\"\r\n                    name=\"emails\"\r\n                    onChange={typingEmail}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\" onClick={addEmails}>Add Email</Button>\r\n                  </InputGroup.Append>\r\n\r\n                </InputGroup>\r\n                <div className=\"my-3\">{allEmails}</div>\r\n\r\n                <Form.Group id=\"formGridCheckbox\">\r\n                  <Form.Check name=\"active\" type=\"checkbox\" label=\"Activate\" onChange={couponUpdate} checked={coupon.active ? true : false} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                  Update Coupon\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCoupon;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\couponConstants.js",[],{"ruleId":"463","replacedBy":"464"},{"ruleId":"465","replacedBy":"466"},{"ruleId":"467","severity":1,"message":"468","line":14,"column":15,"nodeType":"469","endLine":14,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":15,"column":15,"nodeType":"469","endLine":15,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":16,"column":15,"nodeType":"469","endLine":16,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":21,"column":13,"nodeType":"469","endLine":21,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":22,"column":13,"nodeType":"469","endLine":22,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":23,"column":13,"nodeType":"469","endLine":23,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":24,"column":13,"nodeType":"469","endLine":24,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":25,"column":13,"nodeType":"469","endLine":25,"endColumn":25},{"ruleId":"470","severity":1,"message":"471","line":12,"column":11,"nodeType":"472","messageId":"473","endLine":12,"endColumn":18},{"ruleId":"470","severity":1,"message":"474","line":12,"column":20,"nodeType":"472","messageId":"473","endLine":12,"endColumn":25},{"ruleId":"470","severity":1,"message":"475","line":16,"column":9,"nodeType":"472","messageId":"473","endLine":16,"endColumn":22},{"ruleId":"476","severity":1,"message":"477","line":20,"column":6,"nodeType":"478","endLine":20,"endColumn":8,"suggestions":"479"},{"ruleId":"470","severity":1,"message":"480","line":4,"column":8,"nodeType":"472","messageId":"473","endLine":4,"endColumn":13},{"ruleId":"476","severity":1,"message":"481","line":33,"column":5,"nodeType":"478","endLine":33,"endColumn":7,"suggestions":"482"},{"ruleId":"476","severity":1,"message":"483","line":43,"column":5,"nodeType":"478","endLine":43,"endColumn":41,"suggestions":"484"},{"ruleId":"476","severity":1,"message":"485","line":43,"column":6,"nodeType":"486","endLine":43,"endColumn":40},{"ruleId":"476","severity":1,"message":"487","line":51,"column":5,"nodeType":"478","endLine":51,"endColumn":24,"suggestions":"488"},{"ruleId":"476","severity":1,"message":"489","line":56,"column":5,"nodeType":"478","endLine":56,"endColumn":25,"suggestions":"490"},{"ruleId":"476","severity":1,"message":"485","line":56,"column":6,"nodeType":"486","endLine":56,"endColumn":24},{"ruleId":"491","severity":1,"message":"492","line":180,"column":8,"nodeType":"469","endLine":180,"endColumn":232},{"ruleId":"476","severity":1,"message":"493","line":22,"column":6,"nodeType":"478","endLine":22,"endColumn":8,"suggestions":"494"},{"ruleId":"476","severity":1,"message":"495","line":29,"column":6,"nodeType":"478","endLine":29,"endColumn":57,"suggestions":"496"},{"ruleId":"476","severity":1,"message":"485","line":29,"column":7,"nodeType":"486","endLine":29,"endColumn":56},{"ruleId":"497","severity":1,"message":"498","line":56,"column":30,"nodeType":"499","messageId":"500","endLine":56,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":70,"column":23,"nodeType":"499","messageId":"500","endLine":70,"endColumn":25},{"ruleId":"491","severity":1,"message":"492","line":97,"column":15,"nodeType":"469","endLine":97,"endColumn":158},{"ruleId":"501","severity":1,"message":"502","line":130,"column":32,"nodeType":"486","messageId":"503","endLine":130,"endColumn":34},{"ruleId":"501","severity":1,"message":"502","line":130,"column":60,"nodeType":"486","messageId":"503","endLine":130,"endColumn":62},{"ruleId":"470","severity":1,"message":"504","line":15,"column":10,"nodeType":"472","messageId":"473","endLine":15,"endColumn":26},{"ruleId":"470","severity":1,"message":"505","line":15,"column":28,"nodeType":"472","messageId":"473","endLine":15,"endColumn":47},{"ruleId":"476","severity":1,"message":"477","line":21,"column":6,"nodeType":"478","endLine":21,"endColumn":8,"suggestions":"506"},{"ruleId":"476","severity":1,"message":"507","line":28,"column":6,"nodeType":"478","endLine":28,"endColumn":15,"suggestions":"508"},{"ruleId":"470","severity":1,"message":"509","line":31,"column":9,"nodeType":"472","messageId":"473","endLine":31,"endColumn":15},{"ruleId":"510","severity":1,"message":"511","line":41,"column":55,"nodeType":"512","messageId":"513","endLine":41,"endColumn":57},{"ruleId":"497","severity":1,"message":"514","line":51,"column":20,"nodeType":"499","messageId":"500","endLine":51,"endColumn":22},{"ruleId":"470","severity":1,"message":"515","line":7,"column":8,"nodeType":"472","messageId":"473","endLine":7,"endColumn":17},{"ruleId":"476","severity":1,"message":"516","line":35,"column":5,"nodeType":"478","endLine":35,"endColumn":18,"suggestions":"517"},{"ruleId":"470","severity":1,"message":"518","line":2,"column":10,"nodeType":"472","messageId":"473","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"519","line":12,"column":6,"nodeType":"478","endLine":12,"endColumn":8,"suggestions":"520"},{"ruleId":"470","severity":1,"message":"518","line":4,"column":16,"nodeType":"472","messageId":"473","endLine":4,"endColumn":24},{"ruleId":"476","severity":1,"message":"516","line":30,"column":5,"nodeType":"478","endLine":30,"endColumn":14,"suggestions":"521"},{"ruleId":"470","severity":1,"message":"522","line":32,"column":8,"nodeType":"472","messageId":"473","endLine":32,"endColumn":16},{"ruleId":"470","severity":1,"message":"523","line":34,"column":8,"nodeType":"472","messageId":"473","endLine":34,"endColumn":16},{"ruleId":"470","severity":1,"message":"524","line":58,"column":8,"nodeType":"472","messageId":"473","endLine":58,"endColumn":19},{"ruleId":"476","severity":1,"message":"525","line":20,"column":5,"nodeType":"478","endLine":20,"endColumn":7,"suggestions":"526"},{"ruleId":"470","severity":1,"message":"527","line":21,"column":16,"nodeType":"472","messageId":"473","endLine":21,"endColumn":23},{"ruleId":"470","severity":1,"message":"528","line":36,"column":9,"nodeType":"472","messageId":"473","endLine":36,"endColumn":18},{"ruleId":"476","severity":1,"message":"477","line":44,"column":6,"nodeType":"478","endLine":44,"endColumn":12,"suggestions":"529"},{"ruleId":"476","severity":1,"message":"530","line":60,"column":6,"nodeType":"478","endLine":60,"endColumn":31,"suggestions":"531"},{"ruleId":"497","severity":1,"message":"498","line":73,"column":35,"nodeType":"499","messageId":"500","endLine":73,"endColumn":37},{"ruleId":"476","severity":1,"message":"532","line":108,"column":6,"nodeType":"478","endLine":108,"endColumn":14,"suggestions":"533"},{"ruleId":"470","severity":1,"message":"534","line":135,"column":9,"nodeType":"472","messageId":"473","endLine":135,"endColumn":17},{"ruleId":"497","severity":1,"message":"514","line":177,"column":86,"nodeType":"499","messageId":"500","endLine":177,"endColumn":88},{"ruleId":"470","severity":1,"message":"527","line":10,"column":16,"nodeType":"472","messageId":"473","endLine":10,"endColumn":23},{"ruleId":"476","severity":1,"message":"535","line":18,"column":6,"nodeType":"478","endLine":18,"endColumn":8,"suggestions":"536"},{"ruleId":"470","severity":1,"message":"534","line":22,"column":9,"nodeType":"472","messageId":"473","endLine":22,"endColumn":17},{"ruleId":"470","severity":1,"message":"537","line":1,"column":26,"nodeType":"472","messageId":"473","endLine":1,"endColumn":35},{"ruleId":"470","severity":1,"message":"538","line":3,"column":10,"nodeType":"472","messageId":"473","endLine":3,"endColumn":25},{"ruleId":"470","severity":1,"message":"539","line":4,"column":10,"nodeType":"472","messageId":"473","endLine":4,"endColumn":28},{"ruleId":"470","severity":1,"message":"480","line":6,"column":8,"nodeType":"472","messageId":"473","endLine":6,"endColumn":13},{"ruleId":"470","severity":1,"message":"540","line":13,"column":11,"nodeType":"472","messageId":"473","endLine":13,"endColumn":26},{"ruleId":"476","severity":1,"message":"541","line":27,"column":6,"nodeType":"478","endLine":27,"endColumn":21,"suggestions":"542"},{"ruleId":"476","severity":1,"message":"495","line":26,"column":6,"nodeType":"478","endLine":26,"endColumn":8,"suggestions":"543"},{"ruleId":"476","severity":1,"message":"495","line":35,"column":6,"nodeType":"478","endLine":35,"endColumn":36,"suggestions":"544"},{"ruleId":"476","severity":1,"message":"485","line":35,"column":7,"nodeType":"486","endLine":35,"endColumn":35},{"ruleId":"470","severity":1,"message":"518","line":3,"column":10,"nodeType":"472","messageId":"473","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":19,"column":6,"nodeType":"478","endLine":19,"endColumn":8,"suggestions":"545"},{"ruleId":"470","severity":1,"message":"546","line":4,"column":21,"nodeType":"472","messageId":"473","endLine":4,"endColumn":25},{"ruleId":"476","severity":1,"message":"547","line":34,"column":5,"nodeType":"478","endLine":34,"endColumn":25,"suggestions":"548"},{"ruleId":"463","replacedBy":"549"},{"ruleId":"465","replacedBy":"550"},{"ruleId":"476","severity":1,"message":"519","line":30,"column":6,"nodeType":"478","endLine":30,"endColumn":32,"suggestions":"551"},{"ruleId":"470","severity":1,"message":"552","line":91,"column":7,"nodeType":"472","messageId":"473","endLine":91,"endColumn":22},{"ruleId":"470","severity":1,"message":"553","line":13,"column":11,"nodeType":"472","messageId":"473","endLine":13,"endColumn":15},{"ruleId":"470","severity":1,"message":"554","line":13,"column":26,"nodeType":"472","messageId":"473","endLine":13,"endColumn":32},{"ruleId":"476","severity":1,"message":"555","line":20,"column":6,"nodeType":"478","endLine":20,"endColumn":8,"suggestions":"556"},{"ruleId":"476","severity":1,"message":"519","line":29,"column":6,"nodeType":"478","endLine":29,"endColumn":20,"suggestions":"557"},{"ruleId":"476","severity":1,"message":"519","line":22,"column":6,"nodeType":"478","endLine":22,"endColumn":20,"suggestions":"558"},{"ruleId":"470","severity":1,"message":"559","line":1,"column":17,"nodeType":"472","messageId":"473","endLine":1,"endColumn":23},{"ruleId":"470","severity":1,"message":"560","line":18,"column":8,"nodeType":"472","messageId":"473","endLine":18,"endColumn":12},{"ruleId":"470","severity":1,"message":"561","line":19,"column":8,"nodeType":"472","messageId":"473","endLine":19,"endColumn":14},{"ruleId":"470","severity":1,"message":"562","line":79,"column":8,"nodeType":"472","messageId":"473","endLine":79,"endColumn":23},{"ruleId":"476","severity":1,"message":"563","line":97,"column":5,"nodeType":"478","endLine":97,"endColumn":36,"suggestions":"564"},{"ruleId":"476","severity":1,"message":"565","line":27,"column":6,"nodeType":"478","endLine":27,"endColumn":42,"suggestions":"566"},{"ruleId":"476","severity":1,"message":"485","line":27,"column":7,"nodeType":"486","endLine":27,"endColumn":41},{"ruleId":"470","severity":1,"message":"567","line":1,"column":28,"nodeType":"472","messageId":"473","endLine":1,"endColumn":36},{"ruleId":"470","severity":1,"message":"568","line":1,"column":38,"nodeType":"472","messageId":"473","endLine":1,"endColumn":46},{"ruleId":"470","severity":1,"message":"559","line":1,"column":48,"nodeType":"472","messageId":"473","endLine":1,"endColumn":54},{"ruleId":"476","severity":1,"message":"565","line":24,"column":6,"nodeType":"478","endLine":24,"endColumn":42,"suggestions":"569"},{"ruleId":"476","severity":1,"message":"485","line":24,"column":7,"nodeType":"486","endLine":24,"endColumn":41},{"ruleId":"476","severity":1,"message":"477","line":48,"column":6,"nodeType":"478","endLine":48,"endColumn":8,"suggestions":"570"},{"ruleId":"476","severity":1,"message":"571","line":54,"column":6,"nodeType":"478","endLine":54,"endColumn":15,"suggestions":"572"},{"ruleId":"476","severity":1,"message":"573","line":74,"column":6,"nodeType":"478","endLine":74,"endColumn":18,"suggestions":"574"},{"ruleId":"510","severity":1,"message":"511","line":114,"column":51,"nodeType":"512","messageId":"513","endLine":114,"endColumn":53},{"ruleId":"510","severity":1,"message":"575","line":165,"column":31,"nodeType":"576","messageId":"513","endLine":165,"endColumn":40},{"ruleId":"467","severity":1,"message":"468","line":360,"column":17,"nodeType":"469","endLine":360,"endColumn":88},{"ruleId":"467","severity":1,"message":"468","line":363,"column":17,"nodeType":"469","endLine":365,"endColumn":28},{"ruleId":"470","severity":1,"message":"554","line":26,"column":11,"nodeType":"472","messageId":"473","endLine":26,"endColumn":17},{"ruleId":"470","severity":1,"message":"577","line":45,"column":9,"nodeType":"472","messageId":"473","endLine":45,"endColumn":20},{"ruleId":"476","severity":1,"message":"578","line":66,"column":6,"nodeType":"478","endLine":66,"endColumn":42,"suggestions":"579"},{"ruleId":"476","severity":1,"message":"485","line":66,"column":7,"nodeType":"486","endLine":66,"endColumn":41},{"ruleId":"580","severity":1,"message":"581","line":103,"column":15,"nodeType":"469","endLine":103,"endColumn":104},{"ruleId":"580","severity":1,"message":"581","line":106,"column":15,"nodeType":"469","endLine":106,"endColumn":104},{"ruleId":"470","severity":1,"message":"582","line":11,"column":8,"nodeType":"472","messageId":"473","endLine":11,"endColumn":19},{"ruleId":"476","severity":1,"message":"547","line":44,"column":5,"nodeType":"478","endLine":44,"endColumn":25,"suggestions":"583"},{"ruleId":"476","severity":1,"message":"584","line":56,"column":5,"nodeType":"478","endLine":56,"endColumn":17,"suggestions":"585"},{"ruleId":"470","severity":1,"message":"568","line":1,"column":17,"nodeType":"472","messageId":"473","endLine":1,"endColumn":25},{"ruleId":"580","severity":1,"message":"581","line":20,"column":15,"nodeType":"469","endLine":20,"endColumn":63},{"ruleId":"580","severity":1,"message":"581","line":23,"column":15,"nodeType":"469","endLine":23,"endColumn":63},{"ruleId":"476","severity":1,"message":"477","line":45,"column":6,"nodeType":"478","endLine":45,"endColumn":15,"suggestions":"586"},{"ruleId":"476","severity":1,"message":"587","line":52,"column":5,"nodeType":"478","endLine":52,"endColumn":20,"suggestions":"588"},{"ruleId":"470","severity":1,"message":"589","line":58,"column":7,"nodeType":"472","messageId":"473","endLine":58,"endColumn":18},{"ruleId":"470","severity":1,"message":"590","line":5,"column":8,"nodeType":"472","messageId":"473","endLine":5,"endColumn":20},{"ruleId":"476","severity":1,"message":"477","line":16,"column":5,"nodeType":"478","endLine":16,"endColumn":7,"suggestions":"591"},{"ruleId":"470","severity":1,"message":"592","line":2,"column":8,"nodeType":"472","messageId":"473","endLine":2,"endColumn":14},{"ruleId":"470","severity":1,"message":"559","line":1,"column":48,"nodeType":"472","messageId":"473","endLine":1,"endColumn":54},{"ruleId":"476","severity":1,"message":"565","line":69,"column":6,"nodeType":"478","endLine":69,"endColumn":71,"suggestions":"593"},{"ruleId":"476","severity":1,"message":"485","line":69,"column":7,"nodeType":"486","endLine":69,"endColumn":70},{"ruleId":"476","severity":1,"message":"565","line":79,"column":6,"nodeType":"478","endLine":79,"endColumn":36,"suggestions":"594"},{"ruleId":"476","severity":1,"message":"485","line":79,"column":7,"nodeType":"486","endLine":79,"endColumn":35},{"ruleId":"580","severity":1,"message":"581","line":111,"column":15,"nodeType":"469","endLine":111,"endColumn":66},{"ruleId":"580","severity":1,"message":"581","line":114,"column":15,"nodeType":"469","endLine":114,"endColumn":66},{"ruleId":"470","severity":1,"message":"595","line":4,"column":3,"nodeType":"472","messageId":"473","endLine":4,"endColumn":13},{"ruleId":"470","severity":1,"message":"596","line":5,"column":3,"nodeType":"472","messageId":"473","endLine":5,"endColumn":12},{"ruleId":"597","severity":1,"message":"598","line":22,"column":1,"nodeType":"599","endLine":93,"endColumn":2},{"ruleId":"470","severity":1,"message":"600","line":7,"column":3,"nodeType":"472","messageId":"473","endLine":7,"endColumn":16},{"ruleId":"597","severity":1,"message":"598","line":44,"column":1,"nodeType":"599","endLine":191,"endColumn":2},{"ruleId":"470","severity":1,"message":"596","line":4,"column":3,"nodeType":"472","messageId":"473","endLine":4,"endColumn":12},{"ruleId":"597","severity":1,"message":"598","line":27,"column":1,"nodeType":"599","endLine":102,"endColumn":2},{"ruleId":"597","severity":1,"message":"598","line":46,"column":1,"nodeType":"599","endLine":126,"endColumn":2},{"ruleId":"476","severity":1,"message":"601","line":47,"column":6,"nodeType":"478","endLine":47,"endColumn":8,"suggestions":"602"},{"ruleId":"476","severity":1,"message":"603","line":56,"column":6,"nodeType":"478","endLine":56,"endColumn":19,"suggestions":"604"},{"ruleId":"497","severity":1,"message":"498","line":122,"column":26,"nodeType":"499","messageId":"500","endLine":122,"endColumn":28},{"ruleId":"580","severity":1,"message":"581","line":173,"column":13,"nodeType":"469","endLine":173,"endColumn":87},{"ruleId":"470","severity":1,"message":"605","line":3,"column":10,"nodeType":"472","messageId":"473","endLine":3,"endColumn":24},{"ruleId":"470","severity":1,"message":"606","line":5,"column":10,"nodeType":"472","messageId":"473","endLine":5,"endColumn":16},{"ruleId":"470","severity":1,"message":"607","line":5,"column":18,"nodeType":"472","messageId":"473","endLine":5,"endColumn":23},{"ruleId":"470","severity":1,"message":"546","line":6,"column":10,"nodeType":"472","messageId":"473","endLine":6,"endColumn":14},{"ruleId":"470","severity":1,"message":"474","line":14,"column":11,"nodeType":"472","messageId":"473","endLine":14,"endColumn":16},{"ruleId":"470","severity":1,"message":"608","line":19,"column":10,"nodeType":"472","messageId":"473","endLine":19,"endColumn":20},{"ruleId":"470","severity":1,"message":"609","line":19,"column":22,"nodeType":"472","messageId":"473","endLine":19,"endColumn":35},{"ruleId":"470","severity":1,"message":"610","line":20,"column":10,"nodeType":"472","messageId":"473","endLine":20,"endColumn":19},{"ruleId":"470","severity":1,"message":"611","line":20,"column":21,"nodeType":"472","messageId":"473","endLine":20,"endColumn":33},{"ruleId":"470","severity":1,"message":"612","line":21,"column":10,"nodeType":"472","messageId":"473","endLine":21,"endColumn":22},{"ruleId":"470","severity":1,"message":"613","line":21,"column":24,"nodeType":"472","messageId":"473","endLine":21,"endColumn":39},{"ruleId":"470","severity":1,"message":"614","line":22,"column":10,"nodeType":"472","messageId":"473","endLine":22,"endColumn":14},{"ruleId":"470","severity":1,"message":"615","line":22,"column":16,"nodeType":"472","messageId":"473","endLine":22,"endColumn":23},{"ruleId":"470","severity":1,"message":"616","line":23,"column":10,"nodeType":"472","messageId":"473","endLine":23,"endColumn":19},{"ruleId":"470","severity":1,"message":"617","line":23,"column":21,"nodeType":"472","messageId":"473","endLine":23,"endColumn":33},{"ruleId":"476","severity":1,"message":"477","line":45,"column":6,"nodeType":"478","endLine":45,"endColumn":8,"suggestions":"618"},{"ruleId":"476","severity":1,"message":"619","line":59,"column":6,"nodeType":"478","endLine":59,"endColumn":18,"suggestions":"620"},{"ruleId":"467","severity":1,"message":"468","line":337,"column":17,"nodeType":"469","endLine":337,"endColumn":88},{"ruleId":"467","severity":1,"message":"468","line":340,"column":17,"nodeType":"469","endLine":342,"endColumn":28},{"ruleId":"470","severity":1,"message":"560","line":17,"column":9,"nodeType":"472","messageId":"473","endLine":17,"endColumn":13},{"ruleId":"476","severity":1,"message":"477","line":52,"column":6,"nodeType":"478","endLine":52,"endColumn":8,"suggestions":"621"},{"ruleId":"476","severity":1,"message":"571","line":58,"column":6,"nodeType":"478","endLine":58,"endColumn":15,"suggestions":"622"},{"ruleId":"476","severity":1,"message":"573","line":78,"column":6,"nodeType":"478","endLine":78,"endColumn":18,"suggestions":"623"},{"ruleId":"497","severity":1,"message":"514","line":103,"column":26,"nodeType":"499","messageId":"500","endLine":103,"endColumn":28},{"ruleId":"470","severity":1,"message":"624","line":119,"column":9,"nodeType":"472","messageId":"473","endLine":119,"endColumn":17},{"ruleId":"510","severity":1,"message":"511","line":119,"column":51,"nodeType":"512","messageId":"513","endLine":119,"endColumn":53},{"ruleId":"510","severity":1,"message":"575","line":170,"column":31,"nodeType":"576","messageId":"513","endLine":170,"endColumn":40},{"ruleId":"470","severity":1,"message":"625","line":355,"column":11,"nodeType":"472","messageId":"473","endLine":355,"endColumn":24},{"ruleId":"467","severity":1,"message":"468","line":450,"column":17,"nodeType":"469","endLine":450,"endColumn":88},{"ruleId":"467","severity":1,"message":"468","line":453,"column":17,"nodeType":"469","endLine":455,"endColumn":28},{"ruleId":"476","severity":1,"message":"477","line":35,"column":6,"nodeType":"478","endLine":35,"endColumn":8,"suggestions":"626"},{"ruleId":"467","severity":1,"message":"468","line":55,"column":5,"nodeType":"469","endLine":63,"endColumn":6},{"ruleId":"627","severity":1,"message":"628","line":193,"column":21,"nodeType":"629","endLine":193,"endColumn":48},{"ruleId":"470","severity":1,"message":"630","line":3,"column":10,"nodeType":"472","messageId":"473","endLine":3,"endColumn":28},{"ruleId":"476","severity":1,"message":"631","line":42,"column":6,"nodeType":"478","endLine":42,"endColumn":8,"suggestions":"632"},{"ruleId":"497","severity":1,"message":"514","line":49,"column":17,"nodeType":"499","messageId":"500","endLine":49,"endColumn":19},{"ruleId":"476","severity":1,"message":"633","line":77,"column":6,"nodeType":"478","endLine":77,"endColumn":17,"suggestions":"634"},{"ruleId":"467","severity":1,"message":"468","line":97,"column":5,"nodeType":"469","endLine":105,"endColumn":6},{"ruleId":"627","severity":1,"message":"628","line":243,"column":21,"nodeType":"629","endLine":243,"endColumn":48},"no-native-reassign",["635"],"no-negated-in-lhs",["636"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'courseLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["637"],"'store' is defined but never used.","React Hook useEffect has missing dependencies: 'courseTag' and 'getCourse'. Either include them or remove the dependency array. If 'getCourse' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["638"],"React Hook useEffect has a missing dependency: 'setCoursesOwned'. Either include it or remove the dependency array.",["639"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has a missing dependency: 'redirectUser'. Either include it or remove the dependency array.",["640"],"React Hook useEffect has missing dependencies: 'auth.token', 'courseTag', and 'lessonsWatchedAction'. Either include them or remove the dependency array. If 'lessonsWatchedAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["641"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'courseTag'. Either include it or remove the dependency array.",["642"],"React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["643"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","unexpectedMixedOperator","'coursesThumbnail' is assigned a value but never used.","'setCoursesThumbnail' is assigned a value but never used.",["644"],"React Hook useEffect has a missing dependency: 'all'. Either include it or remove the dependency array.",["645"],"'images' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["646"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["647"],["648"],"'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'checkResult' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'resetMessage'. Either include it or remove the dependency array. If 'resetMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["649"],"'setData' is assigned a value but never used.","'courseTag' is assigned a value but never used.",["650"],"React Hook useEffect has a missing dependency: 'paymentState'. Either include it or remove the dependency array. You can also do a functional update 'setPaymentState(p => ...)' if you only need 'paymentState' in the 'setPaymentState' call.",["651"],"React Hook useEffect has missing dependencies: 'checkout', 'checkoutPrice', 'couponIsValid', and 'paymentState'. Either include them or remove the dependency array. You can also do a functional update 'setPaymentState(p => ...)' if you only need 'paymentState' in the 'setPaymentState' call.",["652"],"'getNonce' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'payAction'. Either include it or remove the dependency array. If 'payAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["653"],"'useEffect' is defined but never used.","'getCoursesOwned' is defined but never used.","'resetPaymentResult' is defined but never used.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["654"],["655"],["656"],["657"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'setCourseValues'. Either include it or remove the dependency array.",["658"],["635"],["636"],["659"],"'mapStateToProps' is assigned a value but never used.","'user' is assigned a value but never used.","'active' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'message', and 'token'. Either include them or remove the dependency array.",["660"],["661"],["662"],"'useRef' is defined but never used.","'auth' is assigned a value but never used.","'course' is assigned a value but never used.","'saveBlogDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'courseState' and 'dispatch'. Either include them or remove the dependency array.",["663"],"React Hook useEffect has missing dependencies: 'auth' and 'dispatch'. Either include them or remove the dependency array.",["664"],"'Fragment' is defined but never used.","'useState' is defined but never used.",["665"],["666"],"React Hook useEffect has a missing dependency: 'removeAdminFromUsers'. Either include it or remove the dependency array.",["667"],"React Hook useEffect has a missing dependency: 'pageUsers'. Either include it or remove the dependency array. You can also do a functional update 'setPageUsers(p => ...)' if you only need 'pageUsers' in the 'setPageUsers' call.",["668"],"Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","'loaderDelay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'userDetails'. Either include them or remove the dependency array. You can also do a functional update 'setUserDetails(u => ...)' if you only need 'userDetails' in the 'setUserDetails' call.",["669"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'htmlToDraft' is defined but never used.",["670"],"React Hook useEffect has missing dependencies: 'courseState' and 'updateCourseAction'. Either include them or remove the dependency array. If 'updateCourseAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["671"],["672"],"React Hook useEffect has a missing dependency: 'updateCourses'. Either include it or remove the dependency array.",["673"],"'dropzoneRef' is assigned a value but never used.","'SecondHeader' is defined but never used.",["674"],"'Navbar' is defined but never used.",["675"],["676"],"'PAY_COURSE' is defined but never used.","'PAY_ERROR' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'REGISTER_FAIL' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'subPage', and 'theUserCoursesFunc'. Either include them or remove the dependency array.",["677"],"React Hook useEffect has a missing dependency: 'theUserCoursesFunc'. Either include it or remove the dependency array.",["678"],"'allUsersAction' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'stateUsers' is assigned a value but never used.","'setStateUsers' is assigned a value but never used.","'selectAll' is assigned a value but never used.","'setSelectAll' is assigned a value but never used.","'userSelected' is assigned a value but never used.","'setUserSelected' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'modalText' is assigned a value but never used.","'setModalText' is assigned a value but never used.",["679"],"React Hook useEffect has a missing dependency: 'pageSales'. Either include it or remove the dependency array. You can also do a functional update 'setPageSales(p => ...)' if you only need 'pageSales' in the 'setPageSales' call.",["680"],["681"],["682"],["683"],"'allUsers' is assigned a value but never used.","'lastLoginDate' is assigned a value but never used.",["684"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'createCouponAction' is defined but never used.","React Hook useEffect has missing dependencies: 'couponId' and 'dispatch'. Either include them or remove the dependency array.",["685"],"React Hook useEffect has missing dependencies: 'coupon' and 'coursesState'. Either include them or remove the dependency array. You can also do a functional update 'setCoupon(c => ...)' if you only need 'coupon' in the 'setCoupon' call.",["686"],"no-global-assign","no-unsafe-negation",{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"687","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},{"desc":"716","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"699","fix":"722"},{"desc":"699","fix":"723"},{"desc":"710","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"731","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"736","fix":"738"},{"desc":"687","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"725","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"687","fix":"753"},{"desc":"736","fix":"754"},{"desc":"736","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"687","fix":"760"},{"desc":"761","fix":"762"},{"desc":"687","fix":"763"},{"desc":"740","fix":"764"},{"desc":"742","fix":"765"},{"desc":"687","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},"Update the dependencies array to be: [dispatch]",{"range":"771","text":"772"},"Update the dependencies array to be: [courseTag, getCourse]",{"range":"773","text":"774"},"Update the dependencies array to be: [setCoursesOwned]",{"range":"775","text":"776"},"Update the dependencies array to be: [auth.coursesOwned, redirectUser]",{"range":"777","text":"778"},"Update the dependencies array to be: [auth.token, courseTag, lessonsWatchedAction]",{"range":"779","text":"780"},"Update the dependencies array to be: [courseTag]",{"range":"781","text":"782"},"Update the dependencies array to be: [auth]",{"range":"783","text":"784"},{"range":"785","text":"772"},"Update the dependencies array to be: [all, loading]",{"range":"786","text":"787"},"Update the dependencies array to be: [formData, formMessage]",{"range":"788","text":"789"},"Update the dependencies array to be: [history]",{"range":"790","text":"791"},"Update the dependencies array to be: [formData, message]",{"range":"792","text":"793"},"Update the dependencies array to be: [resetMessage]",{"range":"794","text":"795"},"Update the dependencies array to be: [dispatch, user]",{"range":"796","text":"797"},"Update the dependencies array to be: [checkoutPrice, checkout, paymentState]",{"range":"798","text":"799"},"Update the dependencies array to be: [checkout, checkoutPrice, coupon, couponIsValid, paymentState]",{"range":"800","text":"801"},"Update the dependencies array to be: [payAction]",{"range":"802","text":"803"},"Update the dependencies array to be: [user, loading, dispatch, history]",{"range":"804","text":"805"},{"range":"806","text":"784"},{"range":"807","text":"784"},{"range":"808","text":"795"},"Update the dependencies array to be: [courseState.loaded, setCourseValues]",{"range":"809","text":"810"},"Update the dependencies array to be: [history, isAuthenticated, message]",{"range":"811","text":"812"},"Update the dependencies array to be: [dispatch, message, token]",{"range":"813","text":"814"},"Update the dependencies array to be: [auth, active, history]",{"range":"815","text":"816"},{"range":"817","text":"816"},"Update the dependencies array to be: [courseState, courseState.courseDescription, dispatch]",{"range":"818","text":"819"},"Update the dependencies array to be: [auth, dispatch]",{"range":"820","text":"821"},{"range":"822","text":"821"},{"range":"823","text":"772"},"Update the dependencies array to be: [loading, removeAdminFromUsers]",{"range":"824","text":"825"},"Update the dependencies array to be: [pageUsers, stateUsers]",{"range":"826","text":"827"},"Update the dependencies array to be: [auth, dispatch, userDetails]",{"range":"828","text":"829"},{"range":"830","text":"810"},"Update the dependencies array to be: [courseState, saveCourse, updateCourseAction]",{"range":"831","text":"832"},"Update the dependencies array to be: [dispatch, loading]",{"range":"833","text":"834"},"Update the dependencies array to be: [courseLoading, updateCourses]",{"range":"835","text":"836"},{"range":"837","text":"772"},{"range":"838","text":"821"},{"range":"839","text":"821"},"Update the dependencies array to be: [dispatch, subPage, theUserCoursesFunc]",{"range":"840","text":"841"},"Update the dependencies array to be: [theUserCoursesFunc, userCourses]",{"range":"842","text":"843"},{"range":"844","text":"772"},"Update the dependencies array to be: [pageSales, salesState]",{"range":"845","text":"846"},{"range":"847","text":"772"},{"range":"848","text":"825"},{"range":"849","text":"827"},{"range":"850","text":"772"},"Update the dependencies array to be: [couponId, dispatch]",{"range":"851","text":"852"},"Update the dependencies array to be: [coupon, coursesState, theCoupon]",{"range":"853","text":"854"},[580,582],"[dispatch]",[851,853],"[courseTag, getCourse]",[1009,1045],"[setCoursesOwned]",[1191,1210],"[auth.coursesOwned, redirectUser]",[1289,1309],"[auth.token, courseTag, lessonsWatchedAction]",[697,699],"[courseTag]",[836,887],"[auth]",[712,714],[803,812],"[all, loading]",[1120,1133],"[formData, formMessage]",[331,333],"[history]",[949,958],"[formData, message]",[632,634],"[resetMessage]",[1395,1401],"[dispatch, user]",[1785,1810],"[checkoutPrice, checkout, paymentState]",[3355,3363],"[checkout, checkoutPrice, coupon, couponIsValid, paymentState]",[621,623],"[payAction]",[842,857],"[user, loading, dispatch, history]",[828,830],[966,996],[591,593],[885,905],"[courseState.loaded, setCourseValues]",[854,880],"[history, isAuthenticated, message]",[710,712],"[dispatch, message, token]",[987,1001],"[auth, active, history]",[730,744],[2459,2490],"[courseState, courseState.courseDescription, dispatch]",[988,1024],"[auth, dispatch]",[870,906],[1389,1391],[1495,1504],"[loading, removeAdminFromUsers]",[2037,2049],"[pageUsers, stateUsers]",[1673,1709],"[auth, dispatch, userDetails]",[1233,1253],[1547,1559],"[courseState, saveCourse, updateCourseAction]",[1245,1254],"[dispatch, loading]",[1348,1363],"[courseLoading, updateCourses]",[506,508],[2110,2175],[2414,2444],[1581,1583],"[dispatch, subPage, theUserCoursesFunc]",[1730,1743],"[theUserCoursesFunc, userCourses]",[1245,1247],[1553,1565],"[pageSales, salesState]",[1513,1515],[1619,1628],[2161,2173],[947,949],[1217,1219],"[couponId, dispatch]",[2356,2367],"[coupon, coursesState, theCoupon]"]