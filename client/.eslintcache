[{"D:\\dev-projects\\telmo-academy-v3\\client\\src\\index.js":"1","D:\\dev-projects\\telmo-academy-v3\\client\\src\\App.js":"2","D:\\dev-projects\\telmo-academy-v3\\client\\src\\store.js":"3","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\auth.js":"4","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Footer.js":"5","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Home.js":"6","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseLessons.js":"7","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Course.js":"8","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Courses.js":"9","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Register.js":"10","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Logout.js":"11","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Membership.js":"12","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Login.js":"13","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Checkout.js":"14","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipCheckout.js":"15","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipSuccess.js":"16","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Activate.js":"17","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CheckoutSuccess.js":"18","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ForgotPassword.js":"19","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseUpdate.js":"20","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ResetPassword.js":"21","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ActivateEmail.js":"22","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminCtn.js":"23","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCtn.js":"24","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseCreate.js":"25","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\types.js":"26","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\authConstants.js":"27","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\userConstants.js":"28","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\courses.js":"29","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseCard.js":"30","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileBilling.js":"31","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCourses.js":"32","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AllUsers.js":"33","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\Profile.js":"34","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseUpdate.js":"35","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileSidebar.js":"36","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\FeatureCourses.js":"37","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Courses.js":"38","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminSidebar.js":"39","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Header.js":"40","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\SecondHeader.js":"41","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\AdminSidebar.js":"42","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Loader.js":"43","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\imageUpload.js":"44","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\payments.js":"45","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\index.js":"46","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\courseConstants.js":"47","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\membership.js":"48","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\admin.js":"49","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Navbar.js":"50","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\courses.js":"51","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\auth.js":"52","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\payment.js":"53","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\admin.js":"54","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\adminConstants.js":"55","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\UserProfile.js":"56","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Sales.js":"57","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Coupons.js":"58","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\NewCoupon.js":"59","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\EditCoupon.js":"60","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\couponConstants.js":"61","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\paymentConstants.js":"62","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Notification.js":"63","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\MessageDisplay.js":"64","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\CookiePolicy.js":"65","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Privacy.js":"66"},{"size":154,"mtime":1588368838947,"results":"67","hashOfConfig":"68"},{"size":3684,"mtime":1615057835037,"results":"69","hashOfConfig":"68"},{"size":393,"mtime":1587241502709,"results":"70","hashOfConfig":"68"},{"size":8710,"mtime":1615499466023,"results":"71","hashOfConfig":"68"},{"size":1220,"mtime":1615057835058,"results":"72","hashOfConfig":"68"},{"size":5570,"mtime":1616023041670,"results":"73","hashOfConfig":"68"},{"size":7923,"mtime":1616710303529,"results":"74","hashOfConfig":"68"},{"size":7430,"mtime":1616709734488,"results":"75","hashOfConfig":"68"},{"size":3928,"mtime":1616023041670,"results":"76","hashOfConfig":"68"},{"size":6897,"mtime":1614548717539,"results":"77","hashOfConfig":"68"},{"size":594,"mtime":1605527533139,"results":"78","hashOfConfig":"68"},{"size":4761,"mtime":1614548717515,"results":"79","hashOfConfig":"68"},{"size":3162,"mtime":1614548717467,"results":"80","hashOfConfig":"68"},{"size":12943,"mtime":1615030852609,"results":"81","hashOfConfig":"68"},{"size":3038,"mtime":1601507359698,"results":"82","hashOfConfig":"68"},{"size":896,"mtime":1601506704235,"results":"83","hashOfConfig":"68"},{"size":1538,"mtime":1614548717361,"results":"84","hashOfConfig":"68"},{"size":1940,"mtime":1610901809178,"results":"85","hashOfConfig":"68"},{"size":3020,"mtime":1614548717466,"results":"86","hashOfConfig":"68"},{"size":4965,"mtime":1597324714836,"results":"87","hashOfConfig":"88"},{"size":5200,"mtime":1614548717540,"results":"89","hashOfConfig":"68"},{"size":1422,"mtime":1605730944904,"results":"90","hashOfConfig":"68"},{"size":2271,"mtime":1609435760721,"results":"91","hashOfConfig":"68"},{"size":1204,"mtime":1612304148021,"results":"92","hashOfConfig":"68"},{"size":4143,"mtime":1615030852594,"results":"93","hashOfConfig":"68"},{"size":1860,"mtime":1616708261623,"results":"94","hashOfConfig":"68"},{"size":600,"mtime":1614548717708,"results":"95","hashOfConfig":"68"},{"size":575,"mtime":1609332017239,"results":"96","hashOfConfig":"68"},{"size":9512,"mtime":1616710361377,"results":"97","hashOfConfig":"68"},{"size":2431,"mtime":1616364780082,"results":"98","hashOfConfig":"68"},{"size":4252,"mtime":1612564227192,"results":"99","hashOfConfig":"68"},{"size":2782,"mtime":1616364780084,"results":"100","hashOfConfig":"68"},{"size":14596,"mtime":1615587967762,"results":"101","hashOfConfig":"68"},{"size":14034,"mtime":1614808201814,"results":"102","hashOfConfig":"68"},{"size":12612,"mtime":1616712599661,"results":"103","hashOfConfig":"68"},{"size":1471,"mtime":1614808201815,"results":"104","hashOfConfig":"68"},{"size":9323,"mtime":1606343967047,"results":"105","hashOfConfig":"68"},{"size":5705,"mtime":1615030852594,"results":"106","hashOfConfig":"68"},{"size":1988,"mtime":1612636753503,"results":"107","hashOfConfig":"68"},{"size":573,"mtime":1614548717574,"results":"108","hashOfConfig":"68"},{"size":9152,"mtime":1614808201813,"results":"109","hashOfConfig":"68"},{"size":386,"mtime":1597948581674,"results":"110","hashOfConfig":"88"},{"size":332,"mtime":1605369245325,"results":"111","hashOfConfig":"68"},{"size":3401,"mtime":1597497863156,"results":"112","hashOfConfig":"68"},{"size":4600,"mtime":1615030852567,"results":"113","hashOfConfig":"68"},{"size":257,"mtime":1606423583344,"results":"114","hashOfConfig":"68"},{"size":541,"mtime":1611262154635,"results":"115","hashOfConfig":"68"},{"size":1761,"mtime":1608506206271,"results":"116","hashOfConfig":"68"},{"size":8887,"mtime":1614548717268,"results":"117","hashOfConfig":"68"},{"size":2107,"mtime":1596048824215,"results":"118","hashOfConfig":"68"},{"size":3065,"mtime":1616708597548,"results":"119","hashOfConfig":"68"},{"size":4581,"mtime":1616364780102,"results":"120","hashOfConfig":"68"},{"size":3158,"mtime":1615030852893,"results":"121","hashOfConfig":"68"},{"size":3360,"mtime":1615589988940,"results":"122","hashOfConfig":"68"},{"size":2174,"mtime":1609511065462,"results":"123","hashOfConfig":"68"},{"size":9208,"mtime":1615030852595,"results":"124","hashOfConfig":"68"},{"size":12713,"mtime":1615030852595,"results":"125","hashOfConfig":"68"},{"size":16735,"mtime":1615030852593,"results":"126","hashOfConfig":"68"},{"size":7146,"mtime":1609421170957,"results":"127","hashOfConfig":"68"},{"size":10656,"mtime":1612384591824,"results":"128","hashOfConfig":"68"},{"size":264,"mtime":1610319588780,"results":"129","hashOfConfig":"68"},{"size":189,"mtime":1615030852678,"results":"130","hashOfConfig":"68"},{"size":1385,"mtime":1613842765483,"results":"131","hashOfConfig":"68"},{"size":554,"mtime":1614548717647,"results":"132","hashOfConfig":"68"},{"size":999,"mtime":1615057835209,"results":"133","hashOfConfig":"68"},{"size":4135,"mtime":1615057835077,"results":"134","hashOfConfig":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"ps6lgt",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"137"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"137"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"137"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"137"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"137"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"137"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"137"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},"98tof7",{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"137"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"137"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"137"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"137"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"137"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"137"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"137"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"137"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"137"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"137"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"137"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"137"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"137"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"137"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"137"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"137"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"137"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"137"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"D:\\dev-projects\\telmo-academy-v3\\client\\src\\index.js",[],["302","303"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\App.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\store.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\auth.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Footer.js",["304","305","306","307","308","309","310","311"],"import React from 'react'\r\nimport footerLogo from '../../images/telmoacademy-logo1.png';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row className={styles.footerSocialCtn}>\r\n          <div className={styles.footerLogoSocialCtn}>\r\n            <img src={footerLogo} alt=\"Telmo Academy Logo\"/>\r\n            {/* <span className=\"footerEmail\"><i className=\"fas fa-envelope\"></i>support@telmoacademy.com</span> */}\r\n            <span className={styles.footerSocial}>\r\n              <a href=\"#\"><i className=\"fab fa-youtube\"></i></a>\r\n              <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\r\n              <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.footerLinks}>\r\n            <Link to=\"/privacy\">Privacy</Link>\r\n            <a href=\"#\">Terms</a>\r\n            <a href=\"#\">Blog</a>\r\n            <a href=\"#\">Contact</a>\r\n            <a href=\"#\">About</a>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Home.js",["312"],"import React, { Fragment, useEffect } from 'react';\r\nimport Header from '../partials/Header';\r\nimport CourseCard from './CourseCard';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCourses } from '../../actions/courses';\r\nimport styles from './Home.module.css';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const courses = useSelector((state) => state.courses);\r\n  const { coursesLoaded, all } = courses;\r\n\r\n  useEffect(() => {\r\n    if (!coursesLoaded) {\r\n      dispatch(getCourses());\r\n    }\r\n  }, []);\r\n\r\n  console.log(courses);\r\n\r\n  const coursesFiltered =\r\n    all && all.length > 0 &&\r\n    all.filter((course) => {\r\n      return course.featured;\r\n    });\r\n\r\n    coursesFiltered && coursesFiltered.length > 0 &&\r\n    coursesFiltered.sort((a, b) => {\r\n      return a.position - b.position;\r\n    });\r\n\r\n  const allFeatured =\r\n  coursesFiltered && coursesFiltered.length > 0 &&\r\n    coursesFiltered.map((course, i) => {\r\n      return (\r\n        <CourseCard\r\n          name={course.name}\r\n          price={course.price}\r\n          key={i}\r\n          tag={course.tag}\r\n          courseLevel={course.courseLevel}\r\n        />\r\n      );\r\n    });\r\n\r\n  console.log(courses);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <div className=\"container\">\r\n        \r\n        <div className={styles.popularCoursesCtn}>\r\n        <Row>\r\n          <Col className=\"offset-1 offset-md-0 col-10\">\r\n            <h3 className={styles.popularCourses}>Popular Courses</h3>\r\n          </Col>\r\n        </Row>\r\n          <div className=\"row\">{allFeatured}</div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.homeCounter}>\r\n        <div className={styles.overlay}></div>\r\n        <div className=\"container\">\r\n          <Row>\r\n            <Col sm={12} md={3} className=\"mb-4\">\r\n              <h1 className={styles.homeCounterTitle}>3057</h1>\r\n              <h5 className={styles.homeCounterSubTitle}>students</h5>\r\n            </Col>\r\n            <Col sm={12} md={3} className=\"mb-4\">\r\n              <h1 className={styles.homeCounterTitle}>22471</h1>\r\n              <h5 className={styles.homeCounterSubTitle}>views</h5>\r\n            </Col>\r\n            <Col sm={12} md={3} className=\"mb-4\">\r\n              <h1 className={styles.homeCounterTitle}>64</h1>\r\n              <h5 className={styles.homeCounterSubTitle}>countries reached</h5>\r\n            </Col>\r\n            <Col sm={12} md={3}>\r\n              <h1 className={styles.homeCounterTitle}>8</h1>\r\n              <h5 className={styles.homeCounterSubTitle}>courses published</h5>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.homeObjectives}>\r\n        <div className=\"container\">\r\n          <h3 className={styles.homeObjectivesMainTitle}>\r\n            Learning Objectives{' '}\r\n          </h3>\r\n          <p className={styles.homeObjectivesMainDescription}>\r\n            The skills you can expect to achieve with us\r\n          </p>\r\n          <Row>\r\n            <Col xs={6} md={4}>\r\n              <i className=\"fas fa-suitcase\"></i>\r\n              <h5 className={styles.homeObjectivesObjTitle}>Get Job Ready</h5>\r\n              <p className={styles.homeObjectivesObjDescription}>\r\n                Gain practical experience as you go by creating portfolio-worthy\r\n                projects that will help you land your next job\r\n              </p>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <i className=\"fas fa-trophy\"></i>\r\n              <h5 className={styles.homeObjectivesObjTitle}>\r\n                Get in-depth knowledge\r\n              </h5>\r\n              <p className={styles.homeObjectivesObjDescription}>\r\n                Learning to code means more than just memorizing syntax.\r\n                Instead, we help you think like a real programmer\r\n              </p>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <i className=\"fas fa-globe\"></i>\r\n              <h5 className={styles.homeObjectivesObjTitle}>Freelancing</h5>\r\n              <p className={styles.homeObjectivesObjDescription}>\r\n                All the tips tricks you need to know to start your freelance\r\n                career\r\n              </p>\r\n            </Col>\r\n          \r\n            <Col xs={6} md={4}>\r\n              <i className=\"far fa-handshake\"></i>\r\n              <h5 className={styles.homeObjectivesObjTitle}>Get Hired</h5>\r\n              <p className={styles.homeObjectivesObjDescription}>\r\n                Learn how to build an Online Portfolio, and an Awesome CV that\r\n                will get you hired\r\n              </p>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <i className=\"fas fa-star\"></i>\r\n              <h5 className={styles.homeObjectivesObjTitle}>\r\n                Responsive Design\r\n              </h5>\r\n              <p className={styles.homeObjectivesObjDescription}>\r\n                Learn how to build websites that will look good on Desktops,\r\n                Tablets and Mobile phones\r\n              </p>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <i className=\"fas fa-code\"></i>\r\n              <h5 className={styles.homeObjectivesObjTitle}>Clean Code</h5>\r\n              <p className={styles.homeObjectivesObjDescription}>\r\n                Learn to write simple, elegante and bug free code, just like a\r\n                professional\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseLessons.js",["313","314","315","316","317","318","319"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Course.js",["320","321"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Courses.js",["322","323","324","325","326"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { getCourses } from '../../actions/courses';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col } from 'react-bootstrap';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport Loader from '../utils/Loader';\r\nimport { Form } from 'react-bootstrap';\r\nimport CourseCard from './CourseCard';\r\nimport './Courses.css';\r\n\r\nconst Courses = () => {\r\n  const dispatch = useDispatch();\r\n  const courses = useSelector((state) => state.courses);\r\n  const { loading, all, coursesLoaded } = courses;\r\n\r\n  const [stateCourses, setStateCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!coursesLoaded) {\r\n      dispatch(getCourses());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const sortedCourses = [...all];\r\n\r\n      sortedCourses.length > 0 &&\r\n        sortedCourses.sort((a, b) => {\r\n          return a.position - b.position;\r\n        });\r\n\r\n      setStateCourses(sortedCourses);\r\n    }\r\n  }, [loading]);\r\n\r\n  console.log(courses);\r\n  const images = require.context('../../../../uploads/courses/', true);\r\n\r\n  const allCourses = stateCourses.map((course, index) => {\r\n    let img = '';\r\n    try {\r\n      img = images(`./${course.tag}.jpg`);\r\n    } catch (error) {\r\n      img = images(`./default-course.jpg`);\r\n    }\r\n\r\n    // let img = images(`./${course.tag}.jpg`);\r\n    // let img = `/images/${course.tag}.jpg`;\r\n    if (course.tag !== 'monthly-plan') {\r\n      return (\r\n        <CourseCard\r\n          name={course.name}\r\n          price={course.price}\r\n          key={index}\r\n          tag={course.tag}\r\n          courseLevel={course.courseLevel}\r\n        />\r\n        // <div\r\n        //   className=\"offset-1 col-10 offset-md-0 col-md-4 col-lg-3\"\r\n        //   key={index}\r\n        // >\r\n        //   <div className=\"cardBorder\">\r\n        //     <div className=\"courseThumbnail courseFeatured1\">\r\n        //       <Link to={`/courses/${course.tag}`}>\r\n        //         <img src={img.default} alt=\"courseThumbnail\" />\r\n        //       </Link>\r\n        //     </div>\r\n        //     <div className=\"courseTitleCtn\">\r\n        //       <Link to={`/courses/${course.tag}`}>{course.name}</Link>\r\n        //     </div>\r\n        //     <div className=\"separator\"></div>\r\n        //     <div className=\"priceCtn\">\r\n        //       <span className=\"studentNumbers\">\r\n        //         <i className=\"fas fa-user\"></i> Telmo Sampaio\r\n        //       </span>\r\n        //       <span className=\"price\">${course.price}</span>\r\n        //     </div>\r\n        //   </div>\r\n        // </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  const findCourse = (e) => {\r\n    console.log(e.target.value);\r\n    const text = e.target.value.toLowerCase();\r\n    console.log(text);\r\n    const filteredCourses =\r\n      courses &&\r\n      courses.all.filter((course) => {\r\n        console.log(course.name);\r\n        return course.name.toLowerCase().indexOf(text) > -1;\r\n      });\r\n\r\n    console.log(filteredCourses);\r\n    setStateCourses(filteredCourses);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"main-container\">\r\n        <div className=\"courses container\">\r\n          <div className=\"row\">\r\n            <Col md={4} lg={3} className=\"offset-1 my-4 col-10 offset-md-0\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Find a course\"\r\n                onChange={findCourse}\r\n              />\r\n            </Col>\r\n          </div>\r\n          <div className=\"row\">\r\n            {loading ? (\r\n              <Loader />\r\n            ) : allCourses.length < 1 ? (\r\n              <div className=\"col-6\">\r\n                <h2>No Courses found</h2>\r\n              </div>\r\n            ) : (\r\n              allCourses\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Register.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Logout.js",["327","328"],"import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Logout =  ({ history }) => {\r\n\r\n  useEffect( () => {\r\n    store.dispatch(logout());\r\n    history.push('/');\r\n  }, []);\r\n\r\n  // if(!isAuthenticated) {\r\n  //   return <Redirect to=\"/\" /> \r\n  // }\r\n  return (\r\n    <h1>Logout</h1>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Logout);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Membership.js",["329","330","331","332","333"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport './Membership.css';\r\n\r\nconst Membership = ({ register, isAuthenticated }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tpasswordConfirm: '',\r\n\t\trandNumber1: Math.floor(Math.random() * 10 + 1),\r\n\t\trandNumber2: Math.floor(Math.random() * 10 + 1),\r\n\t\tmessage: '',\r\n\t\tresult: 0\r\n\t});\r\n\tconst { name, email, password, passwordConfirm, randNumber1, randNumber2, message, result } = formData;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// resetMessage();\r\n\t\t\t\tconsole.log(\"message deleted\");\r\n\t\t\t\tsetFormData({ ...formData, message: \"\" });\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t}, [message])\r\n\r\n\tconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(\"Inside register\")\r\n\t\tif (password !== passwordConfirm) {\r\n\t\t\t// setAlert(\"Passwords do not match\", 'danger', 3000);\r\n\t\t\tconsole.log(\"passwords\")\r\n\t\t\tsetFormData({ ...formData, message: \"Passwords do not match\" });\r\n\t\t} else if ((randNumber1 + randNumber2) !== parseInt(result)) {\r\n\t\t\tconsole.log(\"results\")\r\n\t\t\tconsole.log(\"Random Number 1\", randNumber1);\r\n\t\t\tconsole.log(typeof randNumber1);\r\n\t\t\tconsole.log(\"Random Number 2\", randNumber2);\r\n\t\t\tconsole.log(\"Result\", result);\r\n\t\t\tconsole.log(randNumber1 === result);\r\n\t\t\tconsole.log(randNumber1 !== result);\r\n\t\t\tsetFormData({ ...formData, message: \"You are a robot!\" });\r\n\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Inside register action\")\r\n\t\t\tregister({ name, email, password, passwordConfirm });\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkResult = (e) => {\r\n\t\tsetFormData({ ...formData, result: e.target.value })\r\n\t}\r\n\r\n\t//Redirect if logged in\r\n\t// if (isAuthenticated) {\r\n\t// \treturn <Redirect to=\"/\" />\r\n\t// }\r\n\tconsole.log(result);\r\n\tconsole.log(randNumber1)\r\n\tconsole.log(randNumber2)\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"membershipCtn\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"offset-1 col-10 offset-md-0 col-lg-5 offset-lg-1 col-md-10 offset-md-1\">\r\n\t\t\t\t\t\t\t<div className=\"annualCtn\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"membershipRecommended\">MOST POPULAR</h2>\r\n\t\t\t\t\t\t\t\t<h3 className=\"membershipTitle\">Annual</h3>\r\n\t\t\t\t\t\t\t\t<h1 className=\"membershipPrice\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipDollar\">$</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipPriceValue\">9<span>.99</span></span>\r\n\t\t\t\t\t\t\t\t\t<span>/month</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipPriceToPay\">$120.00</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipBilled\">BILLED YEARLY</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<ul className=\"membershipFeatures\">\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Access all courses from Library</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>New courses every month</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Cancel at any time</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Download courses project files</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>30% Discount in all courses</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<Link className=\"membershipBuyButton\" to=\"/membership/annual\">Start Plan</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"offset-1 col-10 offset-md-0 col-lg-5 col-md-10 offset-md-1\">\r\n\t\t\t\t\t\t\t<div className=\"monthlyCtn\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"membershipTitle\">Monthly</h3>\r\n\t\t\t\t\t\t\t\t<h1 className=\"membershipPrice\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipDollar\">$</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"membershipPriceValue\">24<span>.99</span></span>\r\n\t\t\t\t\t\t\t\t\t<span>/Month</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<ul className=\"membershipFeatures\">\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Access all courses from Library</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>New courses every month</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-check\"></i>Cancel at any time</li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-times\"></i><span style={{textDecoration: \"line-through\"}}>Download courses project files</span></li>\r\n\t\t\t\t\t\t\t\t\t<li><i className=\"fa fa-times\"></i><span style={{textDecoration: \"line-through\"}}>30% Discount in all courses</span></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<Link className=\"membershipBuyButton\" to=\"/membership/monthly\">Start Plan</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { register })(Membership);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Login.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Checkout.js",["334","335","336","337","338","339","340","341"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\nimport './Checkout.css';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport {\r\n  payAction,\r\n  processPayment,\r\n  findCouponIdAction,\r\n} from '../../actions/payments';\r\nimport { removeCheckout, loadCheckout } from '../../actions/courses';\r\nimport { GET_COUPON_BY_ID_RESET } from '../../contants/couponConstants';\r\nimport MessageDisplay from '../utils/MessageDisplay';\r\n\r\nconst Membership = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const payment = useSelector((state) => state.payment);\r\n  const auth = useSelector((state) => state.auth);\r\n  const { user } = auth;\r\n\r\n  const {\r\n    coupon,\r\n    checkoutPrice,\r\n    checkout,\r\n    loading,\r\n    result,\r\n    notification,\r\n    buttonLoading\r\n  } = payment;\r\n\r\n  const [data, setData] = useState({\r\n    instance: {},\r\n  });\r\n\r\n  const [paymentState, setPaymentState] = useState({\r\n    code: '',\r\n    checkoutBackup: [],\r\n    checkoutSale: [],\r\n    coursesInCheckout: [],\r\n    finalPrice: 0,\r\n  });\r\n\r\n  const [disableButton, setDisableButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user._id) {\r\n      dispatch(payAction(user._id));\r\n      dispatch(loadCheckout(user._id));\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const coursesInCheckout = [];\r\n    for (let i = 0; i < checkout.length; i++) {\r\n      coursesInCheckout.push(checkout[i]._id);\r\n    }\r\n\r\n    setPaymentState({\r\n      ...paymentState,\r\n      checkoutBackup: [...checkout],\r\n      coursesInCheckout: coursesInCheckout,\r\n      finalPrice: checkoutPrice,\r\n    });\r\n\r\n    console.log('CHECKOUT PRICE IS SET');\r\n  }, [checkoutPrice, checkout]);\r\n\r\n  useEffect(() => {\r\n    const coursesInCheckout = [];\r\n    if (couponIsValid() && coupon && coupon.active) {\r\n      const checkoutCopy = [...paymentState.checkoutBackup];\r\n\r\n      const newArray = [];\r\n\r\n      const coursesDiscounted = [];\r\n      for (let i = 0; i < checkoutCopy.length; i++) {\r\n        newArray.push(checkoutCopy[i].price);\r\n        coursesInCheckout.push(checkoutCopy[i]._id);\r\n        for (let j = 0; j < coupon.courses.length; j++) {\r\n          if (\r\n            coupon.courses[j].name === 'All Courses' ||\r\n            JSON.stringify(checkoutCopy[i]._id) ===\r\n              JSON.stringify(coupon.courses[j].courseId)\r\n          ) {\r\n            newArray[i] =\r\n              coupon.amountType === 'percentage'\r\n                ? newArray[i] - (newArray[i] * parseInt(coupon.amount)) / 100\r\n                : newArray[i] - parseInt(coupon.amount);\r\n            // course.price = 10\r\n            coursesDiscounted.push(coupon.courses[j].courseId);\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(checkoutCopy);\r\n      console.log(checkout);\r\n\r\n      const finalPriceWithDiscount = newArray.reduce((total, price) => {\r\n        console.log('Total price is: ' + total);\r\n        console.log('Course price is: ' + price);\r\n        return parseFloat(total) + parseFloat(price);\r\n      }, 0);\r\n      console.log('finalPriceWithDiscount+++++++++');\r\n      console.log(finalPriceWithDiscount);\r\n\r\n      setPaymentState({\r\n        ...paymentState,\r\n        checkoutSale: coursesDiscounted.length > 0 ? [...newArray] : [],\r\n        coursesInCheckout: [...coursesInCheckout],\r\n        finalPrice: finalPriceWithDiscount,\r\n      });\r\n    } else {\r\n      setPaymentState({\r\n        ...paymentState,\r\n        checkoutSale: [],\r\n        // coursesInCheckout: [...coursesInCheckout],\r\n        finalPrice: checkoutPrice,\r\n      });\r\n    }\r\n  }, [coupon]);\r\n\r\n  const couponIsValid = () => {\r\n    if (coupon && coupon.active) {\r\n      const today = new Date();\r\n      const couponDate = new Date(coupon.date);\r\n      const dateInPast = function (future, present) {\r\n        if (future.setHours(0, 0, 0, 0) <= present.setHours(0, 0, 0, 0)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      console.log('Date in past');\r\n      console.log(dateInPast(couponDate, today));\r\n\r\n      return (\r\n        coupon.active && coupon.available > 0 && !dateInPast(couponDate, today)\r\n      );\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (result) {\r\n      history.push('/cart/checkout/success');\r\n    }\r\n  }, [result]);\r\n\r\n  const buy = () => {\r\n    console.log(data.instance);\r\n    console.log(Object.keys(data.instance).length !== 0);\r\n    console.log(data.instance.constructor === Object);\r\n    console.log(disableButton);\r\n    \r\n    let nonce;\r\n    let getNonce =\r\n      Object.keys(data.instance).length !== 0 &&\r\n      data.instance\r\n        .requestPaymentMethod()\r\n        .then(async (data) => {\r\n          console.log(data);\r\n          nonce = data.nonce;\r\n\r\n          // console.log('send nonce and total to process ', nonce);\r\n          const paymentData = {\r\n            paymentMethodNonce: nonce,\r\n            amount: checkoutPrice,\r\n          };\r\n\r\n          // processPayment(userId, token, paymentData)\r\n          // processPayment('131asdasd', 'adasdadad', paymentData)\r\n          setDisableButton(true);\r\n          await dispatch(\r\n            processPayment(\r\n              paymentData,\r\n              paymentState.code,\r\n              paymentState.coursesInCheckout\r\n            )\r\n          );\r\n\r\n          console.log('before redirect');\r\n          // console.log( payment.result );\r\n          // console.log( payment.result.success );\r\n\r\n          \r\n        })\r\n        .catch((error) => {\r\n          console.log('dropin error: ', error);\r\n        });\r\n  };\r\n\r\n  const showDropIn = () =>\r\n    payment.paymentToken && (\r\n      <Fragment>\r\n        <DropIn\r\n          options={{\r\n            authorization: payment.paymentToken,\r\n            paypal: {\r\n              flow: 'vault',\r\n            },\r\n          }}\r\n          onInstance={(instance) => (data.instance = instance)}\r\n        />\r\n        { !disableButton && \r\n        <button\r\n          onClick={buy}\r\n          className={\r\n            disableButton ? 'btn btn-primary disabled mt-4' : 'btn btn-primary mt-4'\r\n          }\r\n        >Finish Payment</button> }\r\n        {buttonLoading && (\r\n          <button className=\"btn btn-primary mt-4\">\r\n            <div class=\"spinner-border spinner\" role=\"status\">\r\n              <span class=\"sr-only\">Processing payment...</span>\r\n            </div>\r\n            Processing payment...\r\n          </button>\r\n        )}\r\n      </Fragment>\r\n    );\r\n\r\n  const checkoutItems = paymentState.checkoutBackup.map((course, i) => {\r\n    let price =\r\n      paymentState.checkoutSale.length > 0 && paymentState.checkoutSale[i];\r\n    let sale = false;\r\n    if (\r\n      paymentState.checkoutSale.length > 0 &&\r\n      paymentState.checkoutBackup[i].price != paymentState.checkoutSale[i]\r\n    ) {\r\n      sale = true;\r\n    }\r\n\r\n    return (\r\n      <div className=\"courseInCheckout\" key={i}>\r\n        <div>\r\n          <span\r\n            className=\"courseDelete\"\r\n            onClick={() => refreshCheckout(course._id)}\r\n          >\r\n            <i className=\"fas fa-trash\"></i>\r\n          </span>\r\n          <h3 className=\"checkoutCourse\">{course.name}</h3>\r\n        </div>\r\n        <span className=\"coursePrice\">\r\n          {' '}\r\n          {sale ? (\r\n            <>\r\n              <del>${paymentState.checkoutBackup[i].price}</del>\r\n              <span>${price}</span>\r\n            </>\r\n          ) : (\r\n            <span>${paymentState.checkoutBackup[i].price}</span>\r\n          )}\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const refreshCheckout = async (courseId) => {\r\n    await dispatch(removeCheckout(courseId));\r\n    loadCheckout();\r\n  };\r\n  console.log(auth && auth.user && !auth.user.authenticated);\r\n\r\n  if (auth && !auth.isAuthenticated && !auth.loading) {\r\n    console.log('inside register redirect ');\r\n    return <Redirect to=\"/register\" />;\r\n  }\r\n  //Redirect if payment success\r\n\r\n  // console.log(auth.user);\r\n  // console.log( auth.token );\r\n  // console.log(data);\r\n  // console.log(paymentState);\r\n\r\n  const checkCoupon = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: GET_COUPON_BY_ID_RESET });\r\n    dispatch(findCouponIdAction(paymentState.code));\r\n  };\r\n\r\n  // const finalPrice = () => {\r\n  //   if(coupon && coupon.active) {\r\n  //     setPaymentState({\r\n  //       finalPrice:  coupon.amountType === \"percentage\" ? (\r\n  //         payment.checkoutPrice - payment.checkoutPrice * coupon.amount\r\n  //       ) :  payment.checkoutPrice - coupon.amount\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // console.log(checkout)\r\n  // console.log(paymentState)\r\n  // console.log(data.instance);\r\n  console.log(typeof checkoutItems);\r\n  console.log(paymentState);\r\n  // if (payment && payment.result) {\r\n  //   console.log(\"inside of redirect to success\");\r\n  //   return <Redirect to=\"/cart/checkout/success\" />\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"checkoutCtn\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {payment && payment.checkout.length > 0 ? (\r\n              <div className=\"col-12 col-lg-6 my-4\">\r\n                <div className={`paymentCtn ${loading ? 'paymentLoading' : ''}`}>\r\n                  <h1>Confirm your purchase:</h1>\r\n                  {showDropIn()}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <div\r\n              className={\r\n                payment && payment.checkout.length > 0\r\n                  ? 'col-12 col-lg-6 my-4'\r\n                  :  'offset-1 col-10 col-md-8 offset-md-2'\r\n              }\r\n            >\r\n              <div className=\"paperGray\">\r\n              <h1 className=\"basketTitle\">Products in Basket:</h1>\r\n              {checkoutItems && checkoutItems.length > 0 ? (\r\n                checkoutItems\r\n              ) : (\r\n                <Fragment>\r\n                  <h1>Your basket is empty</h1>{' '}\r\n                  <Button className=\"mt-3\">\r\n                  <Link to=\"/courses\">Search courses</Link>\r\n                  </Button>\r\n                </Fragment>\r\n              )}\r\n\r\n              {checkoutItems && checkoutItems.length > 0 ? (\r\n                <>\r\n                  \r\n\r\n                  {/* {message && <h5 className=\"my-4\">Coupon is not valid</h5>} */}\r\n                  <div className=\"checkoutPrice\">\r\n                    Total:{' '}\r\n                    {couponIsValid() && paymentState.checkoutSale.length > 0 ? (\r\n                      <del>${checkoutPrice}</del>\r\n                    ) : null}{' '}\r\n                    ${paymentState.finalPrice}\r\n                  </div>\r\n                  <div className=\"couponCtn\">\r\n                  <Form onSubmit={checkCoupon}>\r\n                    <Form.Row className=\"align-items-center m-0\">\r\n                    <div className=\"couponInputCol\">\r\n                      <Form.Control\r\n                        required\r\n                      \r\n                        id=\"inlineFormInput\"\r\n                        placeholder=\"Enter coupon code\"\r\n                        onChange={(e) =>\r\n                          setPaymentState({ ...paymentState, code: e.target.value })\r\n                        }\r\n                      />\r\n                    </div>\r\n                    {/* <input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter coupon code\"\r\n                    /> */}\r\n                    <div>\r\n                      <Button variant='info' type=\"submit\">Use coupon</Button>\r\n                    </div>\r\n                    </Form.Row>\r\n                  </Form>\r\n\r\n                  {couponIsValid() && notification && notification.status === \"success\" && paymentState.checkoutSale.length > 0 ? (\r\n                    // <h5 className=\"my-4\">\r\n                    //   Coupon {coupon.code} - {coupon.name} applied\r\n                    // </h5>\r\n                    <MessageDisplay\r\n\t\t\t\t\t\t\t\t\t\t\theader=\"Coupon applied\"\r\n\t\t\t\t\t\t\t\t\t\t\tstatus={notification.status} \r\n\t\t\t\t\t\t\t\t\t\t\tmessage={coupon.name}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n                  ) : notification.status === \"fail\" ? (\r\n                    // <h5 className=\"my-4\">Coupon is not valid</h5>\r\n                    <MessageDisplay\r\n\t\t\t\t\t\t\t\t\t\t\theader=\"Error\"\r\n\t\t\t\t\t\t\t\t\t\t\tstatus={notification.status} \r\n\t\t\t\t\t\t\t\t\t\t\tmessage={notification.message}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n                  ) : coupon && coupon.active && !couponIsValid() ? (\r\n                    <MessageDisplay\r\n\t\t\t\t\t\t\t\t\t\t\theader=\"Error\"\r\n\t\t\t\t\t\t\t\t\t\t\tstatus=\"fail\"\r\n\t\t\t\t\t\t\t\t\t\t\tmessage=\"Coupon not valid\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n                  ) : null}\r\n                  </div>\r\n                </>\r\n              ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Membership;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipCheckout.js",["342","343","344"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { payAction, membershipPayment } from '../../actions/payments';\r\nimport './MembershipCheckout.css';\r\n\r\nconst MembershipCheckout = ({ payAction, payment,  paymentToken, auth, membershipPayment }) => {\r\n  const [data, setData] = useState({\r\n    instance: {}\r\n  });\r\n\r\n  const { duration } = useParams();\r\n\r\n  useEffect(() => {\r\n    payAction();\r\n  }, []);\r\n\r\n  const buy = (membershipDuration) => {\r\n    let nonce;\r\n    let getNonce = data.instance.requestPaymentMethod()\r\n      .then(data => {\r\n        console.log(data);\r\n        nonce = data.nonce\r\n\r\n        // console.log('send nonce and total to process ', nonce);\r\n        const paymentData = {\r\n          paymentMethodNonce: nonce\r\n        }\r\n\r\n        // processPayment(userId, token, paymentData)\r\n        membershipPayment(auth && auth.user, auth && auth.token, paymentData, membershipDuration);\r\n      })\r\n      .catch(error => {\r\n        console.log('dropin error: ', error)\r\n      })\r\n  }\r\n\r\n  const showDropIn = () => (\r\n    paymentToken && <Fragment>\r\n      <DropIn options={{\r\n        authorization: paymentToken,\r\n        paypal: {\r\n          flow: \"vault\"\r\n        }\r\n      }} onInstance={instance => (data.instance = instance)} />\r\n      {\r\n        duration === \"monthly\" ? (\r\n          <button onClick={() => buy(\"monthly\")} className=\"membershipPay\">Finish Payment</button>\r\n        ) : (\r\n          <button onClick={() => buy(\"yearly\")} className=\"membershipPay\">Finish Payment</button>\r\n        )\r\n      \r\n      }\r\n\r\n    </Fragment>\r\n  )\r\n  console.log(duration)\r\n  \r\n  if(payment && payment.paymentComplete) {\r\n    return <Redirect to=\"/membership/success\"/>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"MembershipCheckoutCtn\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 offset-lg-2\">\r\n              <div className=\"paypal\">\r\n                <h1>{ duration === \"monthly\" ? \"Monthly Subscription\" : \"Annual Subscription\"}</h1>\r\n                <div className=\"discountCtn\">\r\n                  <input type=\"text\" placeholder=\"Discound Code\"/><button>Apply</button>\r\n                </div>\r\n                \r\n                <div className=\"MembershipTotal\">\r\n                  <span>Total to pay:</span>\r\n                  <span>${ duration === \"monthly\" ? \"24.99\" : \"179.88\"} USD</span>\r\n                </div>\r\n                {showDropIn()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  paymentToken: state.payment.paymentToken,\r\n  payment: state.payment,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { payAction, membershipPayment })(MembershipCheckout);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipSuccess.js",["345","346","347","348"],"import React, {Fragment, useEffect} from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { resetPaymentResult } from '../../actions/payments';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\n\r\nconst MembershipSuccess = ({auth, payment}) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1>Your membership is now active</h1>\r\n            <h1>You will receive an email soon</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  active: state.auth.active,\r\n  courses: state.courses,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps)(MembershipSuccess);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Activate.js",["349","350"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activateEmail } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { RESET_NOTIFICATION } from '../../contants/authConstants';\r\nconst Activate = ({ history }) => {\r\n\r\n  // if (!isAuthenticated) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { isAuthenticated, user, message, loading } = auth;\r\n\r\n  // useEffect(() => {\r\n  //   if(!isAuthenticated && !loading ) {\r\n  //     history.push('/');\r\n  //   }\r\n  // }, [isAuthenticated, loading])\r\n\r\n  useEffect(() => {\r\n    if(user && !loading) {\r\n      dispatch({ type: RESET_NOTIFICATION });\r\n    } else if (!loading && !user) {\r\n      history.push('/');\r\n    }\r\n  }, [user, loading])\r\n\r\n  const email = user && user.email;\r\n\r\n  const sendEmail = () => {\r\n    dispatch(activateEmail({ email }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>Please confirm Email Address</h1>\r\n            <h4>To activate your account</h4>\r\n            <button className=\"btn btn-success\" onClick={sendEmail}>Resend Email Activation</button>\r\n            {message && (\r\n              <h5>{message}</h5>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Activate;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CheckoutSuccess.js",["351","352","353","354"],"import React, { useState, useEffect} from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { resetPaymentResult } from '../../actions/payments';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport './CheckoutSuccess.css';\r\n\r\nconst CheckoutSuccess = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const payment = useSelector(state => state.payment);\r\n\r\n  const { result } = payment;\r\n\r\n  // const [page, setPage] = useState({\r\n  //   loaded: false\r\n  // });\r\n\r\n  useEffect(() => {\r\n    //     console.log(auth);\r\n    // console.log(active == 'notActive');\r\n    // console.log(!auth.loading)\r\n\r\n    // store.dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n\r\n    \r\n\r\n    if(!result) {\r\n      history.push(\"/courses\");\r\n    }\r\n\r\n    dispatch(resetPaymentResult());\r\n    \r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if( auth && auth.isAuthenticated ) {\r\n  //     setPage({\r\n  //       loaded: true\r\n  //     })\r\n  //   }\r\n    \r\n  // }, [auth && auth.isAuthenticated]);\r\n\r\n  // if( auth && !auth.isAuthenticated && page.loaded) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>Thank you! Your Order is Complete</h1>\r\n            <h4>You will receive an email confirmation shortly.</h4>\r\n            <Link className=\"checkoutSuccessBtn\" to=\"/courses\">Start Learning</Link>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   auth: state.auth,\r\n//   active: state.auth.active,\r\n//   courses: state.courses,\r\n//   payment: state.payment\r\n// });\r\n\r\nexport default CheckoutSuccess;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ForgotPassword.js",["355","356","357"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fgt_pass } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './ForgotPassword.module.css';\r\nimport MessageDisplay from '../utils/MessageDisplay';\r\n\r\nconst ForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const { notification, loading } = auth;\r\n  \r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   console.log('reseting the message, in forgotpass');\r\n  //   resetMessage();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setMessage(auth.message);\r\n  // }, [auth.message]);\r\n\r\n  const { email } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(fgt_pass({ email }));\r\n    // removeMessage();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className={styles.forgotPasswordCtn}>\r\n        {/* <h1 className=\"large text-primary\">Forgot Password</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Please enter your email address</p> */}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Col xs={12} md={{ span: 6, offset: 3 }}>\r\n              <div className={`card ${styles.forgotPasswordCard}`}>\r\n                <h1 className={styles.forgotTitle}>\r\n                  Enter email address\r\n                </h1>\r\n                <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      name=\"email\"\r\n                      required\r\n                      onChange={(e) => onChange(e)}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    value=\"Reset Password\"\r\n                  />\r\n                </form>\r\n                {!loading && notification && notification.message && (\r\n                  <MessageDisplay\r\n                    header=\"Reset Password\"\r\n                    status={notification.status} \r\n                    message={notification.message}\r\n                  />\r\n                )}\r\n              </div>\r\n              <Col xs={12} className={styles.fgtPasswordButtons}>\r\n\t\t\t\t\t\t\t  <Link to=\"/login\">Login</Link>\r\n\t\t\t\t\t\t\t  <span className={styles.fgtSeparator}>|</span>\r\n\t\t\t\t\t\t\t  <Link to=\"/register\">Register</Link>\r\n\t\t\t\t\t\t  </Col>\r\n            </Col>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseUpdate.js",["358","359"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCourse } from '../../actions/courses';\r\nimport { updateCourseAction } from '../../actions/courses';\r\nimport AdminSidebar from '../partials/AdminSidebar';\r\nimport './Admin.css'\r\n\r\nconst CourseUpdate = ({ course, auth, updateCourseAction }) => {\r\n\tconsole.log(auth);\r\n\r\n\tconst [courseState, setCourseState] = useState({\r\n\t\tid: \"\",\r\n\t\tcourseName: \"\",\r\n\t\tcourseIntro: \"\",\r\n\t\tcourseTag: \"\",\r\n\t\tcourseDescription: \" \",\r\n\t\tcoursePrice: \"\",\r\n\t\tclasses: [ {\r\n\t\t\tlecture: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\turl: \"\",\r\n\t\t\tduration: 0\r\n\t\t}],\r\n\t\tloaded: false\r\n\t});\r\n\r\n\tconst { courseTag } = useParams();\r\n\r\n\tuseEffect( () => {\r\n\t\tsetCourseValues();\r\n\t}, [courseState.loaded]);\r\n\t\r\n\tconst setCourseValues = async () => {\r\n\t\tawait store.dispatch(getCourse(courseTag));\r\n\r\n\t\tif( course && course.data && course.data._id ) {\r\n\t\t\tfor( let i=0; i < course.data.classes.length; i++) {\r\n\t\t\t\tdelete course.data.classes[i]._id\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tid: course && course.data && course.data._id,\r\n\t\t\tcourseName: course && course.data && course.data.name,\r\n\t\t\tcourseIntro: course && course.data && course.data.intro,\r\n\t\t\tcourseTag: course && course.data && course.data.tag,\r\n\t\t\tcourseDescription: course && course.data && course.data.description,\r\n\t\t\tcoursePrice: parseInt(course && course.data && course.data.price),\r\n\t\t\tclasses: course && course.data && course.data.classes,\r\n\t\t\tloaded: true\r\n\t\t})\r\n\t}\r\n\r\n\tconst addClass = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tclasses: [ ...courseState.classes, {\r\n\t\t\t\tlecture: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\turl: \"\",\r\n\t\t\t\tduration: 0\r\n\t\t\t} ]\r\n\t\t});\r\n\t}\r\n\r\n\tconst updateCourse = (e) => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateClass = (e) => {\r\n\t\t\r\n\t\tconst index = e.target.parentElement.firstChild.value;\r\n    console.log(\"current index is \" + index);\r\n\t\tconst stateRef = { ...courseState };\r\n\r\n\t\tif( e.target.name === ( \"duration\" || \"lecture\") ) {\r\n\t\t\tstateRef.classes[index][e.target.name] = parseInt( e.target.value );\r\n\t\t} else {\r\n\t\t\tstateRef.classes[index][e.target.name] = e.target.value;\r\n\t\t}\r\n\t\tsetCourseState(stateRef);\r\n\t}\r\n\t\t\r\n\tconst allClasses = courseState.classes && courseState.classes.length > 0 && courseState.classes.map( (theClass, i) => {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div key={i}>\r\n\t\t\t\t<input type=\"hidden\" value={i}/>\r\n\t\t\t\t<input type=\"number\" name=\"lecture\" placeholder=\"lecture\" onChange={updateClass} value={courseState.classes[i].lecture} />\r\n\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\" onChange={  updateClass } value={courseState.classes[i].title} />\r\n\t\t\t\t<input type=\"text\" name=\"url\" placeholder=\"url\" onChange={  updateClass } value={courseState.classes[i].url} />\r\n\t\t\t\t<input type=\"number\" name=\"duration\" placeholder=\"duration\" onChange={  updateClass } value={courseState.classes[i].duration} />\r\n\t\t\t</div>\r\n\t\t\t// value={courseState.classes[i].lecture}\r\n\t\t)\r\n\t});\r\n\r\n\tconsole.log( course )\r\n\tconsole.log(courseState);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<AdminSidebar />\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Update the Course</h1>\r\n\t\t\t\t\t\t\t<label>Name</label><input required type=\"text\" name=\"courseName\" onChange={updateCourse} value={courseState.loaded ? courseState.courseName : \" \"} size=\"50\"/><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Intro</label><input required type=\"text\" name=\"courseIntro\" onChange={updateCourse} value={courseState.loaded ? courseState.courseIntro : \"\"} size=\"70\"/><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Tag</label><input required type=\"text\" name=\"courseTag\" onChange={updateCourse} value={courseState.loaded ? courseState.courseTag : \"\"} size=\"50\"/><br/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<label>Course Description</label><br/>\r\n\t\t\t\t\t\t\t\t<textarea required type=\"text\" name=\"courseDescription\" onChange={updateCourse} rows=\"15\" cols=\"80\" value={courseState.loaded ? courseState.courseDescription : \"\"} /><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Price</label><input required type=\"number\" name=\"coursePrice\" onChange={updateCourse} value={courseState.loaded ? courseState.coursePrice : \"\"} /><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Classes</label>\r\n\t\t\t\t\t\t\t\t{allClasses}\r\n\t\t\t\t\t\t\t\t<button onClick={addClass}>Add Class</button>\r\n\t\t\t\t\t\t\t\t<button onClick={() => updateCourseAction(courseState)}>Update Course</button>\r\n\t\t\t\t\t\t\t\t{ course && course.message ? \r\n\t\t\t\t\t\t\t\t\t<h1>{course.message}</h1> : null }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcourse: state.courses,\r\n\tauth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { updateCourseAction })(CourseUpdate);\r\n\r\n\r\n",["360","361"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ResetPassword.js",["362","363","364"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { reset_pass } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './ResetPassword.module.css';\r\nimport MessageDisplay from '../utils/MessageDisplay';\r\nimport { RESET_NOTIFICATION } from '../../contants/authConstants';\r\n\r\nconst ResetPassword = ({history}) => {\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    passwordConfirm: '',\r\n    formMessage: ''\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { isAuthenticated, notification, loading } = auth;\r\n\r\n  let { token } = useParams();\r\n\r\n  useEffect(() => {\r\n    if(notification && notification.status) {\r\n      dispatch({type: RESET_NOTIFICATION, payload: { status: \"\", message: \"\"}})\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (isAuthenticated) {\r\n  //     history.push(\"/\");\r\n  //   } else if(message === 'Password reseted') {\r\n  //     setTimeout(() => {\r\n  //       return <Redirect to=\"/profile\" />\r\n  //     }, 3000);\r\n  //   }\r\n    \r\n  // }, [isAuthenticated, message])\r\n\r\n  const { password, passwordConfirm, formMessage } = formData;\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value, showError: false, formMessage: '' });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== passwordConfirm) {\r\n      setFormData({ ...formData, formMessage: 'Passwords are not the same' });\r\n    } else {\r\n      dispatch(reset_pass({ password, passwordConfirm, token }));\r\n      setFormData({ ...formData, password: '', passwordConfirm: '', formMessage: '' });\r\n    }\r\n\r\n  }\r\n  console.log(\"My token frontend is \" + token);\r\n\r\n  // if (isAuthenticated) {\r\n  //   return <Redirect to=\"/\" />\r\n  // } else if(message === 'Password reseted') {\r\n  //   setTimeout(() => {\r\n  //     return <Redirect to=\"/profile\" />\r\n  //   }, 3000);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n       <SecondHeader />\r\n      {/*<div className=\"forgotPasswordCtn\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 offset-3\">\r\n              <div className=\"card forgotPasswordCard\">\r\n                <h1 className=\"loginTitle\"><i className=\"fas fa-user\"></i> Please! enter your new password</h1>\r\n                \r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" placeholder=\"Confirm Password\" name=\"passwordConfirm\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <input type=\"submit\" className=\"btn btn-success\" value=\"Update Password\" />\r\n                </form>\r\n                {error && (\r\n                  <h1 className=\"passwordUpdateMessage\">{error}</h1>\r\n                )}\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className={styles.forgotPasswordCtn}>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={12} md={{ span: 6, offset: 3 }}>\r\n\t\t\t\t\t\t\t<div className={`card ${styles.forgotPasswordCard}`}>\r\n\t\t\t\t\t\t\t\t<h1 className={styles.forgotPasswordTitle}>Welcome back</h1>\r\n\t\t\t\t\t\t\t\t<p>Please enter your new password</p>\r\n\t\t\t\t\t\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"passwordConfirm\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Update Password\" />\r\n\r\n\t\t\t\t\t\t\t\t\t{!loading && notification && notification.status && (\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<MessageDisplay\r\n\t\t\t\t\t\t\t\t\t\t\theader={notification.status === 'fail' ? 'Error' : 'Password Update Success'}\r\n\t\t\t\t\t\t\t\t\t\t\tstatus={notification.status} \r\n\t\t\t\t\t\t\t\t\t\t\tmessage={notification.message}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                  {!loading && formMessage && (\r\n                  <MessageDisplay \r\n                    header=\"Error\"\r\n                    status=\"fail\" \r\n                    message={formMessage} \r\n                  />\r\n                )}\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t  </Row>\r\n\t\t\t  </Container>\r\n\t\t  </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetPassword;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ActivateEmail.js",["365","366","367"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { activateEmailAction } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport Loader from '../utils/Loader';\r\n\r\nconst ActivateEmail = ({ history }) => {\r\n  const { token } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { user, message, active, loading } = auth;\r\n\r\n  console.log(\"This is my token \" + token);\r\n  useEffect(() => {\r\n    console.log(\"This is My Message+++++\");\r\n    console.log(message);\r\n    dispatch(activateEmailAction(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current message is\");\r\n    console.log(message);\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>{message}</h1>\r\n            {loading ? <Loader /> : message === \"You are Activated\" ? (\r\n              <Link to='/courses' className='btn btn-success'>Start learning</Link>\r\n            ) : (\r\n                <Link to='/activate' className='btn btn-success'>Activate account</Link>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActivateEmail;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminCtn.js",["368"],"import React, { memo, useEffect } from 'react'\r\nimport AdminSidebar from './AdminSidebar';\r\nimport UserProfile from './UserProfile';\r\nimport Courses from './Courses';\r\nimport CourseCreate from './CourseCreate';\r\nimport CourseUpdate from './CourseUpdate';\r\nimport FeatureCourses from './FeatureCourses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { useSelector } from 'react-redux';\r\nimport AllUsers from './AllUsers';\r\nimport Sales from './Sales';\r\nimport Coupons from './Coupons';\r\nimport NewCoupon from './NewCoupon';\r\nimport EditCoupon from './EditCoupon';\r\n\r\nconst AdminCtn = ({match, history}) => {\r\n  // console.log(match);\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  useEffect(() => {\r\n    if (active === 'notActive' && !auth.loading) {\r\n      console.log(\"inside redirect\");\r\n      history.push(\"/activate\");\r\n    } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [auth, active]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"profileCtn\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <AdminSidebar />\r\n            { (match.params.page === \"courses\" && !match.params.subPage) ? <Courses /> : null }\r\n            { match.params.page === \"courses\" ? (match.params.subPage === \"create\" ? <CourseCreate /> : null) : null }\r\n            { match.params.page === \"courses\" ? (match.params.subPage === \"update\" ? <CourseUpdate /> : null) : null }\r\n            { match.params.page === \"user\" ? <UserProfile /> : null }\r\n            { match.params.page === \"featureCourses\" ? <FeatureCourses /> : null }\r\n            { match.params.page === \"users\" ? <AllUsers /> : null }\r\n            { match.params.page === \"sales\" ? <Sales /> : null }\r\n            { match.params.page === \"coupons\" && !match.params.subPage ? <Coupons /> : null }\r\n            { match.params.page === \"coupons\" ? (match.params.subPage === \"new\" ? <NewCoupon /> : null) : null }\r\n            { match.params.page === \"coupons\" ? (match.params.subPage === \"edit\" ? <EditCoupon /> :null) : null }\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(AdminCtn);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCtn.js",["369"],"import React, { memo, useEffect } from 'react'\r\nimport ProfileSidebar from './ProfileSidebar';\r\nimport Profile from './Profile';\r\nimport ProfileBilling from './ProfileBilling';\r\nimport ProfileCourses from './ProfileCourses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProfileCtn = ({match, history}) => {\r\n  console.log(match);\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  useEffect(() => {\r\n    if (active === 'notActive' && !auth.loading) {\r\n      console.log(\"inside redirect\");\r\n      history.push(\"/activate\");\r\n    } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [auth, active]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"profileCtn\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <ProfileSidebar />\r\n            { match.params.page === \"courses\" ? <ProfileCourses /> \r\n            : match.params.page === \"billing\" ? <ProfileBilling />\r\n            : <Profile />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(ProfileCtn);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseCreate.js",["370","371","372"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nimport { createCourseAction } from '../../actions/courses';\r\nimport './Admin.css'\r\n\r\nconst CourseCreate = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst auth = useSelector(state => state.auth);\r\n\tconst course = useSelector(state => state.courses);\r\n\r\n\tconst [courseState, setCourseState] = useState({\r\n\t\tcourseName: \"\",\r\n\t\tcourseIntro: \"\",\r\n\t\tcourseTag: \"\",\r\n\t\tcourseDescription: [],\r\n\t\tcoursePrice: \"\",\r\n\t\tclasses: [{\r\n\t\t\tlecture: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\turl: \"\",\r\n\t\t\tduration: 0\r\n\t\t}],\r\n\t\timage: null\r\n\t});\r\n\tconst [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\tconst addClass = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tclasses: [...courseState.classes, {\r\n\t\t\t\tlecture: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\turl: \"\",\r\n\t\t\t\tduration: 0\r\n\t\t\t}]\r\n\t\t});\r\n\t}\r\n\r\n\tconst updateCourse = (e) => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateClass = (e) => {\r\n\r\n\t\tconst index = e.target.parentElement.firstChild.value;\r\n\t\tconsole.log(\"current index is \" + index);\r\n\t\tconst stateRef = { ...courseState };\r\n\r\n\t\tstateRef.classes[index][e.target.name] = e.target.value;\r\n\t\tsetCourseState(stateRef);\r\n\t}\r\n\r\n\tconst allClasses = courseState.classes.map((theClass, i) => {\r\n\r\n\t\treturn (\r\n\t\t\t<div key={i}>\r\n\t\t\t\t<input type=\"hidden\" value={i} />\r\n\t\t\t\t<input type=\"text\" name=\"lecture\" placeholder=\"lecture\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"url\" placeholder=\"url\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"duration\" placeholder=\"duration\" onChange={updateClass} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t});\r\n\r\n\tconst createCourse = () => {\r\n\t\t// editor.save().then((outputData) => {\r\n\t\t// \tconsole.log(outputData);\r\n\t\t// \tsetCourseState({\r\n\t\t// \t\t...courseState,\r\n\t\t// \t\tcourseDescription: outputData\r\n\t\t// \t})\r\n\t\t// })\r\n\t\tconsole.log(courseState);\r\n\t\tdispatch(createCourseAction(courseState));\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tif (courseState.courseDescription.length > 0) {\r\n\t// \t\tdispatch(createCourseAction(courseState));\r\n\t// \t}\r\n\t// }, [courseState.courseDescription]);\r\n\r\n\tconst onEditorStateChange = (editorState) => {\r\n\t\tsetEditorState(editorState);\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tcourseDescription: draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n\t\t})\r\n\t}\r\n\r\n\tconsole.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Create your Course</h1>\r\n\t\t\t\t\t\t\t\t<label>Name</label><input required type=\"text\" name=\"courseName\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Intro</label><input required type=\"text\" name=\"courseIntro\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Tag</label><input required type=\"text\" name=\"courseTag\" onChange={updateCourse} /><br />\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Description</label><br />\r\n\t\t\t\t\t\t\t\t{/* <textarea id=\"editorjs\" required type=\"text\" name=\"courseDescription\" onChange={updateCourse} rows=\"15\" cols=\"80\" /><br /> */}\r\n\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\t\t\ttoolbarClassName=\"toolbarClassName\"\r\n\t\t\t\t\t\t\t\t\twrapperClassName=\"wrapperClassName\"\r\n\t\t\t\t\t\t\t\t\teditorClassName=\"editorClassName\"\r\n\t\t\t\t\t\t\t\t\tonEditorStateChange={onEditorStateChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Price</label><input required type=\"text\" name=\"coursePrice\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Classes</label>\r\n\t\t\t\t\t\t\t\t{allClasses}\r\n\t\t\t\t\t\t\t\t<button onClick={addClass}>Add Class</button>\r\n\t\t\t\t\t\t\t\t<button onClick={createCourse}>Create Course</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CourseCreate;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\types.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\authConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\userConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\courses.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseCard.js",["373","374"],"import React from 'react';\r\nimport {Col} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n// import { RiMedal2Line } from 'react-icons/ri';\r\nimport { RiVipCrownFill, RiVipCrownLine, RiVipCrown2Fill } from 'react-icons/ri';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FaCrown } from 'react-icons/fa';\r\n\r\n\r\nimport './CourseCard.css';\r\n\r\nconst CourseCard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const { coursesProgress } = auth;\r\n\r\n  console.log(\"COURSES PROGRESS is \");\r\n  console.log(coursesProgress);\r\n  console.log(\"KEY IS \", + props.index)\r\n\r\n  const images = require.context('../../../../uploads/courses/', true);\r\n\r\n\r\n  let img = images(`./${props.tag}.jpg`);\r\n\r\n  return (\r\n    <Col md={6} lg={3} className=\"offset-1 offset-md-0 my-4 col-10\">\r\n      <div className=\"cardBorder\">\r\n        <div className=\"courseThumbnail courseFeatured1\">\r\n          <Link className=\"courseTitle\" to={props.courseOwned ? `/courses/${props.tag}/lessons/1` : `/courses/${props.tag}`}>\r\n            <img src={img.default} alt=\"javascript\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"courseTitleCtn\">\r\n          <Link className=\"courseTitle\" to={`/courses/${props.tag}`}>{props.name}</Link>\r\n        </div>\r\n        { props.price ? (\r\n          <>\r\n            <div className=\"separator\"></div>\r\n            <div className=\"priceCtn\">\r\n              \r\n                <span className=\"studentNumbers\">\r\n                  { props.courseLevel === \"beginner\" ? \r\n                    ( <><RiVipCrownLine /> Beginner</> ) : props.courseLevel === \"intermediate\" ? \r\n                    ( <><RiVipCrownFill /> Intermediate</> ) : (<><FaCrown /> Advanced</>)\r\n                  }\r\n                </span>\r\n                <span className=\"price\">${props.price}</span>\r\n            </div>\r\n          </> ) : (\r\n            <div className=\"courseProgressBorder\">\r\n              <div className=\"courseProgressCtn\">\r\n                <div style={{backgroundColor: \"#537ddc\", width: `${coursesProgress && coursesProgress.length > 0 ? coursesProgress[props.index] : \"0\"}%`, height: \"100%\"}}></div>\r\n              </div>\r\n              <p>{coursesProgress && coursesProgress.length > 0 ? coursesProgress[props.index] : \"0\"}% Complete</p>\r\n            </div>\r\n          )}\r\n      </div>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CourseCard;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileBilling.js",["375","376"],"import React, { useEffect } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport {\r\n  checkMembership,\r\n  cancelMembership,\r\n  membershipResubscribe,\r\n} from '../../actions/membership';\r\nimport { getBilling } from '../../actions/payments';\r\nimport './Profile.css';\r\n\r\nfunction ProfileBilling() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const payment = useSelector((state) => state.payment);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n    // console.log(\"before check membership \");\r\n    if (\r\n      auth &&\r\n      auth.user &&\r\n      auth.user.membership &&\r\n      auth.user.membership.customerId\r\n    ) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n\r\n    dispatch(getBilling());\r\n\r\n    // console.log(auth);\r\n  }, [auth && auth.user && auth.user._id]);\r\n\r\n  const userBilling =\r\n    payment &&\r\n    payment.billing &&\r\n    payment.billing.map((bill, i) => {\r\n      const date = new Date(bill.date);\r\n      const newDate = `${date.getDate()}/${\r\n        date.getMonth() + 1\r\n      }/${date.getFullYear()}`;\r\n      return (\r\n        <tr key={bill._id}>\r\n          <td>{newDate}</td>\r\n\r\n          <td>{bill.productName.length > 1 ? (\r\n            bill.productName.map((product, i) => (\r\n              <span>{product}{(i === bill.productName.length - 1) ? \"\" : <br />}</span>\r\n            ))\r\n          ): bill.productName}</td>\r\n\r\n          <td>{bill._id}</td>\r\n\r\n          <td>${bill.price}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  const untilDate = new Date(auth && auth.membership.paidThroughDate);\r\n  const newUntilDate = `${untilDate.getDate()}/${\r\n    untilDate.getMonth() + 1\r\n  }/${untilDate.getFullYear()}`;\r\n\r\n  return (\r\n    <div className=\"col-lg-9 col-md-12 col-sm-12 billingCtn\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">Membership Details</div>\r\n        <div className=\"card-body\">\r\n          {auth && auth.membership && !auth.membership.active && (\r\n            <h3>\r\n              <b>Membership Status:</b> Not active\r\n            </h3>\r\n          )}\r\n          {auth && auth.membership.active && (\r\n            <>\r\n              <h3>\r\n                <b>Membership Status:</b> {auth && auth.membership.status}\r\n              </h3>\r\n              <h3>\r\n                <b>Membership Valid Until:</b> {newUntilDate}\r\n              </h3>\r\n            </>\r\n          )}\r\n          {auth && auth.membership.status === 'Active' && (\r\n            <button\r\n              className=\"cancelMembership\"\r\n              onClick={() => dispatch(cancelMembership(auth && auth.token))}\r\n            >\r\n              Cancel Membership\r\n            </button>\r\n          )}\r\n          {auth &&\r\n            auth.membership.status === 'Canceled' &&\r\n            auth &&\r\n            auth.user &&\r\n            auth.user.membership &&\r\n            auth.user.membership.billingHistory &&\r\n            auth.user.membership.billingHistory.length > 0 && (\r\n              <button\r\n                onClick={() =>\r\n                  dispatch(membershipResubscribe(auth && auth.token))\r\n                }\r\n                className=\"actionButton\"\r\n              >\r\n                Resubscribe\r\n              </button>\r\n            )}\r\n          {auth && auth.membership && auth.membership.status === 'Failed' && (\r\n            <Link to=\"/membership\">Add a new payment method</Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <h2>\r\n        <b>Billing History</b>\r\n      </h2>\r\n      <div className=\"userBillingCtn\">\r\n        <Table striped bordered hover responsive size=\"sm\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>Date</th>\r\n              <th className=\"productName\">Product Name</th>\r\n              <th>Order Number</th>\r\n              <th>Sale Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{userBilling}</tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileBilling;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCourses.js",["377","378","379"],"import React, { useEffect } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { checkMembership } from '../../actions/membership';\r\nimport Loader from '../utils/Loader';\r\nimport CourseCard from '../pages/CourseCard';\r\nimport './Profile.css';\r\n\r\nfunction ProfileCourses() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const { loading, coursesOwnedLoaded } = auth;\r\n\r\n  useEffect(() => {\r\n    if(!loading && !coursesOwnedLoaded) {\r\n      dispatch(getCoursesOwned());\r\n    }\r\n\r\n    console.log('before check membership ');\r\n    if (\r\n      auth &&\r\n      auth.user &&\r\n      auth.user.membership &&\r\n      auth.user.membership.customerId\r\n    ) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n  }, [auth && auth.user && auth.user._id]);\r\n\r\n  const coursesimage = require.context('../../../../uploads/courses/', true);\r\n\r\n  const allCourses =\r\n    auth &&\r\n    auth.coursesOwned.map((course, index) => {\r\n      // let img = '';\r\n      // img = coursesimage(`./${course.tag}.jpg`);\r\n\r\n      return (\r\n        // <div className=\"col-xl-3 col-lg-4 col-md-4 mb-4\" key={index}>\r\n        //   <div className=\"cardBorder\">\r\n        //     <div className=\"courseThumbnail courseFeatured1\">\r\n        //       <Link to={`/courses/${course.tag}/lessons/1`}>\r\n        //         <img src={img.default} alt=\"javascript\" />\r\n        //       </Link>\r\n        //     </div>\r\n        //     <div className=\"courseTitleCtn\">\r\n        //       <Link to={`/courses/${course.tag}/lessons/1`}>{course.name}</Link>\r\n        //     </div>\r\n        //     <div className=\"separator\"></div>\r\n        //     <div className=\"priceCtn\">\r\n        //       <span className=\"studentNumbers\">\r\n        //         <i className=\"fas fa-user\"></i> Telmo Sampaio\r\n        //       </span>\r\n        //       <span className=\"price\">${course.price}</span>\r\n        //     </div>\r\n        //   </div>\r\n        // </div>\r\n        <CourseCard\r\n          name={course.name}\r\n          key={index}\r\n          index={index}\r\n          tag={course.tag}\r\n          courseLevel={course.courseLevel}\r\n          courseOwned={true}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"myCoursesRightCol\">\r\n      <div className=\"myCoursesCtn\">\r\n        <h1>My Courses</h1>\r\n        <div className=\"row\">\r\n          {loading ? (\r\n            <Loader />\r\n          ) : allCourses.length > 0 ? (\r\n            allCourses\r\n          ) : (\r\n            <div className=\"col-12\">\r\n              <h2>No courses owned...</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileCourses;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AllUsers.js",["380","381","382","383","384"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allUsersAction } from '../../actions/admin';\r\nimport { saveUsersAction, deleteUsersAction } from '../../actions/admin';\r\n// import ModalWindow from '../utils/ModalWindow';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport './AllUsers.css'\r\n\r\nconst AllUsers = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { users, loading } = admin;\r\n  // const courses = useSelector(state => state.courses);\r\n\r\n  const [stateUsers, setStateUsers] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [userSelected, setUserSelected] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [changePages, setChangePages] = useState(true)\r\n  const [orderByState, setOrderByState] = useState(false)\r\n  \r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const [orderState, setOrderState] = useState({\r\n    orderName: \"\",\r\n    asc: false\r\n  });\r\n\r\n  const [pageUsers, setPageUsers] = useState({\r\n    usersPerPage: 3,\r\n    values: [],\r\n    number: 1,\r\n    firstPage: 0,\r\n    lastPage: 1\r\n  });\r\n\r\n  const removeAdminFromUsers = users.filter(user => {\r\n    return user.role !== \"admin\";\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(allUsersAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setStateUsers(removeAdminFromUsers);\r\n    }\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    setStateUsers(removeAdminFromUsers);\r\n    setChangePages(false)\r\n    setOrderByState(true)\r\n  }, [users])\r\n\r\n  useEffect(() => {\r\n    // console.log(stateUsers);\r\n    \r\n    const findSelected = stateUsers.find(user => {\r\n      // console.log(user);\r\n      return user.selected\r\n    });\r\n    console.log(findSelected);\r\n\r\n    setUserSelected(Boolean(findSelected));\r\n    \r\n    console.log(paginate(stateUsers, pageUsers.usersPerPage, 1))\r\n\r\n    if( changePages ) {\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, 1),\r\n        number: pageUsers.number,\r\n        firstPage: pageUsers.firstPage,\r\n        // lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1).length\r\n        lastPage: 1\r\n      });\r\n    } else if( orderByState ) {\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, 1),\r\n        number: 1,\r\n        firstPage: 0,\r\n        // lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1).length\r\n        lastPage: 1\r\n      });\r\n    }\r\n  }, [stateUsers]);\r\n\r\n  function paginate(array, page_size, page_number) {\r\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n  }\r\n\r\n  const selectUsers = (usersSelected, event) => {\r\n    // console.log(stateUsers);\r\n    console.log(event.target.type)\r\n    if (usersSelected === \"all\") {\r\n      const selectAllUsers = stateUsers.map((user, i) => {\r\n        // if () {\r\n        // console.log(user);\r\n        // console.log(selectAll)\r\n        return {\r\n          ...user,\r\n          selected: !selectAll,\r\n          key: i\r\n        }\r\n        // }\r\n      });\r\n\r\n      const filteredUsers = selectAllUsers.filter(user => {\r\n        return user.role !== \"admin\";\r\n      });\r\n\r\n      console.log(filteredUsers)\r\n      setChangePages(true);\r\n      setOrderByState(false);\r\n\r\n      setStateUsers(filteredUsers);\r\n      setSelectAll(!selectAll);\r\n    } else {\r\n      const selectAllCopy = [...stateUsers];\r\n      \r\n\r\n      const globalUserSelected = (pageUsers.number-1) * pageUsers.usersPerPage + usersSelected;\r\n      console.log(\"the user selected is:\", usersSelected);\r\n      console.log(selectAllCopy[globalUserSelected]);\r\n      // selectAllCopy[usersSelected].selected = !selectAllCopy[usersSelected].selected;\r\n      selectAllCopy[globalUserSelected].selected = event.target.checked;\r\n\r\n      setChangePages(false);\r\n      setOrderByState(false);\r\n      setStateUsers(selectAllCopy);\r\n    }\r\n\r\n  }\r\n\r\n  const allUsers = pageUsers.values.map((user, i) => {\r\n    if (user.role !== \"admin\") {\r\n      const today = new Date();\r\n      const joinedDate = new Date(user.joined);\r\n      const newJoinedDate = `${('0' + joinedDate.getDate()).slice(-2)}/${('0' + (joinedDate.getMonth() + 1)).slice(-2)}/${joinedDate.getFullYear()}`;\r\n      // console.log(\"Inside all Users\");\r\n      // console.log(user.selected)\r\n      const lastLogin = new Date(user.lastLogin);\r\n      const lastLoginDate = () => {\r\n        if (today.getDate() === lastLogin.getDate() &&\r\n          today.getMonth() === lastLogin.getMonth() &&\r\n          today.getFullYear() === lastLogin.getFullYear()\r\n        ) {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - Today`\r\n        } else {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - ${lastLogin.getDate()}/${('0' + lastLogin.getMonth()).slice(-2)}/${lastLogin.getFullYear()}`;\r\n        }\r\n      }\r\n      return (\r\n        <tr key={user._id}>\r\n          <td>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={user.selected == null ? false : user.selected}\r\n              value={user.selected}\r\n              onChange={(e) => { selectUsers(i, e) }}\r\n            />\r\n            <div className=\"allUsersTableDiv\"><Link to={`/admin/user/${user._id}`}>{user.name}</Link></div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.email}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.active}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">${user.purchases} USD</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{newJoinedDate}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{lastLoginDate()}</div>\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n  })\r\n\r\n  const orderBy = (order) => {\r\n    console.log(\"ordering by date\");\r\n    removeAdminFromUsers.sort(function (a, b) {\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      if (order === \"date\") {\r\n        if (orderState.orderName === \"date\" && orderState.asc) {\r\n          return new Date(a.joined) - new Date(b.joined);\r\n        } else {\r\n          return new Date(b.joined) - new Date(a.joined);\r\n        }\r\n      } else if (order === \"purchases\") {\r\n        if (orderState.orderName === \"purchases\" && orderState.asc) {\r\n          return a.purchases - b.purchases;\r\n        } else {\r\n          return b.purchases - a.purchases;\r\n        }\r\n      } else if (order === \"email\") {\r\n        if (orderState.orderName === \"email\" && orderState.asc) {\r\n          if (a.email > b.email) { return -1; }\r\n          if (a.email < b.email) { return 1; }\r\n        } else {\r\n          if (a.email < b.email) { return -1; }\r\n          if (a.email > b.email) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"name\") {\r\n        let nameA = a.name.toLowerCase();\r\n        let nameB = b.name.toLowerCase();\r\n\r\n        if (orderState.orderName === \"name\" && orderState.asc) {\r\n          if (nameA > nameB) { return -1; }\r\n          if (nameA < nameB) { return 1; }\r\n        } else {\r\n          if (nameA < nameB) { return -1; }\r\n          if (nameA > nameB) { return 1; }\r\n        }\r\n\r\n        return 0;\r\n      } else if (order === \"active\") {\r\n        let activeA = a.active.toLowerCase();\r\n        let activeB = b.active.toLowerCase();\r\n\r\n        if (orderState.orderName === \"active\" && orderState.asc) {\r\n          if (activeA < activeB) { return -1; }\r\n          if (activeA > activeB) { return 1; }\r\n        } else {\r\n          if (activeA > activeB) { return -1; }\r\n          if (activeA < activeB) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"lastLogin\") {\r\n        if (orderState.lastLogin === \"date\" && orderState.asc) {\r\n          return new Date(a.lastLogin) - new Date(b.lastLogin);\r\n        } else {\r\n          return new Date(b.lastLogin) - new Date(a.lastLogin);\r\n        }\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    setChangePages(false);\r\n    setOrderByState(true);\r\n    setStateUsers(removeAdminFromUsers);\r\n    // setTest({ loading: false })\r\n    setOrderState({\r\n      orderName: order,\r\n      asc: !orderState.asc\r\n    })\r\n  }\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    const selectedUsers = stateUsers.filter((user) => {\r\n      return user.selected\r\n    });\r\n\r\n    console.log(selectedUsers)\r\n\r\n    if (selectedUsers.length > 0) {\r\n      let title = \"\";\r\n      // let users = selectedUsers.map(user => {\r\n      //   return user._id;\r\n      // })\r\n      if (e.target.value === \"activate\") {\r\n        title = \"Activate Users\"\r\n      } else if (e.target.value === \"delete\") {\r\n        title = \"Delete Users\"\r\n      }\r\n\r\n      setModalText({\r\n        title: title,\r\n        action: e.target.value,\r\n        users: selectedUsers\r\n      });\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  const saveChanges = () => {\r\n    console.log(\"inside save changes\");\r\n    if (modalText.action === \"activate\") {\r\n      dispatch(saveUsersAction(modalText));\r\n    } else if (modalText.action === \"delete\") {\r\n      dispatch(deleteUsersAction(modalText));\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n  const movePage = (direction) => {\r\n    if (direction === \"previous\") {\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 1),\r\n        number: pageUsers.number - 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 2).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length\r\n      })\r\n    } else {\r\n      console.log(pageUsers.number);\r\n      console.log(paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length);\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1),\r\n        number: pageUsers.number + 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 2).length\r\n      })\r\n    }\r\n  }\r\n\r\n  const findUser = (e) => {\r\n    console.log(\"find a user\");\r\n    // console.log(e.target.value);\r\n    const text = e.target.value.toLowerCase();\r\n    console.log(text);\r\n    const filteredusers = removeAdminFromUsers.filter((user) => {\r\n      console.log(user.name)\r\n      return (user.name.toLowerCase().indexOf(text) > -1 || user.email.toLowerCase().indexOf(text) > -1);\r\n    })\r\n\r\n    console.log(filteredusers);\r\n    setStateUsers(filteredusers);\r\n  }\r\n\r\n  console.log(pageUsers);\r\n  console.log(\"Change page is: \", changePages)\r\n\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <h5 className=\"mb-4\">Showing 1 - 25 of {stateUsers.length} Students</h5>\r\n          <div className=\"row\">\r\n            <Col sm=\"5\">\r\n              <Form.Control className=\"my-3 input-md\" type=\"text\" placeholder=\"Find a user\" onChange={findUser} />\r\n            </Col>\r\n          </div>\r\n          <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={(e) => { selectUsers(\"all\", e) }}\r\n                  />\r\n                  {userSelected ? (\r\n                    <select defaultValue={'DEFAULT'} onChange={handleChange}>\r\n                      <option value=\"DEFAULT\" disabled>Bulk Actions</option>\r\n                      <option value=\"activate\">Activate</option>\r\n                      <option value=\"delete\">Delete</option>\r\n                    </select>\r\n                  ) : (\r\n                      <span onClick={() => orderBy(\"name\")}>Name</span>\r\n                    )}\r\n                </th>\r\n                <th onClick={() => orderBy(\"email\")}>Email</th>\r\n                <th onClick={() => orderBy(\"active\")}>Active</th>\r\n                <th onClick={() => orderBy(\"purchases\")}>Purchases</th>\r\n                <th onClick={() => orderBy(\"date\")}>Joined</th>\r\n                <th onClick={() => orderBy(\"lastLogin\")}>Last login</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allUsers.length > 0 ? allUsers : <h3 className=\"my-3\">No Users found</h3>}\r\n            </tbody>\r\n            {/* <h1>{!test.loading ? \"Working\" : null}</h1> */}\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <nav aria-label=\"Page navigation example\" className=\"mt-3\">\r\n            <ul className=\"pagination justify-content-center\">\r\n              <li className={pageUsers.firstPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <button onClick={() => movePage(\"previous\")} className=\"page-link\" href=\"#\">Previous</button>\r\n              </li>\r\n              <li className={pageUsers.lastPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <button onClick={() => movePage(\"next\")}\r\n                  className=\"page-link\"\r\n                  >Next</button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to {modalText.action} the following users?</p>\r\n          {modalText.users.map((user, i) => {\r\n            return <p key={i}><b>{user.name}</b></p>;\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllUsers\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\Profile.js",["385","386","387","388"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  updateUserAction,\r\n  loadUser,\r\n  resetNotification,\r\n} from '../../actions/auth';\r\nimport { Button } from 'react-bootstrap';\r\nimport MessageDisplay from '../utils/MessageDisplay';\r\nimport './Profile.css';\r\n\r\nfunction Profile() {\r\n  const [cropState, setCropState] = useState({\r\n    src: null,\r\n    crop: {\r\n      aspect: 1,\r\n      height: 297,\r\n      unit: 'px',\r\n      width: 297,\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const { notification, loading } = auth;\r\n\r\n  const [page, setPage] = useState({\r\n    loaded: false,\r\n    showImagePreview: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (page.showImagePreview) {\r\n      // document.body.style.overflow = 'hidden';\r\n      document.body.classList.add(\"lock\");\r\n    } else {\r\n      // document.body.style.overflow = 'unset';\r\n      document.body.classList.remove(\"lock\");\r\n    }\r\n  }, [page.showImagePreview]);\r\n\r\n  const [userDetails, setUserDetails] = useState({\r\n    name: '',\r\n    newPassword: '',\r\n    newPasswordConfirm: '',\r\n    password: '',\r\n    showError: false,\r\n    formChanged: false,\r\n    isPhoto: false,\r\n    message: \"\"\r\n  });\r\n\r\n  const { showError, formChanged, isPhoto } = userDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(resetNotification());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (notification.status === 'success') {\r\n      dispatch(loadUser());\r\n    }\r\n  }, [notification.status]);\r\n\r\n  useEffect(() => {\r\n    console.log('before check membership ');\r\n\r\n    setUserDetails({\r\n      ...userDetails,\r\n      name: auth && auth.user && auth.user.name,\r\n    });\r\n\r\n    // console.log(auth);\r\n  }, [auth && auth.user && auth.user._id]);\r\n\r\n  const updateUserDetails = (event) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      showError: false,\r\n      formChanged: true,\r\n      isPhoto: false,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submitUserDetails = (event) => {\r\n    event.preventDefault();\r\n    if (formChanged) {\r\n      if (\r\n        (userDetails.newPassword || userDetails.newPasswordConfirm) &&\r\n        userDetails.newPassword !== userDetails.newPasswordConfirm\r\n      ) {\r\n        setUserDetails({\r\n          ...userDetails,\r\n          showError: true,\r\n          isPhoto: false,\r\n          message: \"Passwords do not match\"\r\n        });\r\n        console.log('Setting error');\r\n      } else {\r\n        console.log('Dispatching Update');\r\n        setUserDetails({\r\n          ...userDetails,\r\n          showError: false,\r\n          isPhoto: false,\r\n          newPassword: '',\r\n          newPasswordConfirm: '',\r\n          password: '',\r\n        })\r\n\r\n        dispatch(updateUserAction(auth && auth.token, userDetails));\r\n      }\r\n    }\r\n  };\r\n\r\n  const imageMaxSize = 2000000; // bytes\r\n  const acceptedFileTypes = 'image/png, image/jpg, image/jpeg, image/gif';\r\n  const acceptedFileTypesArray = acceptedFileTypes.split(',').map((item) => {\r\n    return item.trim();\r\n  });\r\n  //let imageRef = null;\r\n  let imageRef = useRef();\r\n  let fileRef = useRef();\r\n\r\n  // const images = require.context('../../images/', true);\r\n  // const images = require.context('../../../../uploads/users/', true);\r\n\r\n  let img = auth && auth.user && auth.user.image;\r\n\r\n  if (!img) {\r\n    img = '/uploads/users/default.png';\r\n  }\r\n  let userPic = (\r\n    <img\r\n      src={img}\r\n      className=\"userAvatar\"\r\n      onLoad={() => setPage({ loaded: true })}\r\n      alt=\"User Profile\"\r\n    />\r\n  );\r\n\r\n  // if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n  //   // import Pic from `/${auth.user._id}.jpg`;\r\n  //   // userPic = <img src={`/${auth.user._id}.jpg`} />\r\n  //   img = images(`./${auth.user._id}.jpg`);\r\n  //   userPic = <img src={img.default} className=\"userAvatar\" onLoad={() => setPage({ loaded: true })} alt=\"User Profile\"/>\r\n  // } else {\r\n  //   img = images(`./default.png`);\r\n  //   userPic = <img src={img.default} className=\"userAvatar\" onLoad={() => setPage({ loaded: true })} alt=\"User Profile\"/>\r\n  // }\r\n\r\n  const onSelectFile = (e) => {\r\n    if (e.target.files.length < 1) {\r\n      setUserDetails({ ...userDetails, isPhoto: true, showError: true, message: 'No image selected' });\r\n      return;\r\n    }\r\n    console.log('INSIDE onSelectFile');\r\n    console.log(e.target.files[0]);\r\n    console.log(e.target.files[0].size);\r\n    console.log(e.target.files[0].type);\r\n    console.log(acceptedFileTypesArray);\r\n\r\n    // const reader = new FileReader();\r\n\r\n    // //Read the contents of Image File.\r\n    // reader.readAsDataURL(e.target.files[0]);\r\n    // reader.onload = function (e) {\r\n\r\n    //   //Initiate the JavaScript Image object.\r\n    //   const image = new Image();\r\n\r\n    //   //Set the Base64 string return from FileReader as source.\r\n    //   image.src = e.target.result;\r\n\r\n    //   //Validate the File Height and Width.\r\n    //   image.onload = function () {\r\n    //     var height = this.height;\r\n    //     var width = this.width;\r\n    //     if (height > 500 || width > 500) {\r\n    //       alert(\"Height and Width must not exceed 100px.\");\r\n      \r\n    //       return false;\r\n    //     } else {\r\n    //     alert(\"Uploaded image has valid Height and Width.\");\r\n    //     return true;\r\n    //     }\r\n    //   };\r\n    // };\r\n\r\n    if (e.target.files[0].size > imageMaxSize) {\r\n      setUserDetails({ ...userDetails, isPhoto: true, showError: true, message: 'Image size should be less than 2 MB' });\r\n      return;\r\n    } else if (!acceptedFileTypesArray.includes(e.target.files[0].type)) {\r\n      setUserDetails({ ...userDetails, isPhoto: true, showError: true, message: 'Image should be of the type JPG, JPEG, PNG or GIF'});\r\n      return;\r\n    }\r\n\r\n    setPage({ ...page, showImagePreview: true });\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      console.log(reader.result);\r\n      reader.addEventListener('load', () => {\r\n        setCropState({\r\n          ...cropState,\r\n          src: reader.result,\r\n        });\r\n        // setPage({ ...page, showImagePreview: true })\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onImageLoaded = async (image) => {\r\n    console.log(image);\r\n    imageRef.current = image;\r\n  };\r\n\r\n  const onCropComplete = (crop) => {\r\n    makeClientCrop(crop);\r\n  };\r\n\r\n  const onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    console.log('inside onCropChange');\r\n    setCropState({\r\n      ...cropState,\r\n      crop,\r\n    });\r\n  };\r\n\r\n  const makeClientCrop = async (crop) => {\r\n    console.log(imageRef.current);\r\n    if (imageRef.current && crop.width && crop.height) {\r\n      console.log(crop);\r\n      const croppedImageUrl = await getCroppedImg(\r\n        imageRef.current,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      console.log(croppedImageUrl);\r\n      setCropState({\r\n        ...cropState,\r\n        croppedImageUrl: croppedImageUrl,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    console.log(image);\r\n    console.log(crop);\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const reader = new FileReader();\r\n    canvas.toBlob((blob) => {\r\n      reader.readAsDataURL(blob);\r\n      reader.onloadend = () => {\r\n        dataURLtoFile(reader.result, `${auth.user._id}.jpg`);\r\n      };\r\n    });\r\n  };\r\n\r\n  const dataURLtoFile = (dataurl, filename) => {\r\n    let arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    let croppedImage = new File([u8arr], filename, { type: mime });\r\n    setCropState({\r\n      ...cropState,\r\n      croppedImage: croppedImage,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    // e.preventDefault();\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n      console.log(cropState.croppedImage);\r\n      const formData = new FormData();\r\n      formData.append('file', cropState.croppedImage);\r\n      formData.append('image', auth.user._id);\r\n\r\n      console.log(formData);\r\n\r\n      const res = await axios.post(`/api/users/profilePic`, formData, config);\r\n      console.log('res.data');\r\n      console.log(res.data);\r\n      closeImagePreview();\r\n    } catch (error) {\r\n      const errors = error.response.data;\r\n      console.log(error);\r\n      setUserDetails({ ...userDetails, isPhoto: true, showError: true, message: 'Image size should be less than 2 MB' });\r\n      // console.log(\"File Size is too large. Allowed file size is 100KB\");\r\n      closeImagePreview();\r\n      console.log(errors.message);\r\n    }\r\n  };\r\n\r\n  const closeImagePreview = () => {\r\n    setPage({ ...page, showImagePreview: false });\r\n    console.log(fileRef.current);\r\n    fileRef.current.value = null;\r\n    setCropState({\r\n      ...cropState,\r\n      crop: {\r\n        aspect: 1 / 1,\r\n      },\r\n    });\r\n  };\r\n\r\n  // if (active == 'notActive' && !auth.loading) {\r\n  //   console.log(\"inside redirect\");\r\n  //   return <Redirect to=\"/activate\" />\r\n  // } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n\r\n  // console.log(page);\r\n  // console.log(cropState)\r\n\r\n  console.log(userDetails)\r\n\r\n  return (\r\n    <div className=\"userRightCol\">\r\n      <div className=\"userDetails\">\r\n        {!page.loaded && (\r\n          <div className=\"preLoaderProfilePic\">\r\n            <div className=\"spinner-border \" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!loading && showError && isPhoto && (\r\n              <MessageDisplay\r\n                header=\"Update error\"\r\n                status=\"Fail\"\r\n                message={userDetails.message}\r\n              />\r\n            )}\r\n        <div className=\"uploadButtonCtn\">\r\n          <label htmlFor=\"file\">{userPic}</label>\r\n          <input\r\n            ref={fileRef}\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onSelectFile}\r\n          />\r\n        </div>\r\n\r\n        \r\n\r\n        {page.showImagePreview && (\r\n          <div className=\"imagePreviewOverlay\">\r\n            <i\r\n              className=\"fa fa-times-circle closeOverlay\"\r\n              onClick={closeImagePreview}\r\n            ></i>\r\n            <h2>Crop your Image</h2>\r\n            {cropState.src && (\r\n              <ReactCrop\r\n                src={cropState.src}\r\n                crop={cropState.crop}\r\n                ruleOfThirds\r\n                onImageLoaded={onImageLoaded}\r\n                onComplete={onCropComplete}\r\n                onChange={onCropChange}\r\n              />\r\n            )}\r\n            {cropState.croppedImageUrl && (\r\n              <img\r\n                alt=\"Crop\"\r\n                style={{ maxWidth: '100%' }}\r\n                src={cropState.croppedImageUrl}\r\n              />\r\n            )}\r\n            {cropState.src ? (\r\n              <form onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className=\"uploadButton\">\r\n                  Save image\r\n                </button>\r\n              </form>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n\r\n        <h3>Upload image</h3>\r\n        <hr />\r\n        <form onSubmit={submitUserDetails}>\r\n          <label htmlFor=\"\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"My name\"\r\n            value={userDetails.name || ''}\r\n            name=\"name\"\r\n            onChange={updateUserDetails}\r\n          />\r\n          <h3>Change your password</h3>\r\n          <div className=\"changePasswordCtn\">\r\n            <label htmlFor=\"newPassword\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              id=\"newPassword\"\r\n              onChange={updateUserDetails}\r\n              value={userDetails.newPassword}\r\n            />\r\n            <label htmlFor=\"newPasswordConfirm\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"newPasswordConfirm\"\r\n              id=\"newPasswordConfirm\"\r\n              onChange={updateUserDetails}\r\n              value={userDetails.newPasswordConfirm}\r\n            />\r\n\r\n            <hr />\r\n            <label htmlFor=\"\">\r\n              To save new password, enter current password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={updateUserDetails}\r\n              value={userDetails.password}\r\n            />\r\n          </div>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Update Profile\r\n          </Button>\r\n        </form>\r\n        {!loading && showError && !isPhoto && (\r\n          <MessageDisplay\r\n            header=\"Update error\"\r\n            status=\"Fail\"\r\n            message={userDetails.message}\r\n          />\r\n        )}\r\n        {!loading && notification && notification.status && (\r\n          <MessageDisplay\r\n            header={notification.status === 'success' ? 'Success' : 'Error'}\r\n            status={notification.status}\r\n            message={notification.message}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseUpdate.js",["389","390","391","392","393","394","395"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileSidebar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\FeatureCourses.js",["396","397","398"],"import React, {useRef, useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCourses, saveFeaturedCoursesAction } from '../../actions/courses';\r\nimport './FeatureCourses.css';\r\n\r\nconst FeatureCourses = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const auth = useSelector(state => state.auth);\r\n  const {loading, token} = auth;\r\n\r\n  \r\n  const courses = useSelector(state => state.courses);\r\n  const courseLoading = courses.loading;\r\n  const { message } = courses;\r\n\r\n  courses.all.length > 0 && courses.all.sort((a, b) => {\r\n    return a.featuredPosition - b.featuredPosition;\r\n  })\r\n  \r\n  const [data, setData] = useState(courses.all);\r\n\r\n  const [allItems, setAllItems] = useState([])\r\n\r\n  const updateCourses = () => {\r\n    const allupdatedCourses = courses.all.length > 0 && courses.all.map((course, i) => {\r\n      return {\r\n        id: course._id,\r\n        name: course.name,\r\n        tag: course.tag,\r\n        price: course.price,\r\n        newIndex: i + 1,\r\n        featured: course.featured,\r\n        featuredPosition: i + 1\r\n      }\r\n    });\r\n\r\n    console.log(allupdatedCourses);\r\n\r\n    setData(allupdatedCourses);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n  }, [loading]);\r\n  \r\n  useEffect(() => {\r\n    if( !courseLoading ) {\r\n      updateCourses();\r\n    }\r\n\r\n\t}, [courseLoading]);\r\n\r\n  \r\n\r\n  let item = useRef();\r\n  let itemOver = useRef();\r\n  let dropzoneRef = useRef();\r\n\r\n  const onDragStart = (event) => {\r\n    console.log(\"---- ON DRAG START -------\");\r\n    item.current = event.target;\r\n    console.log(item.current);\r\n    event\r\n      .dataTransfer\r\n      .setData('text/plain', event.target.id);\r\n  \r\n    // event\r\n    //   .currentTarget\r\n    item.current\r\n      .style\r\n      .backgroundColor = 'yellow';\r\n  }\r\n\r\n  const onDrop = (event) => {\r\n    console.log(\"on drop starting\");\r\n    console.log(item.current);\r\n    console.log(itemOver.current);\r\n    let currenTarget = itemOver.current;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // const id = event\r\n    //   .dataTransfer\r\n    //   .getData('text');\r\n\r\n    //   console.log(id);\r\n    //   const draggableElement = document.getElementById(id);\r\n    //   console.log(draggableElement);\r\n\r\n      const dropzone = event.target;\r\n      // dropzone.appendChild(draggableElement);\r\n      dropzone.appendChild(itemOver.current);\r\n\r\n      const test = [...allItems, itemOver.current]\r\n\r\n      setAllItems(test);\r\n      console.log(currenTarget.dataset.item);\r\n      // setFeatureCourses([...featureCourses, JSON.parse(dropzone.querySelector(\".example-draggable\").dataset.item) ]);\r\n      // console.log(JSON.parse(dropzone.querySelector(\".example-draggable\").dataset.item));\r\n\r\n      // const allFeatureCourses = [];\r\n      // let featureCourseNodes = dropzoneRef.current.querySelectorAll(\".example-draggable\");\r\n      // for(let i=0; i < featureCourseNodes.length; i++) {\r\n      //   allFeatureCourses.push(featureCourseNodes[i].dataset.item);\r\n      // }\r\n\r\n      // console.log(featureCourses);\r\n      \r\n\r\n    //   event\r\n    // .dataTransfer\r\n    // .clearData();\r\n  }\r\n\r\n  const onDragOver = (event) => {\r\n    // event.stopPropagation();\r\n    console.log(\"calling OnDragOver\");\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  const onDragEnd = (e) => {\r\n    console.log(\"----ON DRAG END---------\");\r\n    console.log(item.current);\r\n    item.current.style.display = 'block';\r\n\r\n    e.target.classList.remove(\"drag-up\");\r\n    itemOver.current.classList.remove(\"drag-up\");\r\n\r\n    e.target.classList.remove(\"drag-down\");\r\n    itemOver.current.classList.remove(\"drag-down\");\r\n    \r\n    let newData = [...data];\r\n    let from = Number(item.current.dataset.id);\r\n    let to = Number(itemOver.current.dataset.id);\r\n\r\n    console.log(from);\r\n    console.log(to);\r\n    newData.splice(to, 0, newData.splice(from, 1)[0]);\r\n\r\n    // console.log(newData);\r\n    // console.log(newData.splice(from, 1)[0])\r\n\r\n    // //set newIndex to judge direction of drag and drop\r\n    newData = newData.map((doc, index)=> {\r\n      doc.newIndex = index + 1;\r\n      return doc;\r\n    })\r\n\r\n    console.log(newData);\r\n\r\n    setData(newData);\r\n\r\n    // console.log(dropzoneRef.current.dataset.id);\r\n    // console.log(dropzoneRef.current.querySelectorAll(\".example-draggable\")[0]);\r\n    // console.log(dropzoneRef.current.querySelectorAll(\".example-draggable\"));\r\n\r\n    // const allFeatureCourses = [];\r\n    //   let featureCourseNodes = dropzoneRef.current.querySelectorAll(\".example-draggable\");\r\n    //   console.log(featureCourseNodes);\r\n    //   for(let i=0; i < featureCourseNodes.length; i++) {\r\n    //     console.log(\"THIS IS\");\r\n    //     console.log(featureCourseNodes[i]);\r\n    //     console.log(JSON.parse(featureCourseNodes[i].dataset.item));\r\n    //     allFeatureCourses.push(JSON.parse(featureCourseNodes[i].dataset.item));\r\n    //   }\r\n\r\n    // console.log(allFeatureCourses);\r\n  }\r\n\r\n  const dragOverItem = (e) => {\r\n    console.log(\"------ DRAG OVER ITEM -----\");\r\n    console.log(item.current);\r\n    \r\n\r\n      let featureCourseNodes = document.querySelectorAll(\".example-draggable\");\r\n      for(let i=0; i < featureCourseNodes.length; i++) {\r\n        featureCourseNodes[i].classList.remove(\"drag-up\", \"drag-down\");\r\n      }\r\n\r\n\r\n    \r\n    //itemOver.current = e.target;\r\n    itemOver.current = e.target;\r\n    // item.current = e.target;\r\n    console.log(\"ITEM OVER \");\r\n    console.log(itemOver.current);\r\n\r\n    console.log(\"EVENT TARGET \");\r\n    console.log(item.current);\r\n\r\n    item.current.style.display = \"none\";\r\n    //itemOver.current.style.display = \"none\";\r\n\r\n    if (e.target.tagName !== \"DIV\") {\r\n      return;\r\n    }\r\n\r\n    const fromIndex = JSON.parse(item.current.dataset.item).newIndex;\r\n    console.log(\"fromIndex \" + fromIndex);\r\n\r\n    const toIndex = JSON.parse(itemOver.current.dataset.item).newIndex;\r\n    console.log(\"toIndex \" + toIndex);\r\n\r\n    const animateName = fromIndex > toIndex ? \"drag-up\" : \"drag-down\";\r\n    console.log(\"animateName \" + animateName);\r\n\r\n\r\n    if (itemOver.current && item.current.dataset.item !== itemOver.current.dataset.item) {\r\n      itemOver.current.classList.remove(\"drag-up\", \"drag-down\");\r\n      // itemOver.current.classList.remove(\"drag-up\", \"drag-down\");\r\n      // itemOver.current = e.target\r\n    }\r\n\r\n    if(!itemOver.current.classList.contains(animateName)) {\r\n      itemOver.current.classList.add(animateName);\r\n      // itemOver.current = e.target;\r\n    }\r\n\r\n  }\r\n\r\n  // const allData = data.map((item, i) => {\r\n  //   return (\r\n  //     <div\r\n  //         className=\"example-draggable\"\r\n  //         draggable=\"true\"\r\n  //         onDragStart={onDragStart}\r\n  //         onDragEnd={onDragEnd}\r\n  //         onDragOver={dragOverItem}\r\n  //         data-id={i}\r\n  //         data-item={JSON.stringify(item)}\r\n         \r\n  //     >{item.name}</div>\r\n  //   )\r\n  // })\r\n\r\n  const updateFeatureCourses = (i) => {\r\n    console.log(\"Updating!!!\");\r\n    let copyFeature = [...data];\r\n    \r\n    console.log(copyFeature[i]);\r\n    console.log(copyFeature[i].featured)\r\n    copyFeature[i] = {\r\n      ...copyFeature[i],\r\n      featured: !copyFeature[i].featured\r\n    }\r\n\r\n    console.log(copyFeature[i].featured);\r\n    setData(copyFeature)\r\n  }\r\n\r\n  const allCourses = data.length > 0 && data.map((course, i) => {\r\n    // if(course.name === \"css animation\") {\r\n    //   console.log(course.name);\r\n    //   console.log(course.featured)\r\n    // }\r\n    return (\r\n      <div key={i}>\r\n        <div className=\"example-draggable\"\r\n            draggable=\"true\"\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n            onDragOver={dragOverItem}\r\n            data-id={i}\r\n            data-item={JSON.stringify(course)}\r\n        >{course.name}</div>\r\n        <input type=\"checkBox\" value={course.featured} checked={course.featured ? \"checked\" : false} onChange={() => updateFeatureCourses(i)}/>\r\n      </div>\r\n    )\r\n\t\t\r\n  })\r\n\r\n  // const allFeatureCourses = featureCourses.length > 0 && featureCourses.map((course, i) => {\r\n\r\n  //   return (\r\n  //     <div className=\"example-draggable\"\r\n  //         draggable=\"true\"\r\n  //         onDragStart={onDragStart}\r\n  //         onDragEnd={onDragEnd}\r\n  //         onDragOver={dragOverItem}\r\n  //         data-id={i}\r\n  //         data-item={course}\r\n  //     >{course.name}</div>\r\n  //   )\r\n\t\t\r\n  // })\r\n\r\n  const saveFeaturedCourses = (e) => {\r\n    // const filteredData = data.filter((course) => {\r\n    //   return course.featured;\r\n    // })\r\n    e.preventDefault();\r\n    console.log(data);\r\n    dispatch(saveFeaturedCoursesAction(data, token));\r\n  }\r\n\r\n  console.log(data)\r\n  return (\r\n    <div>\r\n    <div className=\"example-parent\">\r\n      <h1>To-do list</h1>\r\n      <div className=\"example-origin\">\r\n        To-do\r\n        {allCourses}\r\n        <button onClick={saveFeaturedCourses}>Save Feature courses</button>\r\n        { message ? ( \r\n          <h3>{message}</h3> \r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <h2>Featured Courses</h2>\r\n        <div\r\n          className=\"example-dropzone\"\r\n          onDrop={e => onDrop(e)}\r\n          onDragOver={e => onDragOver(e)}\r\n          data-id={5}\r\n        >\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FeatureCourses\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Courses.js",["399","400"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Button } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getCourses } from '../../actions/courses';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { saveFeaturedCoursesAction } from '../../actions/courses';\r\nimport './Courses.css';\r\n\r\nconst Courses = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const { token } = auth;\r\n  const courses = useSelector((state) => state.courses);\r\n  const { coursesLoaded } = courses;\r\n\r\n  const [courseState, setCourseSate] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(!coursesLoaded) {\r\n      dispatch(getCourses());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const sortedCourses = [...courses.all];\r\n\r\n    sortedCourses.length > 0 &&\r\n      sortedCourses.sort((a, b) => {\r\n        return a.position - b.position;\r\n      });\r\n\r\n    setCourseSate(sortedCourses);\r\n  }, [courses]);\r\n\r\n  const images = require.context('../../../../uploads/courses/', true);\r\n\r\n  const updateFeatureCourses = (i) => {\r\n    console.log('Updating!!!');\r\n    let copyFeature = [...courseState];\r\n\r\n    console.log(copyFeature[i]);\r\n    console.log(copyFeature[i].featured);\r\n    copyFeature[i] = {\r\n      ...copyFeature[i],\r\n      featured: !copyFeature[i].featured,\r\n    };\r\n\r\n    console.log(copyFeature[i].featured);\r\n    setCourseSate(copyFeature);\r\n  };\r\n\r\n  const allCourses = courseState.map((course, index) => {\r\n    let img = '';\r\n    try {\r\n      img = images(`./${course.tag}.jpg`);\r\n    } catch (error) {\r\n      img = images(`./default-course.jpg`);\r\n    }\r\n\r\n    return (\r\n      <Draggable\r\n        draggableId={`draggable-${index}`}\r\n        key={`draggable-${index}`}\r\n        index={index}\r\n      >\r\n        {(provided) => (\r\n          <Col\r\n            md={4}\r\n            xl={3}\r\n            className=\"my-3\"\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <div className=\"cardBorder\">\r\n              <div className=\"courseThumbnail courseFeatured1\">\r\n                <Link to={`/admin/courses/update/${course.tag}`}>\r\n                  <img src={img.default} alt=\"javascript\" />\r\n                </Link>\r\n              </div>\r\n              <div className=\"courseTitleCtn\">\r\n                <Link to={`/admin/courses/update/${course.tag}`}>\r\n                  {course.name}\r\n                </Link>\r\n              </div>\r\n              <div className=\"separator\"></div>\r\n              <div className=\"priceCtn\">\r\n                {/* <span className=\"studentNumbers\">\r\n                    <i className=\"fas fa-user\"></i> Telmo Sampaio\r\n                  </span>\r\n                  <span className=\"price\">${course.price}</span> */}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={course.featured}\r\n                  checked={course.featured ? 'checked' : false}\r\n                  onChange={() => updateFeatureCourses(index)}\r\n                />\r\n                <span>Featured</span>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  });\r\n\r\n  // if (auth && auth.user && auth.user.role !== 'admin') {\r\n  //   return <Redirect to=\"/\" />;\r\n  // }\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    console.log(result);\r\n    if (!result.destination) return;\r\n    const items = Array.from(courseState);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      delete items[i].featuredPosition; \r\n      items[i].position = i;\r\n    }\r\n    setCourseSate(items);\r\n  };\r\n\r\n  const saveFeaturedCourses = (e) => {\r\n    // const filteredData = data.filter((course) => {\r\n    //   return course.featured;\r\n    // })\r\n    // e.preventDefault();\r\n    // console.log(data);\r\n    dispatch(saveFeaturedCoursesAction(courseState, token));\r\n  };\r\n\r\n  console.log(courseState);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adminCtn\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              {/* <div className=\"adminCourseTop\"> */}\r\n                <h1>Courses</h1>\r\n                <div>\r\n                  <Button variant=\"outline-primary\" onClick={saveFeaturedCourses} className=\"mr-4\">\r\n                    Save Feature courses\r\n                  </Button>\r\n                  {/* {message ? <h3>{message}</h3> : null} */}\r\n                  <Button>\r\n                    <Link to=\"/admin/courses/create\">New Course</Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                  <Droppable\r\n                    droppableId=\"coursesSequence\"\r\n                    direction=\"horizontal\"\r\n                    type=\"column\"\r\n                  >\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"row\"\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                      >\r\n                        {allCourses}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              {/* </div> */}\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminSidebar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Header.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\SecondHeader.js",["401","402","403","404","405"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './SecondHeader.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport logo from '../../images/telmo-academy1.png';\r\nimport { loadCheckout } from '../../actions/courses';\r\nimport { lastLoginAction } from '../../actions/auth';\r\nimport { checkMembership } from '../../actions/membership';\r\n\r\nconst SecondHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const { isAuthenticated, membershipLoaded, notification, user } = auth;\r\n\r\n  const payment = useSelector((state) => state.payment);\r\n  const { checkoutLoaded } = payment;\r\n\r\n  let userPic = null;\r\n\r\n  const [dropDown, setDropdown] = useState({\r\n    open: false,\r\n  });\r\n\r\n  const [mobileMenu, setMobileMenu] = useState({\r\n    open: false,\r\n  });\r\n\r\n  const dropMenu = React.useRef();\r\n  const dropMobileMenu = React.useRef();\r\n\r\n  const profileIcon = React.useRef();\r\n  const burgerMenuIcon = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (mobileMenu.open) {\r\n      // document.body.style.overflow = 'hidden';\r\n      document.body.classList.add(styles.lock);\r\n    } else {\r\n      // document.body.style.overflow = 'unset';\r\n      document.body.classList.remove(styles.lock);\r\n    }\r\n  }, [mobileMenu]);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (\r\n        dropMenu.current &&\r\n        !dropMenu.current.contains(event.target) &&\r\n        !profileIcon.current.contains(event.target)\r\n      ) {\r\n        // console.log(\"dropMenu\");\r\n        // alert(\"You clicked outside of me!\");\r\n        console.log(\"outside\");\r\n        setDropdown({\r\n          open: false,\r\n        });\r\n      }\r\n\r\n      if (\r\n        dropMobileMenu.current &&\r\n        !dropMobileMenu.current.contains(event.target) &&\r\n        !burgerMenuIcon.current.contains(event.target)\r\n      ) {\r\n        console.log('inside dropMobileMenu');\r\n        setMobileMenu({\r\n          open: false,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [dropMenu]);\r\n\r\n  useEffect(() => {\r\n    if (auth && auth.isAuthenticated && !checkoutLoaded) {\r\n      dispatch(loadCheckout(auth && auth.user && auth.user._id));\r\n    }\r\n  }, [auth && auth.isAuthenticated && auth.user && auth.user.checkout]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"loading check\")\r\n    // console.log(auth && auth.token)\r\n    if (auth && auth.token) {\r\n      if (!membershipLoaded) {\r\n        dispatch(checkMembership(auth && auth.token));\r\n      }\r\n      dispatch(lastLoginAction());\r\n    }\r\n  }, [auth && auth.isAuthenticated]);\r\n\r\n  const handleDropdown = (state, myFunc) => {\r\n    // if (!state.open) {\r\n    //   myFunc({\r\n    //     open: true\r\n    //   })\r\n    // } else {\r\n    //   myFunc({\r\n    //     open: false\r\n    //   })\r\n    // }\r\n    console.log('calling handleDropdown');\r\n    myFunc({\r\n      open: !state.open,\r\n    });\r\n  };\r\n\r\n  // const images = require.context('../../images/', true, /\\.(png|jpe?g|svg)$/);\r\n  // const images = require.context('../../../../uploads/users/', true);\r\n\r\n  // console.log(\"+++++++\");\r\n  // console.log(images);\r\n\r\n  let img = auth && auth.user && auth.user.image;\r\n\r\n  if (!img) {\r\n    img = '/uploads/users/default.png';\r\n  }\r\n\r\n  userPic = (\r\n    <img\r\n      src={img}\r\n      className={styles.userAvatarNav}\r\n      alt=\"user profile\"\r\n    />\r\n  );\r\n  \r\n  const checkoutIcon = isAuthenticated ? (\r\n      <Link className={styles.checkoutLink} to=\"/cart/checkout\">\r\n        <i className=\"fa fa-shopping-cart\"></i>\r\n        {payment &&\r\n        payment.checkout &&\r\n        payment.checkout.length > 0 ? (\r\n          <span className={styles.checkoutNumber}>\r\n            {payment &&\r\n              payment.checkout &&\r\n              payment.checkout.length}\r\n          </span>\r\n        ) : null}\r\n      </Link>\r\n  ) : null\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.secondHeader}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className={`col-sm-12 ${styles.mainNav}`}>\r\n              <Link to=\"/\">\r\n                <img\r\n                  src={logo}\r\n                  alt=\"Telmo Academy Logo\"\r\n                  className={styles.logo}\r\n                />\r\n              </Link>\r\n\r\n              <div\r\n                className={styles.mobileMenu}\r\n              >\r\n                { checkoutIcon }\r\n                <i ref={burgerMenuIcon} className=\"fas fa-bars\" onClick={() => handleDropdown(mobileMenu, setMobileMenu)}></i>\r\n              </div>\r\n              <ul className={styles.desktopMenu}>\r\n                <li>\r\n                  <Link to=\"/courses\">COURSES</Link>\r\n                </li>\r\n                {/* Add when all finished\r\n            { auth && auth.membership && !auth.membership.active && (\r\n              <li><Link to='/membership'>PRICING</Link></li>\r\n\r\n            )} */}\r\n                <li>\r\n                  <Link to=\"/membership\">MEMBERSHIP</Link>\r\n                </li>\r\n                {isAuthenticated ? (\r\n                  <div\r\n                    ref={dropMenu}\r\n                    className={\r\n                      dropDown.open ? styles.navDropDown : styles.hideDropDown\r\n                    }\r\n                  >\r\n                    <li>\r\n                      <Link to=\"/profile\">\r\n                        <i className=\"fa fa-user\"></i> Profile\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/profile/courses\">\r\n                        <i className=\"fa fa-play-circle\"></i> My Courses\r\n                      </Link>\r\n                    </li>\r\n                    {auth && auth.user && auth.user.role === 'admin' ? (\r\n                      <li>\r\n                        <Link to=\"/admin/courses\">\r\n                          <i className=\"fas fa-user-shield\"></i> Admin\r\n                        </Link>\r\n                      </li>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <li>\r\n                      <Link to=\"/logout\">\r\n                        <i className=\"fa fa-door-open\"></i> Logout\r\n                      </Link>\r\n                    </li>\r\n                  </div>\r\n                ) : (\r\n                  <Fragment>\r\n                    <li>\r\n                      <Link to=\"/login\">Login</Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/Register\">Register</Link>\r\n                    </li>\r\n                  </Fragment>\r\n                )}\r\n                <li>{ checkoutIcon }</li>\r\n                {isAuthenticated ? (\r\n                  <li\r\n                    ref={profileIcon}\r\n                    className={styles.userAvatarNavCtn}\r\n                    onClick={() => handleDropdown(dropDown, setDropdown)}\r\n                  >\r\n                    {userPic}\r\n                    <span className=\"userBorder\"></span>\r\n                  </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`${styles.navMenuCtn} ${\r\n          mobileMenu.open ? styles.navMenuActive : ''\r\n        }`}\r\n      ></div>\r\n      <div\r\n        className={`${styles.mobileMenuDiv} ${\r\n          mobileMenu.open ? styles.slide : ''\r\n        }`}\r\n        ref={dropMobileMenu}\r\n      >\r\n        <div className={styles.mobileMenuPicCtn}>\r\n          {userPic}\r\n          <div>\r\n            <h3>Hey {user && user.name ? user.name.split(' ')[0] : 'guest'},</h3>\r\n            <p>Welcome back</p>\r\n          </div>\r\n        </div>\r\n        <ul className={styles.navMenu}>\r\n          <li>\r\n            <Link to=\"/courses\">Courses</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/membership\">Membership</Link>\r\n          </li>\r\n          {isAuthenticated ? (\r\n            <>\r\n              <li>\r\n                <Link to=\"/profile\" onClick={() => handleDropdown(mobileMenu, setMobileMenu)}>Profile</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/profile/courses\" onClick={() => handleDropdown(mobileMenu, setMobileMenu)}>My Courses</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/profile/billing\" onClick={() => handleDropdown(mobileMenu, setMobileMenu)}>Billing</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/logout\">Logout</Link>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <li>\r\n                <Link to=\"/login\">Login</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/register\">Register</Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecondHeader;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\AdminSidebar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Loader.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\imageUpload.js",[],["406","407"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\payments.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\index.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\courseConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\membership.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\admin.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Navbar.js",[],["408","409"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\courses.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\auth.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\payment.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\admin.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\adminConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\UserProfile.js",["410","411"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, withRouter  } from 'react-router-dom';\r\nimport { getUserDetails } from '../../actions/auth';\r\nimport { getCourses } from '../../actions/courses';\r\nimport { enrollUserInCourse, removeCourseAction, getUserPurchases, deleteUsersAction } from '../../actions/admin';\r\n// import './Courses.css'\r\nimport './UserProfile.css'\r\n\r\nconst Courses = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { userPurchases } = admin;\r\n  const { _id, name, email, joined, active, purchases, courses, lastLogin } = admin.userDetails;\r\n  // console.log(_id)\r\n  const { subPage } = useParams();\r\n  // console.log(subPage);\r\n\r\n  const gettingCourses = useSelector(state => state.courses);\r\n  const { all } = gettingCourses;\r\n\r\n  const [courseSelected, setCourseSelected] = useState({\r\n    id: \"\",\r\n    name: \"\"\r\n  });\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [userCourses, setUserCourses] = useState([]);\r\n  const [userCoursesDetails, setUserCoursesDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserDetails(subPage));\r\n    dispatch(getUserPurchases(subPage));\r\n    dispatch(getCourses());\r\n    // theUserCoursesFunc();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setUserCourses(courses);\r\n  }, [courses]);\r\n\r\n  useEffect(() => {\r\n    theUserCoursesFunc();\r\n  }, [userCourses, all])\r\n\r\n  // const images = require.context('../../images/', true);\r\n  const images = require.context('../../../../uploads/users/', true);\r\n  let img;\r\n  try {\r\n    img = images(`./${subPage}.jpg`);\r\n  } catch (error) {\r\n    img = images(`./default.png`);\r\n  }\r\n\r\n  const date = new Date(joined);\r\n  const userJoined = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n  const allPurchases = userPurchases.map((purchase, i) => {\r\n    const date = new Date(purchase.date);\r\n    const newDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    const products = purchase.productName.map((product, i) => {\r\n      console.log(product)\r\n      return <><span>{product}</span>{purchase.productName.length - 1 !== i ? <hr /> : \"\"}</>\r\n    })\r\n\r\n    return (\r\n      <tr key={i}>\r\n        <td>{newDate}</td>\r\n        <td>{purchase.price}</td>\r\n        <td>None</td>\r\n        <td>{purchase.price}</td>\r\n        <td>{products}</td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  const allCourses = all.map((course, i) => {\r\n    return <option key={i} value={`${course._id},${course.name}`}>{course.name}</option>\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const valueSplit = e.target.value.split(\",\")\r\n    setCourseSelected({\r\n      id: valueSplit[0],\r\n      name: valueSplit[1]\r\n    });\r\n    setModalText({\r\n      ...modalText,\r\n      title: \"Enroll user in course\",\r\n      body: `Are you sure you want to enrol <b>${name}</b> in the following course?`,\r\n      action: \"adding\"\r\n    });\r\n\r\n    handleShow();\r\n  }\r\n\r\n  const modalAction = () => {\r\n    if (modalText.action === \"adding\") {\r\n      dispatch(enrollUserInCourse(courseSelected.id, _id));\r\n    } else if (modalText.action === \"removing\") {\r\n      dispatch(removeCourseAction(courseSelected.id, _id));\r\n    } else if(modalText.action === \"deleteUser\" ) {\r\n      dispatch(deleteUsersAction(modalText));\r\n      history.push(\"/admin/users\");\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n  const theUserCoursesFunc = () => {\r\n    console.log(\"calling theUserCoursesFunc\");\r\n    console.log(userCourses);\r\n    console.log(all);\r\n    let courses = [];\r\n    if (userCourses && userCourses.length > 0) {\r\n      for (let i = 0; i < all.length; i++) {\r\n        for (let j = 0; j < userCourses.length; j++) {\r\n          if (all[i]._id == userCourses[j]) {\r\n            courses = [...courses, all[i]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(\"THE COURSES ARE\");\r\n    console.log(courses);\r\n    setUserCoursesDetails(courses);\r\n  }\r\n\r\n  const removeCourse = (courseId, courseName) => {\r\n    // dispatch(removeCourseAction(courseId, userId));\r\n    setCourseSelected({\r\n      id: courseId,\r\n      name: courseName\r\n    });\r\n    setModalText({\r\n      ...modalText,\r\n      title: \"Delete course from user\",\r\n      body: \"Are you sure you want to delete the course \" + courseName + \"?\",\r\n      action: \"removing\"\r\n    });\r\n    handleShow();\r\n  }\r\n\r\n  const displayUserCourses = userCoursesDetails.map((course, i) => {\r\n    return (\r\n      <tr key={i}>\r\n        <td>{course.name}</td>\r\n        <td onClick={() => removeCourse(course._id, course.name)}><i className=\"fas fa-trash-alt\"></i></td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  const deleteUser = () => {\r\n    setModalText({\r\n      title: \"Delete user\",\r\n      action: \"deleteUser\",\r\n      body: \"Are you sure you want to delete the user \" + name,\r\n      users: [admin.userDetails]\r\n    });\r\n    handleShow();\r\n  }\r\n\r\n  const userLastLogin = new Date(lastLogin);\r\n  const userLastLoginDate = `${userLastLogin.getDate()}/${userLastLogin.getMonth() + 1}/${userLastLogin.getFullYear()}`;\r\n\r\n  console.log(userCoursesDetails);\r\n  console.log(userCourses);\r\n  return (\r\n    <>\r\n      <div className=\"adminCtn col-xl-10\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <img className=\"userAvatar\" src={img.default} style={{ width: \"100%\" }} alt=\"user avatar\" />\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <div className=\"card userCard\">\r\n              <div className=\"userColDivider\">\r\n                <h6>Name</h6>\r\n                <h4>{name}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Email</h6>\r\n                <h4>{email}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Profile Status</h6>\r\n                <h4>{active}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Account Created</h6>\r\n                <h4>{userJoined}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Last Login</h6>\r\n                <h4>{userLastLoginDate}</h4>\r\n              </div>\r\n              <div className=\"userColDivider\">\r\n                <h6>Total Purchases</h6>\r\n                <h4>${purchases} USD</h4>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <h4>Purchase History</h4>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>DATE</th>\r\n                  <th>FULL PRICE</th>\r\n                  <th>DISCOUNTS</th>\r\n                  <th>SALE PRICE</th>\r\n                  <th>PRODUCT</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {allPurchases.reverse()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <h4>User Courses</h4>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <div className=\"card userCard\">\r\n              <table>\r\n                <tbody>\r\n                  {displayUserCourses}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <h4>Enroll In Course</h4>\r\n            <p>Manually enroll this user in a new course. Users are not charged for manual enrollments.</p>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <div className=\"card userCard\">\r\n\r\n              <select defaultValue={'DEFAULT'} onChange={handleChange}>\r\n                <option value=\"DEFAULT\" disabled>Select course</option>\r\n                {allCourses}\r\n              </select>\r\n              {/* <button onClick={enrollUser}>Enroll</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"offset-md-2 col-10\">\r\n            <button onClick={deleteUser} className=\"btn btn-danger\">Delete User</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{modalText.body}</p>\r\n\r\n          <p><b>{courseSelected.name}</b></p>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={modalAction}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Courses);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Sales.js",["412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allUsersAction } from '../../actions/admin';\r\nimport { getSalesAction } from '../../actions/admin';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './AllUsers.css'\r\n\r\nconst Sales = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { token } = auth;\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { sales } = admin;\r\n\r\n  const [stateUsers, setStateUsers] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [userSelected, setUserSelected] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const [salesState, setSalesState] = useState([]);\r\n  const [pageSales, setPageSales] = useState({\r\n    salesPerPage: 2,\r\n    values: [],\r\n    number: 1,\r\n    firstPage: 0,\r\n    lastPage: 1\r\n  });\r\n\r\n  // const [orderState, setOrderState] = useState({\r\n  //   orderName: \"\",\r\n  //   asc: false\r\n  // })\r\n\r\n  useEffect(() => {\r\n    dispatch(getSalesAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSalesState(sales);\r\n\r\n  }, [sales])\r\n\r\n  useEffect(() => {\r\n    setPageSales({\r\n      ...pageSales,\r\n      values: paginate(salesState, pageSales.salesPerPage, 1),\r\n      lastPage: paginate(salesState, pageSales.salesPerPage, pageSales.number + 1).length\r\n    });\r\n\r\n  }, [salesState]);\r\n\r\n  const allSales = pageSales.values.map((sale, i) => {\r\n    const saleDate = new Date(sale.date);\r\n    const newSaleDate = `${saleDate.getDate()}/${saleDate.getMonth() + 1}/${saleDate.getFullYear()}`;\r\n    return (\r\n      <tr key={i}>\r\n        <td>{newSaleDate}</td>\r\n        <td>\r\n          <Link to={`/admin/user/${sale.user}`}>{sale.userEmail}</Link>\r\n        </td>\r\n        {/* <td>{sale.productName}</td> */}\r\n        <td>\r\n          {sale.productName.map((name, i) => {\r\n            let comma =\", \";\r\n            if(i + 1 === sale.productName.length) {\r\n              comma = \"\";\r\n            }\r\n            return <div key={i}>{name + comma}</div> ;\r\n          }) }\r\n        </td>\r\n        <td>{sale.coupon ? sale.coupon : \"-\"}</td>\r\n        <td>{sale.price}</td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  function paginate(array, page_size, page_number) {\r\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n  }\r\n\r\n  console.log(paginate(salesState, 1, 0));\r\n  // console.log(paginate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 4, 1));\r\n\r\n  // const paginationButtons = salesState.map((sale, i) => {\r\n  //   return <li key={i} class=\"page-item\"><a onClick={() => setPageSales(paginate(salesState, 1, i + 1))} class=\"page-link\" href=\"#\">{i+1}</a></li>\r\n  // })\r\n\r\n  // useEffect(() => {\r\n  //   if (!loading) {\r\n  //     setStateUsers(users);\r\n  //   }\r\n  // }, [loading]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(stateUsers);\r\n  //   const findSelected = stateUsers.find(user => {\r\n  //     console.log(user);\r\n  //     return user.selected\r\n  //   });\r\n  //   console.log(findSelected);\r\n\r\n  //   setUserSelected(Boolean(findSelected));\r\n  // }, [stateUsers])\r\n\r\n  // const selectUsers = (usersSelected, event) => {\r\n  //   // console.log(stateUsers);\r\n  //   console.log(event.target.type)\r\n  //   if (usersSelected === \"all\") {\r\n  //     const selectAllUsers = stateUsers.map((user, i) => {\r\n  //       // if () {\r\n  //         // console.log(user);\r\n  //         // console.log(selectAll)\r\n  //         return {\r\n  //           ...user,\r\n  //           selected: !selectAll,\r\n  //           key: i\r\n  //         }\r\n  //       // }\r\n  //     });\r\n\r\n  //     const filteredUsers = selectAllUsers.filter(user => {\r\n  //       return user.role != \"admin\";\r\n  //     });\r\n\r\n  //     console.log(filteredUsers)\r\n  //     setStateUsers(filteredUsers);\r\n  //     setSelectAll(!selectAll);\r\n  //   } else {\r\n  //     const selectAllCopy = [...stateUsers];\r\n  //     // selectAllCopy[usersSelected].selected = !selectAllCopy[usersSelected].selected;\r\n  //     selectAllCopy[usersSelected].selected =  event.target.checked;\r\n\r\n  //     setStateUsers(selectAllCopy);\r\n  //   }\r\n\r\n  // }\r\n\r\n  // const allUsers = stateUsers.map((user, i) => {\r\n  //   if (user.role !== \"admin\") {\r\n  //     const joinedDate = new Date(user.joined);\r\n  //     const newJoinedDate = `${joinedDate.getDate()}/${joinedDate.getMonth() + 1}/${joinedDate.getFullYear()}`;\r\n  //     // console.log(\"Inside all Users\");\r\n  //     // console.log(user.selected)\r\n  //     return (\r\n  //       <tr key={user._id}>\r\n  //         <td>\r\n  //           <input\r\n  //             type=\"checkbox\"\r\n  //             checked={user.selected == null ? false : user.selected}\r\n  //             value={user.selected}\r\n  //             onChange={(e) => { selectUsers(i, e) }}\r\n  //           />\r\n  //           <div className=\"allUsersTableDiv\"><Link to={`/admin/user/${user._id}`}>{user.name}</Link></div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">{user.email}</div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">{user.active}</div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">${user.purchases} USD</div>\r\n  //         </td>\r\n  //         <td>\r\n  //           <div className=\"allUsersTableDiv\">{newJoinedDate}</div>\r\n  //         </td>\r\n  //       </tr>\r\n  //     )\r\n  //   }\r\n  // })\r\n\r\n  // const orderBy = (order) => {\r\n  //   console.log(\"ordering by date\");\r\n  //   users.sort(function (a, b) {\r\n  //     // Turn your strings into dates, and then subtract them\r\n  //     // to get a value that is either negative, positive, or zero.\r\n  //     if (order === \"date\") {\r\n  //       if (orderState.orderName === \"date\" && orderState.asc) {\r\n  //         return new Date(a.joined) - new Date(b.joined);\r\n  //       } else {\r\n  //         return new Date(b.joined) - new Date(a.joined);\r\n  //       }\r\n  //     } else if (order === \"purchases\") {\r\n  //       if (orderState.orderName === \"purchases\" && orderState.asc) {\r\n  //         return a.purchases - b.purchases;\r\n  //       } else {\r\n  //         return b.purchases - a.purchases;\r\n  //       }\r\n  //     } else if (order === \"email\") {\r\n  //       if (orderState.orderName === \"email\" && orderState.asc) {\r\n  //         if (a.email > b.email) { return -1; }\r\n  //         if (a.email < b.email) { return 1; }\r\n  //       } else {\r\n  //         if (a.email < b.email) { return -1; }\r\n  //         if (a.email > b.email) { return 1; }\r\n  //       }\r\n  //       return 0;\r\n  //     } else if (order === \"name\") {\r\n  //       let nameA = a.name.toLowerCase();\r\n  //       let nameB = b.name.toLowerCase();\r\n\r\n  //       if (orderState.orderName === \"name\" && orderState.asc) {\r\n  //         if (nameA > nameB) { return -1; }\r\n  //         if (nameA < nameB) { return 1; }\r\n  //       } else {\r\n  //         if (nameA < nameB) { return -1; }\r\n  //         if (nameA > nameB) { return 1; }\r\n  //       }\r\n\r\n  //       return 0;\r\n  //     } else if (order === \"active\") {\r\n  //       let activeA = a.active.toLowerCase();\r\n  //       let activeB = b.active.toLowerCase();\r\n\r\n  //       if (orderState.orderName === \"active\" && orderState.asc) {\r\n  //         if (activeA < activeB) { return -1; }\r\n  //         if (activeA > activeB) { return 1; }\r\n  //       } else {\r\n  //         if (activeA > activeB) { return -1; }\r\n  //         if (activeA < activeB) { return 1; }\r\n  //       }\r\n  //       return 0;\r\n  //     }\r\n\r\n  //   });\r\n\r\n  //   setStateUsers(users);\r\n  //   // setTest({ loading: false })\r\n  //   setOrderState({\r\n  //     orderName: order,\r\n  //     asc: !orderState.asc\r\n  //   })\r\n  // }\r\n\r\n  // const handleClose = () => setShow(false);\r\n  // const handleShow = () => setShow(true);\r\n\r\n  // const handleChange = (e) => {\r\n  //   console.log(e.target.value);\r\n\r\n  //   const selectedUsers = stateUsers.filter((user) => {\r\n  //     return user.selected\r\n  //   });\r\n\r\n  //   console.log(selectedUsers)\r\n\r\n  //   if (selectedUsers.length > 0) {\r\n  //     let title = \"\";\r\n  //     // let users = selectedUsers.map(user => {\r\n  //     //   return user._id;\r\n  //     // })\r\n  //     if (e.target.value === \"activate\") {\r\n  //       title = \"Activate Users\"\r\n  //     } else if (e.target.value === \"delete\") {\r\n  //       title = \"Delete Users\"\r\n  //     }\r\n\r\n  //     setModalText({\r\n  //       title: title,\r\n  //       action: e.target.value,\r\n  //       users: selectedUsers\r\n  //     });\r\n  //     handleShow();\r\n  //   }\r\n  // }\r\n\r\n  // const saveChanges = () => {\r\n  //   console.log(\"inside save changes\");\r\n  //   if (modalText.action === \"activate\") {\r\n  //     dispatch(saveUsersAction(modalText));\r\n  //   } else if (modalText.action === \"delete\") {\r\n  //     dispatch(deleteUsersAction(modalText));\r\n  //   }\r\n  //   setShow(false);\r\n  // }\r\n\r\n  // console.log(selectAll);\r\n  // console.log(modalText);\r\n  // console.log(stateUsers)\r\n  const movePage = (direction) => {\r\n    if (direction === \"previous\") {\r\n      setPageSales({\r\n        ...pageSales,\r\n        values: paginate(salesState, pageSales.salesPerPage, pageSales.number - 1),\r\n        number: pageSales.number - 1,\r\n        firstPage: paginate(salesState, pageSales.salesPerPage, pageSales.number - 2).length,\r\n        lastPage: paginate(salesState, pageSales.salesPerPage, pageSales.number).length\r\n      })\r\n    } else {\r\n      console.log(pageSales.number);\r\n      console.log(paginate(salesState, pageSales.salesPerPage, pageSales.number).length);\r\n      setPageSales({\r\n        ...pageSales,\r\n        values: paginate(salesState, pageSales.salesPerPage, pageSales.number + 1),\r\n        number: pageSales.number + 1,\r\n        firstPage: paginate(salesState, pageSales.salesPerPage, pageSales.number).length,\r\n        lastPage: paginate(salesState, pageSales.salesPerPage, pageSales.number + 2).length\r\n      })\r\n    }\r\n  }\r\n\r\n  // console.log(salesState);\r\n  console.log(pageSales);\r\n\r\n  // const checkEndPages = () => {\r\n  //   return paginate(salesState, 1, pageSales.number + 1).length\r\n  // }\r\n\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <h5 className=\"mb-5\">Showing {pageSales.number === 1 ? 1 : pageSales.number * pageSales.salesPerPage - 1} {(salesState.length <= pageSales.number * pageSales.salesPerPage) ? \"\" : \" - \" + pageSales.number * pageSales.salesPerPage } of {salesState.length} Transactions</h5>\r\n          <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Student</th>\r\n                <th>Product</th>\r\n                <th>Discount</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* {allUsers} */}\r\n              {allSales}\r\n            </tbody>\r\n            {/* <h1>{!test.loading ? \"Working\" : null}</h1> */}\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <nav aria-label=\"Page navigation example\" className=\"mt-3\">\r\n            <ul className=\"pagination justify-content-center\">\r\n              <li className={pageSales.firstPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"previous\")} className=\"page-link\" href=\"#\">Previous</a>\r\n              </li>\r\n              <li className={pageSales.lastPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <a onClick={() => movePage(\"next\")} \r\n                  className=\"page-link\" \r\n                  href=\"#\">Next</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to {modalText.action} the following users?</p>\r\n          {modalText.users.map((user,i) => {\r\n            return <p key={i}><b>{user.name}</b></p>;\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sales;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Coupons.js",["430","431","432","433","434","435","436","437","438"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allUsersAction } from '../../actions/admin';\r\nimport { saveUsersAction, deleteUsersAction } from '../../actions/admin';\r\nimport { getCouponsAction } from '../../actions/admin';\r\n// import ModalWindow from '../utils/ModalWindow';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Col, Table, Button, Modal } from 'react-bootstrap';\r\nimport './AllUsers.css';\r\nimport './Coupons.css'\r\n\r\nconst Coupon = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const admin = useSelector(state => state.admin);\r\n  const { users, loading, coupons } = admin;\r\n\r\n  const [stateUsers, setStateUsers] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [userSelected, setUserSelected] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [modalText, setModalText] = useState({\r\n    title: \"\",\r\n    action: \"\",\r\n    users: [],\r\n  });\r\n\r\n  const [orderState, setOrderState] = useState({\r\n    orderName: \"\",\r\n    asc: false\r\n  });\r\n\r\n  const [pageUsers, setPageUsers] = useState({\r\n    usersPerPage: 3,\r\n    values: [],\r\n    number: 1,\r\n    firstPage: 0,\r\n    lastPage: 1\r\n  });\r\n\r\n  const removeAdminFromUsers = users.filter(user => {\r\n    return user.role !== \"admin\";\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(allUsersAction());\r\n    dispatch(getCouponsAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setStateUsers(removeAdminFromUsers);\r\n    }\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    // console.log(stateUsers);\r\n    const findSelected = stateUsers.find(user => {\r\n      // console.log(user);\r\n      return user.selected\r\n    });\r\n    // console.log(findSelected);\r\n\r\n    setUserSelected(Boolean(findSelected));\r\n\r\n    setPageUsers({\r\n      ...pageUsers,\r\n      values: paginate(stateUsers, pageUsers.usersPerPage, 1),\r\n      number: 1,\r\n      firstPage: 0,\r\n      // lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1).length\r\n      lastPage: 1\r\n    });\r\n  }, [stateUsers]);\r\n\r\n\r\n  function paginate(array, page_size, page_number) {\r\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n  }\r\n\r\n  const selectUsers = (usersSelected, event) => {\r\n    // console.log(stateUsers);\r\n    console.log(event.target.type)\r\n    if (usersSelected === \"all\") {\r\n      const selectAllUsers = stateUsers.map((user, i) => {\r\n        // if () {\r\n        // console.log(user);\r\n        // console.log(selectAll)\r\n        return {\r\n          ...user,\r\n          selected: !selectAll,\r\n          key: i\r\n        }\r\n        // }\r\n      });\r\n\r\n      const filteredUsers = selectAllUsers.filter(user => {\r\n        return user.role != \"admin\";\r\n      });\r\n\r\n      console.log(filteredUsers)\r\n      setStateUsers(filteredUsers);\r\n      setSelectAll(!selectAll);\r\n    } else {\r\n      const selectAllCopy = [...stateUsers];\r\n      // selectAllCopy[usersSelected].selected = !selectAllCopy[usersSelected].selected;\r\n      selectAllCopy[usersSelected].selected = event.target.checked;\r\n\r\n      setStateUsers(selectAllCopy);\r\n    }\r\n\r\n  }\r\n\r\n  const allUsers = pageUsers.values.map((user, i) => {\r\n    if (user.role !== \"admin\") {\r\n      const today = new Date();\r\n      const joinedDate = new Date(user.joined);\r\n      const newJoinedDate = `${('0' + joinedDate.getDate()).slice(-2)}/${('0' + joinedDate.getMonth() + 1).slice(-2)}/${joinedDate.getFullYear()}`;\r\n      // console.log(\"Inside all Users\");\r\n      // console.log(user.selected)\r\n      const lastLogin = new Date(user.lastLogin);\r\n      const lastLoginDate = () => {\r\n        if (today.getDate() === lastLogin.getDate() &&\r\n          today.getMonth() === lastLogin.getMonth() &&\r\n          today.getFullYear() === lastLogin.getFullYear()\r\n        ) {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - Today`\r\n        } else {\r\n          return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - ${lastLogin.getDate()}/${lastLogin.getMonth() + 1}/${lastLogin.getFullYear()}`;\r\n        }\r\n      }\r\n      return (\r\n        <tr key={user._id}>\r\n          <td>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={user.selected == null ? false : user.selected}\r\n              value={user.selected}\r\n              onChange={(e) => { selectUsers(i, e) }}\r\n            />\r\n            <div className=\"allUsersTableDiv\"><Link to={`/admin/user/${user._id}`}>{user.name}</Link></div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.email}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{user.active}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">${user.purchases} USD</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{newJoinedDate}</div>\r\n          </td>\r\n          <td>\r\n            <div className=\"allUsersTableDiv\">{lastLoginDate()}</div>\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n  })\r\n\r\n  const orderBy = (order) => {\r\n    console.log(\"ordering by date\");\r\n    removeAdminFromUsers.sort(function (a, b) {\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      if (order === \"date\") {\r\n        if (orderState.orderName === \"date\" && orderState.asc) {\r\n          return new Date(a.joined) - new Date(b.joined);\r\n        } else {\r\n          return new Date(b.joined) - new Date(a.joined);\r\n        }\r\n      } else if (order === \"purchases\") {\r\n        if (orderState.orderName === \"purchases\" && orderState.asc) {\r\n          return a.purchases - b.purchases;\r\n        } else {\r\n          return b.purchases - a.purchases;\r\n        }\r\n      } else if (order === \"email\") {\r\n        if (orderState.orderName === \"email\" && orderState.asc) {\r\n          if (a.email > b.email) { return -1; }\r\n          if (a.email < b.email) { return 1; }\r\n        } else {\r\n          if (a.email < b.email) { return -1; }\r\n          if (a.email > b.email) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"name\") {\r\n        let nameA = a.name.toLowerCase();\r\n        let nameB = b.name.toLowerCase();\r\n\r\n        if (orderState.orderName === \"name\" && orderState.asc) {\r\n          if (nameA > nameB) { return -1; }\r\n          if (nameA < nameB) { return 1; }\r\n        } else {\r\n          if (nameA < nameB) { return -1; }\r\n          if (nameA > nameB) { return 1; }\r\n        }\r\n\r\n        return 0;\r\n      } else if (order === \"active\") {\r\n        let activeA = a.active.toLowerCase();\r\n        let activeB = b.active.toLowerCase();\r\n\r\n        if (orderState.orderName === \"active\" && orderState.asc) {\r\n          if (activeA < activeB) { return -1; }\r\n          if (activeA > activeB) { return 1; }\r\n        } else {\r\n          if (activeA > activeB) { return -1; }\r\n          if (activeA < activeB) { return 1; }\r\n        }\r\n        return 0;\r\n      } else if (order === \"lastLogin\") {\r\n        if (orderState.lastLogin === \"date\" && orderState.asc) {\r\n          return new Date(a.lastLogin) - new Date(b.lastLogin);\r\n        } else {\r\n          return new Date(b.lastLogin) - new Date(a.lastLogin);\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    setStateUsers(removeAdminFromUsers);\r\n    // setTest({ loading: false })\r\n    setOrderState({\r\n      orderName: order,\r\n      asc: !orderState.asc\r\n    })\r\n  }\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    const selectedUsers = stateUsers.filter((user) => {\r\n      return user.selected\r\n    });\r\n\r\n    console.log(selectedUsers)\r\n\r\n    if (selectedUsers.length > 0) {\r\n      let title = \"\";\r\n      // let users = selectedUsers.map(user => {\r\n      //   return user._id;\r\n      // })\r\n      if (e.target.value === \"activate\") {\r\n        title = \"Activate Users\"\r\n      } else if (e.target.value === \"delete\") {\r\n        title = \"Delete Users\"\r\n      }\r\n\r\n      setModalText({\r\n        title: title,\r\n        action: e.target.value,\r\n        users: selectedUsers\r\n      });\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  const saveChanges = () => {\r\n    console.log(\"inside save changes\");\r\n    if (modalText.action === \"activate\") {\r\n      dispatch(saveUsersAction(modalText));\r\n    } else if (modalText.action === \"delete\") {\r\n      dispatch(deleteUsersAction(modalText));\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n  const movePage = (direction) => {\r\n    if (direction === \"previous\") {\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 1),\r\n        number: pageUsers.number - 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number - 2).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length\r\n      })\r\n    } else {\r\n      console.log(pageUsers.number);\r\n      console.log(paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length);\r\n      setPageUsers({\r\n        ...pageUsers,\r\n        values: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 1),\r\n        number: pageUsers.number + 1,\r\n        firstPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number).length,\r\n        lastPage: paginate(stateUsers, pageUsers.usersPerPage, pageUsers.number + 2).length\r\n      })\r\n    }\r\n  }\r\n\r\n  const findUser = (e) => {\r\n    console.log(\"find a user\");\r\n    // console.log(e.target.value);\r\n    const text = e.target.value.toLowerCase();\r\n    console.log(text);\r\n    const filteredusers = removeAdminFromUsers.filter((user) => {\r\n      console.log(user.name)\r\n      return (user.name.toLowerCase().indexOf(text) > -1 || user.email.toLowerCase().indexOf(text) > -1);\r\n    })\r\n\r\n    console.log(filteredusers);\r\n    setStateUsers(filteredusers);\r\n  }\r\n\r\n  const allCoupons = coupons.map((coupon, i) => {\r\n\r\n    const today = new Date();\r\n    const couponDate = new Date(coupon.date);\r\n    const newCouponDate = `${('0' + couponDate.getDate()).slice(-2)}/${('0' + couponDate.getMonth() + 1).slice(-2)}/${couponDate.getFullYear()}`;\r\n    // console.log(\"Inside all Users\");\r\n    // console.log(user.selected)\r\n    let emails = [];\r\n    let courses = [];\r\n\r\n    if (coupon.restricted.length > 0) {\r\n      for (let i = 0; i < coupon.restricted.length; i++) {\r\n        emails.push(coupon.restricted[i].email);\r\n      }\r\n    }\r\n\r\n    const allEmails = emails.length > 0 && emails.map((email, i) => {\r\n      return (\r\n        <>\r\n          <span>{email}</span>\r\n          { i === (emails.length-1) ? \"\" : <hr className=\"my-2\" />}\r\n        </>\r\n      )\r\n    });\r\n\r\n    for (let i = 0; i < coupon.courses.length; i++) {\r\n      courses.push(coupon.courses[i].name);\r\n    }\r\n\r\n    const allCourses = courses.length > 0 && courses.map((course, i) => {\r\n      return (\r\n        <>\r\n          <span key={i}>{course}</span>\r\n          { i === (courses.length-1) ? \"\" : <hr className=\"my-2\" />}\r\n        </>\r\n      )\r\n    });\r\n\r\n    const lastLogin = new Date(coupon.lastLogin);\r\n    const lastLoginDate = () => {\r\n      if (today.getDate() === lastLogin.getDate() &&\r\n        today.getMonth() === lastLogin.getMonth() &&\r\n        today.getFullYear() === lastLogin.getFullYear()\r\n      ) {\r\n        return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - Today`\r\n      } else {\r\n        return `${('0' + lastLogin.getHours()).slice(-2)}:${('0' + lastLogin.getMinutes()).slice(-2)} - ${lastLogin.getDate()}/${lastLogin.getMonth() + 1}/${lastLogin.getFullYear()}`;\r\n      }\r\n    }\r\n    return (\r\n      <tr key={coupon._id}>\r\n        <td>\r\n          <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={coupon.selected == null ? false : coupon.selected}\r\n            value={coupon.selected}\r\n            onChange={(e) => { selectUsers(i, e) }}\r\n            className=\"mr-2\"\r\n          />\r\n          <div className=\"allUsersTableDiv\"><Link to={`/admin/coupons/edit/${coupon._id}`}>{coupon.code}</Link></div>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{coupon.name}</div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{newCouponDate}</div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{coupon.used}</div>\r\n        </td>\r\n        <td className=\"px-3\">\r\n          <div className=\"allUsersTableDiv\">{coupon.available}</div>\r\n        </td>\r\n        <td className=\"px-3\">{allCourses}</td>\r\n        <td className=\"px-3\">{allEmails.length > 0 ? allEmails : \"No Restrictions\"}</td>\r\n        <td className=\"px-3\">{coupon.active ? \"True\" : \"False\" }</td>\r\n      </tr>\r\n    )\r\n\r\n  })\r\n\r\n  return (\r\n    <div className=\"allUsersCtn container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col allCouponsTable\">\r\n          <Link to=\"/admin/coupons/new\" className=\"btn btn-primary\">New Coupon</Link>\r\n          <div className=\"row\">\r\n            <Col sm=\"5\">\r\n              <Form.Control className=\"my-3 input-md\" type=\"text\" placeholder=\"Search coupons\" onChange={findUser} />\r\n            </Col>\r\n          </div>\r\n          <Table striped bordered hover responsive size=\"sm\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={(e) => { selectUsers(\"all\", e) }}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {userSelected ? (\r\n                    <select defaultValue={'DEFAULT'} onChange={handleChange}>\r\n                      <option value=\"DEFAULT\" disabled>Bulk Actions</option>\r\n                      <option value=\"activate\">Activate</option>\r\n                      <option value=\"delete\">Delete</option>\r\n                    </select>\r\n                  ) : (\r\n                      <span onClick={() => orderBy(\"name\")}>Codes</span>\r\n                    )}\r\n                </th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"email\")}>Name</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"active\")}>Expires</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"purchases\")}>Used</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"date\")}>Available</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"lastLogin\")}>Courses</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"lastLogin\")}>Emails</th>\r\n                <th className=\"px-3\" onClick={() => orderBy(\"lastLogin\")}>Active</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allCoupons.length > 0 ? allCoupons : <tr className=\"my-3\"><td>No Users found</td></tr>}\r\n            </tbody>\r\n            {/* <h1>{!test.loading ? \"Working\" : null}</h1> */}\r\n          </Table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <nav aria-label=\"Page navigation example\" className=\"mt-3\">\r\n            <ul className=\"pagination justify-content-center\">\r\n              <li className={pageUsers.firstPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <Button onClick={() => movePage(\"previous\")} className=\"page-link\" href=\"#\">Previous</Button>\r\n              </li>\r\n              <li className={pageUsers.lastPage < 1 ? \"disabled page-item\" : \"page-item\"}>\r\n                <Button onClick={() => movePage(\"next\")}\r\n                  className=\"page-link\"\r\n                  href=\"#\">Next</Button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalText.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to {modalText.action} the following users?</p>\r\n          {modalText.users.map((user, i) => {\r\n            return <p key={i}><b>{user.name}</b></p>;\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coupon\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\NewCoupon.js",["439","440","441"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCouponAction } from '../../actions/admin';\r\nimport { getCourses } from '../../actions/courses'\r\n\r\nimport { Button} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, InputGroup, Dropdown, FormControl } from 'react-bootstrap';\r\nimport './AllUsers.css';\r\nimport './Coupons.css'\r\n\r\nconst NewCoupon = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const courses = useSelector(state => state.courses);\r\n  const { all } = courses;\r\n\r\n  const [coursesState, setCoursesState] = useState([]);\r\n  const [coupon, setCoupon] = useState({\r\n    amountType: \"percentage\",\r\n    amount: \"\",\r\n    code: \"\",\r\n    name: \"\",\r\n    expires: \"\",\r\n    available: \"\",\r\n    emails: [],\r\n    active: false\r\n  });\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const theCourses = all.map((course, i) => {\r\n      return {\r\n        courseId: course._id,\r\n        name: course.name,\r\n        selected: false,\r\n        key: i\r\n      }\r\n    })\r\n\r\n    theCourses.push({ name: \"All Courses\", selected: false });\r\n    setCoursesState(theCourses);\r\n\r\n  }, [all]);\r\n\r\n  // The forwardRef is important!!\r\n  // Dropdown needs access to the DOM node in order to position the Menu\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n      className=\"mb-2 selectCourses form-control btn-primary\"\r\n    >\r\n      {children}\r\n    &#x25bc;\r\n    </a>\r\n  ));\r\n\r\n  // forwardRef again here!\r\n  // Dropdown needs access to the DOM of the Menu to measure it\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n\r\n  const selectCourse = (i) => {\r\n\r\n    const coursesCopy = [...coursesState];\r\n    coursesCopy[i].selected = !coursesCopy[i].selected;\r\n\r\n    setCoursesState(coursesCopy);\r\n  }\r\n\r\n  const coursesSelected = coursesState.map((course, i) => {\r\n    return course.selected ? <Button key={i} variant=\"warning\" className=\"my-4 mr-4\" onClick={() => selectCourse(i)}>{course.name}</Button> : \"\"\r\n  })\r\n\r\n  const allCourses = coursesState.map((course, i) => {\r\n    return (\r\n      <Dropdown.Item active={course.selected ? \"active\" : \"\"} key={i} eventKey={i} onClick={() => selectCourse(i)}>{course.name}</Dropdown.Item>\r\n    )\r\n  });\r\n\r\n  const coursesToCoupon = coursesState.filter((course, i) => {\r\n    return course.selected;\r\n  });\r\n\r\n  const couponUpdate = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      [e.target.name]: e.target.name === \"active\" ? e.target.checked : e.target.value\r\n    })\r\n  }\r\n\r\n  const submitCoupon = (e) => {\r\n    e.preventDefault();\r\n    if (coursesToCoupon.length < 1) {\r\n      console.log(\"Need to select courses\");\r\n    }\r\n    dispatch(createCouponAction(coursesToCoupon, coupon));\r\n    console.log(coupon);\r\n  }\r\n\r\n  const typingEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  const addEmails = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      emails: [...coupon.emails, {email}]\r\n    })\r\n  }\r\n\r\n  const allEmails = coupon.emails.map((coupon, i) => {\r\n    return <Button className=\"mr-3\" key={i} variant=\"outline-primary\">{coupon.email}</Button>\r\n  })\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <Link to=\"/admin/coupons\">Go back</Link>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              New Coupon\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={submitCoupon}>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle as={CustomToggle} id=\"dropdown-basic\">\r\n                    Select courses\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu as={CustomMenu}>\r\n                    {allCourses}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <div>{coursesSelected}</div>\r\n\r\n                <select className=\"form-control\" defaultValue={'DEFAULT'} onChange={couponUpdate} name=\"amountType\">\r\n                  <option value=\"DEFAULT\" disabled>Select Amount Type</option>\r\n                  <option value=\"dollars\">Dollars</option>\r\n                  <option value=\"percentage\">Percentage</option>\r\n                </select>\r\n                <Form.Control name=\"amount\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Enter amount\" onChange={couponUpdate} />\r\n                \r\n                <Form.Control name=\"code\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Coupon Code\" onChange={couponUpdate} />\r\n                <Form.Control name=\"name\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Coupon Name\" onChange={couponUpdate} />\r\n                <Form.Control name=\"expires\" required className=\"my-3 input-md\" type=\"date\" placeholder=\"Expires\" onChange={couponUpdate} />\r\n                <Form.Control name=\"available\" required className=\"my-3 input-md\" type=\"text\" placeholder=\"Number Available\" onChange={couponUpdate} />\r\n             \r\n                <InputGroup className=\"my-3 input-md\">\r\n                  <FormControl\r\n                    placeholder=\"Add Email\"\r\n                    aria-label=\"Add Email\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    placeholder=\"Private Email\"\r\n                    name=\"emails\"\r\n                    onChange={typingEmail}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\" onClick={addEmails}>Add Email</Button>\r\n                  </InputGroup.Append>\r\n                  \r\n                </InputGroup>\r\n                <div className=\"my-3\">{allEmails}</div>\r\n\r\n                <Form.Group id=\"formGridCheckbox\">\r\n                  <Form.Check name=\"active\" type=\"checkbox\" label=\"Activate\" onChange={couponUpdate} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                  Create Coupon\r\n              </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewCoupon;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\EditCoupon.js",["442","443"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getCouponIdAction,\r\n  updateCouponAction,\r\n} from '../../actions/admin';\r\nimport { getCourses } from '../../actions/courses';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Form, InputGroup, Dropdown, FormControl } from 'react-bootstrap';\r\nimport './AllUsers.css';\r\nimport './Coupons.css';\r\n\r\nconst EditCoupon = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const courses = useSelector((state) => state.courses);\r\n  const { all } = courses;\r\n\r\n  const admin = useSelector((state) => state.admin);\r\n  const { coupon: theCoupon } = admin;\r\n\r\n  const [coursesState, setCoursesState] = useState([]);\r\n  const [coupon, setCoupon] = useState({\r\n    amountType: 'percentage',\r\n    amount: '',\r\n    code: '',\r\n    name: '',\r\n    expires: '',\r\n    available: '',\r\n    emails: [],\r\n    active: false,\r\n  });\r\n\r\n  const { courseTag: couponId } = useParams();\r\n\r\n  // console.log(couponId);\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n    dispatch(getCouponIdAction(couponId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getDate = new Date(theCoupon.date);\r\n    // console.log(getDate);\r\n    // console.log(typeof getDate);\r\n    if (getDate !== 'Invalid Date') {\r\n      const newDate = `${getDate.getFullYear()}-${(\r\n        '0' +\r\n        getDate.getMonth() +\r\n        1\r\n      ).slice(-2)}-${('0' + getDate.getDate()).slice(-2)}`;\r\n      // console.log(newDate);\r\n      // console.log(typeof newDate);\r\n      setCoupon({\r\n        ...coupon,\r\n        amount: theCoupon.amount,\r\n        code: theCoupon.code,\r\n        name: theCoupon.name,\r\n        expires: newDate ? newDate : '2020-12-05',\r\n        available: theCoupon.available,\r\n        emails: theCoupon.restricted ? theCoupon.restricted : [],\r\n        active: theCoupon.active,\r\n      });\r\n    }\r\n\r\n    const addSelectCourses = theCoupon.courses ? theCoupon.courses : [];\r\n    const coursesCopy = [...coursesState];\r\n\r\n    for (let i = 0; i < coursesCopy.length; i++) {\r\n      for (let j = 0; j < addSelectCourses.length; j++) {\r\n        if (coursesCopy[i].name === addSelectCourses[j].name) {\r\n          coursesCopy[i].selected = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    setCoursesState(coursesCopy);\r\n  }, [theCoupon]);\r\n\r\n  useEffect(() => {\r\n    const theCourses = all.map((course, i) => {\r\n      return {\r\n        courseId: course._id,\r\n        name: course.name,\r\n        selected: false,\r\n        key: i,\r\n      };\r\n    });\r\n\r\n    theCourses.push({ name: 'All Courses', selected: false });\r\n    setCoursesState(theCourses);\r\n  }, [all]);\r\n\r\n  // The forwardRef is important!!\r\n  // Dropdown needs access to the DOM node in order to position the Menu\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <Button\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n      className=\"mb-2 selectCourses form-control btn-primary\"\r\n    >\r\n      {children}\r\n      &#x25bc;\r\n    </Button>\r\n  ));\r\n\r\n  // forwardRef again here!\r\n  // Dropdown needs access to the DOM of the Menu to measure it\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value)\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n\r\n  const selectCourse = (i) => {\r\n    const coursesCopy = [...coursesState];\r\n    if(coursesCopy[i].name === \"All Courses\") {\r\n      for(let j=0; j < coursesCopy.length; j++ ) {\r\n        if(coursesCopy[j].name !== \"All Courses\") {\r\n          coursesCopy[j].selected = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    coursesCopy[i].selected = !coursesCopy[i].selected;\r\n    console.log(coursesCopy[i].name);\r\n    setCoursesState(coursesCopy);\r\n  };\r\n\r\n  const coursesSelected = coursesState.map((course, i) => {\r\n    return course.selected ? (\r\n      <Button\r\n        key={i}\r\n        variant=\"warning\"\r\n        className=\"my-4 mr-4\"\r\n        onClick={() => selectCourse(i)}\r\n      >\r\n        {course.name}\r\n      </Button>\r\n    ) : (\r\n      ''\r\n    );\r\n  });\r\n\r\n  const allCourses = coursesState.map((course, i) => {\r\n    return (\r\n      <Dropdown.Item\r\n        active={course.selected ? 'active' : ''}\r\n        key={i}\r\n        eventKey={i}\r\n        onClick={() => selectCourse(i)}\r\n      >\r\n        {course.name}\r\n      </Dropdown.Item>\r\n    );\r\n  });\r\n\r\n  const coursesToCoupon = coursesState.filter((course, i) => {\r\n    return course.selected;\r\n  });\r\n\r\n  const couponUpdate = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      [e.target.name]:\r\n        e.target.name === 'active' ? e.target.checked : e.target.value,\r\n    });\r\n  };\r\n\r\n  const typingEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const addEmails = (e) => {\r\n    setCoupon({\r\n      ...coupon,\r\n      emails: [...coupon.emails, { email }],\r\n    });\r\n  };\r\n\r\n  const removeEmails = (index) => {\r\n    const emailRemove =\r\n      coupon.emails.length > 0 &&\r\n      coupon.emails.filter((email, i) => {\r\n        return index !== i;\r\n      });\r\n\r\n    setCoupon({\r\n      ...coupon,\r\n      emails: emailRemove,\r\n    });\r\n  };\r\n\r\n  const allEmails =\r\n    coupon.emails.length > 0 &&\r\n    coupon.emails.map((coupon, i) => {\r\n      return (\r\n        <Button\r\n          className=\"mr-3\"\r\n          key={i}\r\n          variant=\"outline-primary\"\r\n          onClick={() => removeEmails(i)}\r\n        >\r\n          {coupon.email}\r\n        </Button>\r\n      );\r\n    });\r\n  console.log(coupon);\r\n\r\n  const updateCoupon = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateCouponAction(coursesToCoupon, coupon, couponId));\r\n  };\r\n  return (\r\n    <div className=\"allUsersCtn container\">\r\n      <div className=\"row\">\r\n        <div className=\"col allUsersTable\">\r\n          <Button variant=\"dark\" className=\"my-4\">\r\n            <Link to=\"/admin/coupons\">Go back</Link>\r\n          </Button>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Edit Coupon</div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={updateCoupon}>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle as={CustomToggle} id=\"dropdown-basic\">\r\n                    Select courses\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu as={CustomMenu}>{allCourses}</Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <div>{coursesSelected}</div>\r\n\r\n                <select\r\n                  className=\"form-control\"\r\n                  defaultValue={'DEFAULT'}\r\n                  onChange={couponUpdate}\r\n                  name=\"amountType\"\r\n                  value={coupon.amountType}\r\n                >\r\n                  <option value=\"DEFAULT\" disabled>\r\n                    Select Amount Type\r\n                  </option>\r\n                  <option value=\"dollars\">Dollars</option>\r\n                  <option value=\"percentage\">Percentage</option>\r\n                </select>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  required\r\n                  className=\"my-3 input-md\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter amount\"\r\n                  onChange={couponUpdate}\r\n                  value={coupon.amount ? coupon.amount : ''}\r\n                />\r\n\r\n                <Form.Control\r\n                  name=\"code\"\r\n                  required\r\n                  className=\"my-3 input-md\"\r\n                  type=\"text\"\r\n                  placeholder=\"Coupon Code\"\r\n                  onChange={couponUpdate}\r\n                  value={coupon.code ? coupon.code : ''}\r\n                />\r\n                <Form.Control\r\n                  name=\"name\"\r\n                  required\r\n                  className=\"my-3 input-md\"\r\n                  type=\"text\"\r\n                  placeholder=\"Coupon Name\"\r\n                  onChange={couponUpdate}\r\n                  value={coupon.name ? coupon.name : ''}\r\n                />\r\n                <Form.Control\r\n                  name=\"expires\"\r\n                  required\r\n                  className=\"my-3 input-md\"\r\n                  type=\"date\"\r\n                  placeholder=\"Expires\"\r\n                  onChange={couponUpdate}\r\n                  value={coupon.expires ? coupon.expires : ''}\r\n                />\r\n                <Form.Control\r\n                  name=\"available\"\r\n                  required\r\n                  className=\"my-3 input-md\"\r\n                  type=\"text\"\r\n                  placeholder=\"Number Available\"\r\n                  onChange={couponUpdate}\r\n                  value={coupon.available ? coupon.available : ''}\r\n                />\r\n\r\n                <InputGroup className=\"my-3 input-md\">\r\n                  <FormControl\r\n                    aria-label=\"Add Email\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    placeholder=\"Private Email\"\r\n                    name=\"emails\"\r\n                    onChange={typingEmail}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\" onClick={addEmails}>\r\n                      Add Email\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n                <div className=\"my-3\">{allEmails}</div>\r\n\r\n                <Form.Group id=\"formGridCheckbox\">\r\n                  <Form.Check\r\n                    name=\"active\"\r\n                    type=\"checkbox\"\r\n                    label=\"Activate\"\r\n                    onChange={couponUpdate}\r\n                    checked={coupon.active ? true : false}\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                  Update Coupon\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCoupon;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\couponConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\paymentConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Notification.js",[],["444","445"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\MessageDisplay.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\CookiePolicy.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Privacy.js",[],{"ruleId":"446","replacedBy":"447"},{"ruleId":"448","replacedBy":"449"},{"ruleId":"450","severity":1,"message":"451","line":3,"column":26,"nodeType":"452","messageId":"453","endLine":3,"endColumn":29},{"ruleId":"454","severity":1,"message":"455","line":16,"column":15,"nodeType":"456","endLine":16,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":17,"column":15,"nodeType":"456","endLine":17,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":18,"column":15,"nodeType":"456","endLine":18,"endColumn":27},{"ruleId":"454","severity":1,"message":"455","line":24,"column":13,"nodeType":"456","endLine":24,"endColumn":25},{"ruleId":"454","severity":1,"message":"455","line":25,"column":13,"nodeType":"456","endLine":25,"endColumn":25},{"ruleId":"454","severity":1,"message":"455","line":26,"column":13,"nodeType":"456","endLine":26,"endColumn":25},{"ruleId":"454","severity":1,"message":"455","line":27,"column":13,"nodeType":"456","endLine":27,"endColumn":25},{"ruleId":"457","severity":1,"message":"458","line":19,"column":6,"nodeType":"459","endLine":19,"endColumn":8,"suggestions":"460"},{"ruleId":"450","severity":1,"message":"461","line":6,"column":21,"nodeType":"452","messageId":"453","endLine":6,"endColumn":36},{"ruleId":"450","severity":1,"message":"462","line":14,"column":10,"nodeType":"452","messageId":"453","endLine":14,"endColumn":17},{"ruleId":"450","severity":1,"message":"463","line":16,"column":15,"nodeType":"452","messageId":"453","endLine":16,"endColumn":22},{"ruleId":"457","severity":1,"message":"464","line":31,"column":5,"nodeType":"459","endLine":31,"endColumn":34,"suggestions":"465"},{"ruleId":"457","severity":1,"message":"466","line":31,"column":17,"nodeType":"467","endLine":31,"endColumn":33},{"ruleId":"457","severity":1,"message":"466","line":41,"column":6,"nodeType":"467","endLine":41,"endColumn":40},{"ruleId":"457","severity":1,"message":"468","line":49,"column":5,"nodeType":"459","endLine":49,"endColumn":24,"suggestions":"469"},{"ruleId":"470","severity":1,"message":"471","line":71,"column":19,"nodeType":"472","messageId":"473","endLine":71,"endColumn":21},{"ruleId":"470","severity":1,"message":"471","line":95,"column":25,"nodeType":"472","messageId":"473","endLine":95,"endColumn":27},{"ruleId":"450","severity":1,"message":"474","line":4,"column":10,"nodeType":"452","messageId":"453","endLine":4,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":23,"column":6,"nodeType":"459","endLine":23,"endColumn":8,"suggestions":"475"},{"ruleId":"457","severity":1,"message":"476","line":36,"column":6,"nodeType":"459","endLine":36,"endColumn":15,"suggestions":"477"},{"ruleId":"478","severity":1,"message":"479","line":41,"column":55,"nodeType":"480","messageId":"481","endLine":41,"endColumn":57},{"ruleId":"450","severity":1,"message":"482","line":46,"column":7,"nodeType":"452","messageId":"453","endLine":46,"endColumn":10},{"ruleId":"450","severity":1,"message":"483","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":18},{"ruleId":"457","severity":1,"message":"484","line":12,"column":6,"nodeType":"459","endLine":12,"endColumn":8,"suggestions":"485"},{"ruleId":"450","severity":1,"message":"483","line":4,"column":16,"nodeType":"452","messageId":"453","endLine":4,"endColumn":24},{"ruleId":"457","severity":1,"message":"486","line":30,"column":5,"nodeType":"459","endLine":30,"endColumn":14,"suggestions":"487"},{"ruleId":"450","severity":1,"message":"488","line":32,"column":8,"nodeType":"452","messageId":"453","endLine":32,"endColumn":16},{"ruleId":"450","severity":1,"message":"489","line":34,"column":8,"nodeType":"452","messageId":"453","endLine":34,"endColumn":16},{"ruleId":"450","severity":1,"message":"490","line":58,"column":8,"nodeType":"452","messageId":"453","endLine":58,"endColumn":19},{"ruleId":"450","severity":1,"message":"451","line":5,"column":16,"nodeType":"452","messageId":"453","endLine":5,"endColumn":19},{"ruleId":"450","severity":1,"message":"491","line":34,"column":16,"nodeType":"452","messageId":"453","endLine":34,"endColumn":23},{"ruleId":"457","severity":1,"message":"492","line":53,"column":6,"nodeType":"459","endLine":53,"endColumn":12,"suggestions":"493"},{"ruleId":"457","severity":1,"message":"494","line":69,"column":6,"nodeType":"459","endLine":69,"endColumn":31,"suggestions":"495"},{"ruleId":"457","severity":1,"message":"496","line":123,"column":6,"nodeType":"459","endLine":123,"endColumn":14,"suggestions":"497"},{"ruleId":"457","severity":1,"message":"484","line":150,"column":6,"nodeType":"459","endLine":150,"endColumn":14,"suggestions":"498"},{"ruleId":"450","severity":1,"message":"499","line":159,"column":9,"nodeType":"452","messageId":"453","endLine":159,"endColumn":17},{"ruleId":"470","severity":1,"message":"500","line":231,"column":44,"nodeType":"472","messageId":"473","endLine":231,"endColumn":46},{"ruleId":"450","severity":1,"message":"491","line":10,"column":16,"nodeType":"452","messageId":"453","endLine":10,"endColumn":23},{"ruleId":"457","severity":1,"message":"501","line":18,"column":6,"nodeType":"459","endLine":18,"endColumn":8,"suggestions":"502"},{"ruleId":"450","severity":1,"message":"499","line":22,"column":9,"nodeType":"452","messageId":"453","endLine":22,"endColumn":17},{"ruleId":"450","severity":1,"message":"503","line":1,"column":26,"nodeType":"452","messageId":"453","endLine":1,"endColumn":35},{"ruleId":"450","severity":1,"message":"461","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":25},{"ruleId":"450","severity":1,"message":"504","line":4,"column":10,"nodeType":"452","messageId":"453","endLine":4,"endColumn":28},{"ruleId":"450","severity":1,"message":"505","line":6,"column":8,"nodeType":"452","messageId":"453","endLine":6,"endColumn":13},{"ruleId":"450","severity":1,"message":"506","line":13,"column":11,"nodeType":"452","messageId":"453","endLine":13,"endColumn":26},{"ruleId":"457","severity":1,"message":"507","line":27,"column":6,"nodeType":"459","endLine":27,"endColumn":21,"suggestions":"508"},{"ruleId":"450","severity":1,"message":"509","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"461","line":4,"column":10,"nodeType":"452","messageId":"453","endLine":4,"endColumn":25},{"ruleId":"450","severity":1,"message":"483","line":6,"column":10,"nodeType":"452","messageId":"453","endLine":6,"endColumn":18},{"ruleId":"457","severity":1,"message":"510","line":35,"column":6,"nodeType":"459","endLine":35,"endColumn":8,"suggestions":"511"},{"ruleId":"450","severity":1,"message":"503","line":1,"column":37,"nodeType":"452","messageId":"453","endLine":1,"endColumn":46},{"ruleId":"450","severity":1,"message":"512","line":19,"column":10,"nodeType":"452","messageId":"453","endLine":19,"endColumn":17},{"ruleId":"450","severity":1,"message":"513","line":19,"column":19,"nodeType":"452","messageId":"453","endLine":19,"endColumn":29},{"ruleId":"450","severity":1,"message":"474","line":4,"column":21,"nodeType":"452","messageId":"453","endLine":4,"endColumn":25},{"ruleId":"457","severity":1,"message":"514","line":34,"column":5,"nodeType":"459","endLine":34,"endColumn":25,"suggestions":"515"},{"ruleId":"446","replacedBy":"516"},{"ruleId":"448","replacedBy":"517"},{"ruleId":"450","severity":1,"message":"483","line":3,"column":21,"nodeType":"452","messageId":"453","endLine":3,"endColumn":29},{"ruleId":"450","severity":1,"message":"474","line":7,"column":10,"nodeType":"452","messageId":"453","endLine":7,"endColumn":14},{"ruleId":"450","severity":1,"message":"506","line":21,"column":11,"nodeType":"452","messageId":"453","endLine":21,"endColumn":26},{"ruleId":"450","severity":1,"message":"518","line":13,"column":11,"nodeType":"452","messageId":"453","endLine":13,"endColumn":15},{"ruleId":"450","severity":1,"message":"519","line":13,"column":26,"nodeType":"452","messageId":"453","endLine":13,"endColumn":32},{"ruleId":"457","severity":1,"message":"520","line":20,"column":6,"nodeType":"459","endLine":20,"endColumn":8,"suggestions":"521"},{"ruleId":"457","severity":1,"message":"484","line":29,"column":6,"nodeType":"459","endLine":29,"endColumn":20,"suggestions":"522"},{"ruleId":"457","severity":1,"message":"484","line":22,"column":6,"nodeType":"459","endLine":22,"endColumn":20,"suggestions":"523"},{"ruleId":"450","severity":1,"message":"503","line":1,"column":27,"nodeType":"452","messageId":"453","endLine":1,"endColumn":36},{"ruleId":"450","severity":1,"message":"524","line":16,"column":8,"nodeType":"452","messageId":"453","endLine":16,"endColumn":12},{"ruleId":"450","severity":1,"message":"525","line":17,"column":8,"nodeType":"452","messageId":"453","endLine":17,"endColumn":14},{"ruleId":"450","severity":1,"message":"526","line":5,"column":42,"nodeType":"452","messageId":"453","endLine":5,"endColumn":57},{"ruleId":"450","severity":1,"message":"527","line":13,"column":9,"nodeType":"452","messageId":"453","endLine":13,"endColumn":17},{"ruleId":"457","severity":1,"message":"528","line":36,"column":6,"nodeType":"459","endLine":36,"endColumn":42,"suggestions":"529"},{"ruleId":"457","severity":1,"message":"466","line":36,"column":7,"nodeType":"467","endLine":36,"endColumn":41},{"ruleId":"457","severity":1,"message":"530","line":29,"column":6,"nodeType":"459","endLine":29,"endColumn":42,"suggestions":"531"},{"ruleId":"457","severity":1,"message":"466","line":29,"column":7,"nodeType":"467","endLine":29,"endColumn":41},{"ruleId":"450","severity":1,"message":"532","line":31,"column":9,"nodeType":"452","messageId":"453","endLine":31,"endColumn":21},{"ruleId":"457","severity":1,"message":"492","line":51,"column":6,"nodeType":"459","endLine":51,"endColumn":8,"suggestions":"533"},{"ruleId":"457","severity":1,"message":"534","line":57,"column":6,"nodeType":"459","endLine":57,"endColumn":15,"suggestions":"535"},{"ruleId":"457","severity":1,"message":"534","line":63,"column":6,"nodeType":"459","endLine":63,"endColumn":13,"suggestions":"536"},{"ruleId":"457","severity":1,"message":"537","line":97,"column":6,"nodeType":"459","endLine":97,"endColumn":18,"suggestions":"538"},{"ruleId":"478","severity":1,"message":"479","line":147,"column":51,"nodeType":"480","messageId":"481","endLine":147,"endColumn":53},{"ruleId":"457","severity":1,"message":"492","line":62,"column":6,"nodeType":"459","endLine":62,"endColumn":8,"suggestions":"539"},{"ruleId":"457","severity":1,"message":"492","line":68,"column":6,"nodeType":"459","endLine":68,"endColumn":27,"suggestions":"540"},{"ruleId":"457","severity":1,"message":"541","line":79,"column":6,"nodeType":"459","endLine":79,"endColumn":42,"suggestions":"542"},{"ruleId":"457","severity":1,"message":"466","line":79,"column":7,"nodeType":"467","endLine":79,"endColumn":41},{"ruleId":"450","severity":1,"message":"543","line":3,"column":16,"nodeType":"452","messageId":"453","endLine":3,"endColumn":22},{"ruleId":"450","severity":1,"message":"505","line":4,"column":8,"nodeType":"452","messageId":"453","endLine":4,"endColumn":13},{"ruleId":"450","severity":1,"message":"544","line":16,"column":8,"nodeType":"452","messageId":"453","endLine":16,"endColumn":19},{"ruleId":"450","severity":1,"message":"545","line":31,"column":17,"nodeType":"452","messageId":"453","endLine":31,"endColumn":22},{"ruleId":"450","severity":1,"message":"546","line":34,"column":10,"nodeType":"452","messageId":"453","endLine":34,"endColumn":19},{"ruleId":"457","severity":1,"message":"514","line":63,"column":6,"nodeType":"459","endLine":63,"endColumn":48,"suggestions":"547"},{"ruleId":"457","severity":1,"message":"548","line":79,"column":6,"nodeType":"459","endLine":79,"endColumn":18,"suggestions":"549"},{"ruleId":"457","severity":1,"message":"492","line":45,"column":6,"nodeType":"459","endLine":45,"endColumn":15,"suggestions":"550"},{"ruleId":"457","severity":1,"message":"551","line":52,"column":5,"nodeType":"459","endLine":52,"endColumn":20,"suggestions":"552"},{"ruleId":"450","severity":1,"message":"553","line":58,"column":7,"nodeType":"452","messageId":"453","endLine":58,"endColumn":18},{"ruleId":"450","severity":1,"message":"483","line":4,"column":16,"nodeType":"452","messageId":"453","endLine":4,"endColumn":24},{"ruleId":"457","severity":1,"message":"554","line":24,"column":6,"nodeType":"459","endLine":24,"endColumn":16,"suggestions":"555"},{"ruleId":"450","severity":1,"message":"556","line":14,"column":46,"nodeType":"452","messageId":"453","endLine":14,"endColumn":58},{"ruleId":"457","severity":1,"message":"557","line":87,"column":6,"nodeType":"459","endLine":87,"endColumn":71,"suggestions":"558"},{"ruleId":"457","severity":1,"message":"466","line":87,"column":7,"nodeType":"467","endLine":87,"endColumn":70},{"ruleId":"457","severity":1,"message":"559","line":98,"column":6,"nodeType":"459","endLine":98,"endColumn":36,"suggestions":"560"},{"ruleId":"457","severity":1,"message":"466","line":98,"column":7,"nodeType":"467","endLine":98,"endColumn":35},{"ruleId":"446","replacedBy":"561"},{"ruleId":"448","replacedBy":"562"},{"ruleId":"446","replacedBy":"563"},{"ruleId":"448","replacedBy":"564"},{"ruleId":"457","severity":1,"message":"565","line":56,"column":6,"nodeType":"459","endLine":56,"endColumn":24,"suggestions":"566"},{"ruleId":"470","severity":1,"message":"471","line":129,"column":26,"nodeType":"472","messageId":"473","endLine":129,"endColumn":28},{"ruleId":"450","severity":1,"message":"567","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":24},{"ruleId":"450","severity":1,"message":"543","line":5,"column":10,"nodeType":"452","messageId":"453","endLine":5,"endColumn":16},{"ruleId":"450","severity":1,"message":"568","line":5,"column":18,"nodeType":"452","messageId":"453","endLine":5,"endColumn":23},{"ruleId":"450","severity":1,"message":"545","line":14,"column":11,"nodeType":"452","messageId":"453","endLine":14,"endColumn":16},{"ruleId":"450","severity":1,"message":"569","line":19,"column":10,"nodeType":"452","messageId":"453","endLine":19,"endColumn":20},{"ruleId":"450","severity":1,"message":"570","line":19,"column":22,"nodeType":"452","messageId":"453","endLine":19,"endColumn":35},{"ruleId":"450","severity":1,"message":"571","line":20,"column":10,"nodeType":"452","messageId":"453","endLine":20,"endColumn":19},{"ruleId":"450","severity":1,"message":"572","line":20,"column":21,"nodeType":"452","messageId":"453","endLine":20,"endColumn":33},{"ruleId":"450","severity":1,"message":"573","line":21,"column":10,"nodeType":"452","messageId":"453","endLine":21,"endColumn":22},{"ruleId":"450","severity":1,"message":"574","line":21,"column":24,"nodeType":"452","messageId":"453","endLine":21,"endColumn":39},{"ruleId":"450","severity":1,"message":"575","line":22,"column":10,"nodeType":"452","messageId":"453","endLine":22,"endColumn":14},{"ruleId":"450","severity":1,"message":"576","line":22,"column":16,"nodeType":"452","messageId":"453","endLine":22,"endColumn":23},{"ruleId":"450","severity":1,"message":"577","line":23,"column":10,"nodeType":"452","messageId":"453","endLine":23,"endColumn":19},{"ruleId":"450","severity":1,"message":"578","line":23,"column":21,"nodeType":"452","messageId":"453","endLine":23,"endColumn":33},{"ruleId":"457","severity":1,"message":"492","line":45,"column":6,"nodeType":"459","endLine":45,"endColumn":8,"suggestions":"579"},{"ruleId":"457","severity":1,"message":"580","line":59,"column":6,"nodeType":"459","endLine":59,"endColumn":18,"suggestions":"581"},{"ruleId":"454","severity":1,"message":"455","line":348,"column":17,"nodeType":"456","endLine":348,"endColumn":88},{"ruleId":"454","severity":1,"message":"455","line":351,"column":17,"nodeType":"456","endLine":353,"endColumn":28},{"ruleId":"450","severity":1,"message":"524","line":16,"column":9,"nodeType":"452","messageId":"453","endLine":16,"endColumn":13},{"ruleId":"457","severity":1,"message":"492","line":51,"column":6,"nodeType":"459","endLine":51,"endColumn":8,"suggestions":"582"},{"ruleId":"457","severity":1,"message":"534","line":57,"column":6,"nodeType":"459","endLine":57,"endColumn":15,"suggestions":"583"},{"ruleId":"457","severity":1,"message":"584","line":77,"column":6,"nodeType":"459","endLine":77,"endColumn":18,"suggestions":"585"},{"ruleId":"470","severity":1,"message":"500","line":102,"column":26,"nodeType":"472","messageId":"473","endLine":102,"endColumn":28},{"ruleId":"450","severity":1,"message":"586","line":118,"column":9,"nodeType":"452","messageId":"453","endLine":118,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":118,"column":51,"nodeType":"480","messageId":"481","endLine":118,"endColumn":53},{"ruleId":"478","severity":1,"message":"587","line":169,"column":31,"nodeType":"588","messageId":"481","endLine":169,"endColumn":40},{"ruleId":"450","severity":1,"message":"589","line":353,"column":11,"nodeType":"452","messageId":"453","endLine":353,"endColumn":24},{"ruleId":"457","severity":1,"message":"492","line":35,"column":6,"nodeType":"459","endLine":35,"endColumn":8,"suggestions":"590"},{"ruleId":"454","severity":1,"message":"455","line":55,"column":5,"nodeType":"456","endLine":63,"endColumn":6},{"ruleId":"591","severity":1,"message":"592","line":193,"column":21,"nodeType":"593","endLine":193,"endColumn":48},{"ruleId":"457","severity":1,"message":"594","line":44,"column":6,"nodeType":"459","endLine":44,"endColumn":8,"suggestions":"595"},{"ruleId":"457","severity":1,"message":"596","line":82,"column":6,"nodeType":"459","endLine":82,"endColumn":17,"suggestions":"597"},{"ruleId":"446","replacedBy":"598"},{"ruleId":"448","replacedBy":"599"},"no-native-reassign",["600"],"no-negated-in-lhs",["601"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coursesLoaded' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["602"],"'getCoursesOwned' is defined but never used.","'loading' is assigned a value but never used.","'setPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'user'. Either include them or remove the dependency array.",["603"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has a missing dependency: 'redirectUser'. Either include it or remove the dependency array.",["604"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.",["605"],"React Hook useEffect has a missing dependency: 'all'. Either include it or remove the dependency array.",["606"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'img' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["607"],"React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["608"],"'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'checkResult' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["609"],"React Hook useEffect has a missing dependency: 'paymentState'. Either include it or remove the dependency array. You can also do a functional update 'setPaymentState(p => ...)' if you only need 'paymentState' in the 'setPaymentState' call.",["610"],"React Hook useEffect has missing dependencies: 'checkout', 'checkoutPrice', 'couponIsValid', and 'paymentState'. Either include them or remove the dependency array. You can also do a functional update 'setPaymentState(p => ...)' if you only need 'paymentState' in the 'setPaymentState' call.",["611"],["612"],"'getNonce' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'payAction'. Either include it or remove the dependency array. If 'payAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["613"],"'useEffect' is defined but never used.","'resetPaymentResult' is defined but never used.","'store' is defined but never used.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["614"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'result'. Either include them or remove the dependency array.",["615"],"'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCourseValues'. Either include it or remove the dependency array.",["616"],["600"],["601"],"'user' is assigned a value but never used.","'active' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'message', and 'token'. Either include them or remove the dependency array.",["617"],["618"],["619"],"'auth' is assigned a value but never used.","'course' is assigned a value but never used.","'RiVipCrown2Fill' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth' and 'dispatch'. Either include them or remove the dependency array.",["620"],"React Hook useEffect has missing dependencies: 'auth', 'coursesOwnedLoaded', 'dispatch', and 'loading'. Either include them or remove the dependency array.",["621"],"'coursesimage' is assigned a value but never used.",["622"],"React Hook useEffect has a missing dependency: 'removeAdminFromUsers'. Either include it or remove the dependency array.",["623"],["624"],"React Hook useEffect has missing dependencies: 'changePages', 'orderByState', and 'pageUsers'. Either include them or remove the dependency array. You can also do a functional update 'setPageUsers(p => ...)' if you only need 'pageUsers' in the 'setPageUsers' call.",["625"],["626"],["627"],"React Hook useEffect has missing dependencies: 'auth' and 'userDetails'. Either include them or remove the dependency array. You can also do a functional update 'setUserDetails(u => ...)' if you only need 'userDetails' in the 'setUserDetails' call.",["628"],"'Button' is defined but never used.","'htmlToDraft' is defined but never used.","'token' is assigned a value but never used.","'uploading' is assigned a value but never used.",["629"],"React Hook useEffect has missing dependencies: 'courseState' and 'dispatch'. Either include them or remove the dependency array.",["630"],["631"],"React Hook useEffect has a missing dependency: 'updateCourses'. Either include it or remove the dependency array.",["632"],"'dropzoneRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'coursesLoaded'. Either include it or remove the dependency array.",["633"],"'notification' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth', 'checkoutLoaded', and 'dispatch'. Either include them or remove the dependency array.",["634"],"React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'membershipLoaded'. Either include them or remove the dependency array.",["635"],["600"],["601"],["600"],["601"],"React Hook useEffect has a missing dependency: 'theUserCoursesFunc'. Either include it or remove the dependency array.",["636"],"'allUsersAction' is defined but never used.","'Modal' is defined but never used.","'stateUsers' is assigned a value but never used.","'setStateUsers' is assigned a value but never used.","'selectAll' is assigned a value but never used.","'setSelectAll' is assigned a value but never used.","'userSelected' is assigned a value but never used.","'setUserSelected' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'modalText' is assigned a value but never used.","'setModalText' is assigned a value but never used.",["637"],"React Hook useEffect has a missing dependency: 'pageSales'. Either include it or remove the dependency array. You can also do a functional update 'setPageSales(p => ...)' if you only need 'pageSales' in the 'setPageSales' call.",["638"],["639"],["640"],"React Hook useEffect has a missing dependency: 'pageUsers'. Either include it or remove the dependency array. You can also do a functional update 'setPageUsers(p => ...)' if you only need 'pageUsers' in the 'setPageUsers' call.",["641"],"'allUsers' is assigned a value but never used.","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","'lastLoginDate' is assigned a value but never used.",["642"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'couponId' and 'dispatch'. Either include them or remove the dependency array.",["643"],"React Hook useEffect has missing dependencies: 'coupon' and 'coursesState'. Either include them or remove the dependency array. You can also do a functional update 'setCoupon(c => ...)' if you only need 'coupon' in the 'setCoupon' call.",["644"],["600"],["601"],"no-global-assign","no-unsafe-negation",{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"645","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"676","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"683","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"645","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"683","fix":"711"},{"desc":"712","fix":"713"},{"desc":"683","fix":"714"},{"desc":"685","fix":"715"},{"desc":"716","fix":"717"},{"desc":"683","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},"Update the dependencies array to be: [coursesLoaded, dispatch]",{"range":"723","text":"724"},"Update the dependencies array to be: [courseTag, dispatch, token, user]",{"range":"725","text":"726"},"Update the dependencies array to be: [auth.coursesOwned, redirectUser]",{"range":"727","text":"728"},{"range":"729","text":"724"},"Update the dependencies array to be: [all, loading]",{"range":"730","text":"731"},"Update the dependencies array to be: [history]",{"range":"732","text":"733"},"Update the dependencies array to be: [formData, message]",{"range":"734","text":"735"},"Update the dependencies array to be: [dispatch, user]",{"range":"736","text":"737"},"Update the dependencies array to be: [checkoutPrice, checkout, paymentState]",{"range":"738","text":"739"},"Update the dependencies array to be: [checkout, checkoutPrice, coupon, couponIsValid, paymentState]",{"range":"740","text":"741"},"Update the dependencies array to be: [history, result]",{"range":"742","text":"743"},"Update the dependencies array to be: [payAction]",{"range":"744","text":"745"},"Update the dependencies array to be: [user, loading, dispatch, history]",{"range":"746","text":"747"},"Update the dependencies array to be: [dispatch, history, result]",{"range":"748","text":"749"},"Update the dependencies array to be: [courseState.loaded, setCourseValues]",{"range":"750","text":"751"},"Update the dependencies array to be: [dispatch, message, token]",{"range":"752","text":"753"},"Update the dependencies array to be: [auth, active, history]",{"range":"754","text":"755"},{"range":"756","text":"755"},"Update the dependencies array to be: [auth, dispatch]",{"range":"757","text":"758"},"Update the dependencies array to be: [auth, coursesOwnedLoaded, dispatch, loading]",{"range":"759","text":"760"},"Update the dependencies array to be: [dispatch]",{"range":"761","text":"762"},"Update the dependencies array to be: [loading, removeAdminFromUsers]",{"range":"763","text":"764"},"Update the dependencies array to be: [removeAdminFromUsers, users]",{"range":"765","text":"766"},"Update the dependencies array to be: [changePages, orderByState, pageUsers, stateUsers]",{"range":"767","text":"768"},{"range":"769","text":"762"},"Update the dependencies array to be: [dispatch, notification.status]",{"range":"770","text":"771"},"Update the dependencies array to be: [auth, userDetails]",{"range":"772","text":"773"},"Update the dependencies array to be: [courseState.loaded, course.loading, auth, setCourseValues]",{"range":"774","text":"775"},"Update the dependencies array to be: [courseState, dispatch, saveCourse]",{"range":"776","text":"777"},"Update the dependencies array to be: [dispatch, loading]",{"range":"778","text":"779"},"Update the dependencies array to be: [courseLoading, updateCourses]",{"range":"780","text":"781"},{"range":"782","text":"724"},"Update the dependencies array to be: [auth, checkoutLoaded, dispatch]",{"range":"783","text":"784"},"Update the dependencies array to be: [auth, dispatch, membershipLoaded]",{"range":"785","text":"786"},"Update the dependencies array to be: [userCourses, all, theUserCoursesFunc]",{"range":"787","text":"788"},{"range":"789","text":"762"},"Update the dependencies array to be: [pageSales, salesState]",{"range":"790","text":"791"},{"range":"792","text":"762"},{"range":"793","text":"764"},"Update the dependencies array to be: [pageUsers, stateUsers]",{"range":"794","text":"795"},{"range":"796","text":"762"},"Update the dependencies array to be: [couponId, dispatch]",{"range":"797","text":"798"},"Update the dependencies array to be: [coupon, coursesState, theCoupon]",{"range":"799","text":"800"},[586,588],"[coursesLoaded, dispatch]",[962,991],"[courseTag, dispatch, token, user]",[1329,1348],"[auth.coursesOwned, redirectUser]",[778,780],[1053,1062],"[all, loading]",[331,333],"[history]",[949,958],"[formData, message]",[1460,1466],"[dispatch, user]",[1857,1882],"[checkoutPrice, checkout, paymentState]",[3742,3750],"[checkout, checkoutPrice, coupon, couponIsValid, paymentState]",[4451,4459],"[history, result]",[621,623],"[payAction]",[852,867],"[user, loading, dispatch, history]",[981,983],"[dispatch, history, result]",[885,905],"[courseState.loaded, setCourseValues]",[710,712],"[dispatch, message, token]",[987,1001],"[auth, active, history]",[730,744],[1076,1112],"[auth, dispatch]",[883,919],"[auth, coursesOwnedLoaded, dispatch, loading]",[1508,1510],"[dispatch]",[1614,1623],"[loading, removeAdminFromUsers]",[1751,1758],"[removeAdminFromUsers, users]",[2761,2773],"[changePages, orderByState, pageUsers, stateUsers]",[1562,1564],[1678,1699],"[dispatch, notification.status]",[1912,1948],"[auth, userDetails]",[1747,1789],"[courseState.loaded, course.loading, auth, setCourseValues]",[2153,2165],"[courseState, dispatch, saveCourse]",[1245,1254],"[dispatch, loading]",[1348,1363],"[courseLoading, updateCourses]",[821,831],[2565,2630],"[auth, checkoutLoaded, dispatch]",[2910,2940],"[auth, dispatch, membershipLoaded]",[1786,1804],"[userCourses, all, theUserCoursesFunc]",[1245,1247],[1553,1565],"[pageSales, salesState]",[1478,1480],[1584,1593],[2126,2138],"[pageUsers, stateUsers]",[947,949],[1209,1211],"[couponId, dispatch]",[2391,2402],"[coupon, coursesState, theCoupon]"]