[{"D:\\dev-projects\\telmo-academy-v3\\client\\src\\index.js":"1","D:\\dev-projects\\telmo-academy-v3\\client\\src\\App.js":"2","D:\\dev-projects\\telmo-academy-v3\\client\\src\\store.js":"3","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\auth.js":"4","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Footer.js":"5","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Home.js":"6","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseLessons.js":"7","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Course.js":"8","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Courses.js":"9","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Register.js":"10","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Logout.js":"11","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Membership.js":"12","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Login.js":"13","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Checkout.js":"14","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipCheckout.js":"15","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipSuccess.js":"16","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Activate.js":"17","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CheckoutSuccess.js":"18","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ForgotPassword.js":"19","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseUpdate.js":"20","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ResetPassword.js":"21","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ActivateEmail.js":"22","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminCtn.js":"23","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCtn.js":"24","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseCreate.js":"25","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\types.js":"26","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\authConstants.js":"27","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\userConstants.js":"28","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\courses.js":"29","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseCard.js":"30","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileBilling.js":"31","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCourses.js":"32","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AllUsers.js":"33","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\Profile.js":"34","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseUpdate.js":"35","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileSidebar.js":"36","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\FeatureCourses.js":"37","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Courses.js":"38","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminSidebar.js":"39","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Header.js":"40","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\SecondHeader.js":"41","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\AdminSidebar.js":"42","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Loader.js":"43","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\imageUpload.js":"44","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\payments.js":"45","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\index.js":"46","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\courseConstants.js":"47","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\membership.js":"48","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\admin.js":"49","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Navbar.js":"50","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\courses.js":"51","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\auth.js":"52","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\payment.js":"53","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\admin.js":"54","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\adminConstants.js":"55"},{"size":154,"mtime":1588368838947,"results":"56","hashOfConfig":"57"},{"size":3357,"mtime":1605914018636,"results":"58","hashOfConfig":"57"},{"size":393,"mtime":1587241502709,"results":"59","hashOfConfig":"57"},{"size":6701,"mtime":1605909053564,"results":"60","hashOfConfig":"57"},{"size":1058,"mtime":1601578017673,"results":"61","hashOfConfig":"57"},{"size":4923,"mtime":1606344336158,"results":"62","hashOfConfig":"57"},{"size":6380,"mtime":1607886994491,"results":"63","hashOfConfig":"57"},{"size":6276,"mtime":1607878304842,"results":"64","hashOfConfig":"57"},{"size":3459,"mtime":1606592413621,"results":"65","hashOfConfig":"57"},{"size":4718,"mtime":1607122465294,"results":"66","hashOfConfig":"57"},{"size":594,"mtime":1605527533139,"results":"67","hashOfConfig":"57"},{"size":4713,"mtime":1607887637658,"results":"68","hashOfConfig":"57"},{"size":2992,"mtime":1599079055555,"results":"69","hashOfConfig":"57"},{"size":4619,"mtime":1602345885490,"results":"70","hashOfConfig":"57"},{"size":3038,"mtime":1601507359698,"results":"71","hashOfConfig":"57"},{"size":896,"mtime":1601506704235,"results":"72","hashOfConfig":"57"},{"size":1528,"mtime":1605909522734,"results":"73","hashOfConfig":"57"},{"size":1765,"mtime":1605555676416,"results":"74","hashOfConfig":"57"},{"size":2334,"mtime":1599078986616,"results":"75","hashOfConfig":"57"},{"size":4965,"mtime":1597324714836,"results":"76","hashOfConfig":"57"},{"size":3249,"mtime":1605553579581,"results":"77","hashOfConfig":"57"},{"size":1422,"mtime":1605730944904,"results":"78","hashOfConfig":"57"},{"size":1609,"mtime":1606421295722,"results":"79","hashOfConfig":"57"},{"size":1204,"mtime":1605722913319,"results":"80","hashOfConfig":"57"},{"size":4230,"mtime":1607640900018,"results":"81","hashOfConfig":"57"},{"size":1710,"mtime":1605723275400,"results":"82","hashOfConfig":"57"},{"size":224,"mtime":1605723213944,"results":"83","hashOfConfig":"57"},{"size":61,"mtime":1605372917503,"results":"84","hashOfConfig":"57"},{"size":7903,"mtime":1607202347638,"results":"85","hashOfConfig":"57"},{"size":1046,"mtime":1607640339478,"results":"86","hashOfConfig":"57"},{"size":3733,"mtime":1607189547602,"results":"87","hashOfConfig":"57"},{"size":2593,"mtime":1605530427454,"results":"88","hashOfConfig":"57"},{"size":9017,"mtime":1607904731512,"results":"89","hashOfConfig":"57"},{"size":9679,"mtime":1607189513095,"results":"90","hashOfConfig":"57"},{"size":7048,"mtime":1607886328024,"results":"91","hashOfConfig":"57"},{"size":1583,"mtime":1607189472407,"results":"92","hashOfConfig":"57"},{"size":9323,"mtime":1606343967047,"results":"93","hashOfConfig":"57"},{"size":2024,"mtime":1607189583930,"results":"94","hashOfConfig":"57"},{"size":1567,"mtime":1607189598952,"results":"95","hashOfConfig":"57"},{"size":605,"mtime":1600366597710,"results":"96","hashOfConfig":"57"},{"size":6791,"mtime":1607878928543,"results":"97","hashOfConfig":"57"},{"size":386,"mtime":1597948581674,"results":"98","hashOfConfig":"57"},{"size":332,"mtime":1605369245325,"results":"99","hashOfConfig":"57"},{"size":3401,"mtime":1597497863156,"results":"100","hashOfConfig":"57"},{"size":3672,"mtime":1602443752673,"results":"101","hashOfConfig":"57"},{"size":257,"mtime":1606423583344,"results":"102","hashOfConfig":"57"},{"size":290,"mtime":1606341064197,"results":"103","hashOfConfig":"57"},{"size":1755,"mtime":1601419845400,"results":"104","hashOfConfig":"57"},{"size":2523,"mtime":1607039244785,"results":"105","hashOfConfig":"57"},{"size":2107,"mtime":1596048824215,"results":"106","hashOfConfig":"57"},{"size":2000,"mtime":1606341659092,"results":"107","hashOfConfig":"57"},{"size":4205,"mtime":1605909047636,"results":"108","hashOfConfig":"57"},{"size":1599,"mtime":1602443477659,"results":"109","hashOfConfig":"57"},{"size":1092,"mtime":1607039810085,"results":"110","hashOfConfig":"57"},{"size":595,"mtime":1607038302576,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"98tof7",{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"114"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"114"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"114"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"114"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"114"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"D:\\dev-projects\\telmo-academy-v3\\client\\src\\index.js",[],["259","260"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\App.js",["261","262"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { loadUser } from './actions/auth';\nimport store from './store';\nimport './fontawesome/css/all.min.css';\nimport Home from './components/pages/Home';\nimport Footer from './components/pages/Footer';\nimport Course from './components/pages/Course';\nimport Courses from './components/pages/Courses';\nimport CourseLessons from './components/pages/CourseLessons';\nimport Register from './components/pages/Register';\nimport Login from './components/pages/Login';\nimport Logout from './components/pages/Logout';\nimport Checkout from './components/pages/Checkout';\nimport Membership from './components/pages/Membership';\nimport MembershipCheckout from './components/pages/MembershipCheckout';\nimport MembershipSuccess from './components/pages/MembershipSuccess';\nimport CheckoutSuccess from './components/pages/CheckoutSuccess';\nimport FGT_PASSWORD from './components/pages/ForgotPassword';\nimport RST_PASSWORD from './components/pages/ResetPassword';\nimport Activate from './components/pages/Activate';\nimport ActivateEmail from './components/pages/ActivateEmail';\nimport Admin from './components/admin/AdminCtn';\nimport CourseCreate from './components/admin/CourseCreate';\nimport CourseUpdate from './components/pages/CourseUpdate';\nimport ProfileCtn from './components/private/ProfileCtn';\n\nfunction App() {\n  useEffect( () => {\n    console.log(\"Inside APP.js\");\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/courses\" component={Courses} />\n          <Route exact path=\"/courses/:courseTag\" component={Course} />\n          <Route exact path=\"/courses/:courseTag/lessons/:lesson\" component={CourseLessons} />  \n          <Route path=\"/register\" component={Register} />\n          <Route exact path=\"/cart/checkout\" component={Checkout} />\n          <Route exact path=\"/cart/checkout/success\" component={CheckoutSuccess} />\n          <Route exact path=\"/membership\" component={Membership} />\n          <Route exact path=\"/membership/success\" component={MembershipSuccess} />\n          <Route exact path=\"/membership/:duration\" component={MembershipCheckout} />\n          \n          <Route exact path=\"/activate\" component={Activate} />\n          <Route exact path=\"/activate/:token\" component={ActivateEmail} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/forgotPassword\" component={FGT_PASSWORD} />\n          <Route path=\"/resetPassword/:token\" component={RST_PASSWORD} />\n          <Route exact path=\"/admin/:page\" component={Admin} />\n          <Route exact path=\"/admin/:page/:subPage\" component={Admin} />\n          <Route exact path=\"/admin/:page/:subPage/:courseTag\" component={Admin} />\n          <Route exact path=\"/featureCourses\" component={Admin} />\n          <Route exact path=\"/profile\" component={ProfileCtn} />\n          <Route exact path=\"/profile/:page\" component={ProfileCtn} />\n        </Switch>\n          <Footer />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\store.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\auth.js",["263","264"],"import axios from 'axios';\r\nimport {\r\n  UPDATE_USER,\r\n  UPDATE_USER_ERROR,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  USER_GUEST,\r\n  AUTH_ERROR,\r\n  LOGOUT,\r\n  LOGOUT_FAIL,\r\n  FORGOT_PASSWORD,\r\n  EMAIL_ACTIVATION,\r\n  ACCOUNT_ACTIVATION\r\n} from './types';\r\nimport { USER_DETAILS_REQUEST } from '../contants/userConstants';\r\nimport { \r\n  RESET_PASSWORD, \r\n  RESET_PASSWORD_FAIL, \r\n  ACCOUNT_ACTIVATION_FAIL,\r\n  RESET_MESSAGE,\r\n} from '../contants/authConstants';\r\n\r\n//Register User\r\nexport const register = ({ name, email, password, passwordConfirm }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  const body = JSON.stringify({ name, email, password, passwordConfirm });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users/register\", body, config);\r\n    console.log(\"res.data\");\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n}\r\n\r\n//Login User\r\nexport const login = ({ email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/api/users/login\", body, config);\r\n    console.log(\"res.data\");\r\n    console.log(data);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n  } catch (error) {\r\n    // const errors = err.response.data.errors;\r\n    console.log(error.response.data.message);\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n}\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/api/users/loadUser');\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    });\r\n\r\n    // console.log(\"Loading User\");\r\n    if (res.data.token) {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n    } else if (res.data.status === 'guest') {\r\n      dispatch({\r\n        type: USER_GUEST\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n\r\n    //const errors = err.response.data.message;\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n//Logout /Clear Profile\r\nexport const logout = () => async dispatch => {\r\n  console.log(\"logout running\");\r\n  // dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/users/logout');\r\n\r\n    //console.log(res.data);\r\n    dispatch({ \r\n      type: LOGOUT\r\n    });\r\n\r\n    // dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n    // if(errors) {\r\n    //     errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    // }\r\n\r\n    dispatch({\r\n      type: LOGOUT_FAIL\r\n    });\r\n  }\r\n}\r\n\r\n//Forgot Password\r\nexport const fgt_pass = ({ email }) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const body = JSON.stringify({ email });\r\n\r\n    const res = await axios.post('/api/users/forgotPassword', body, config);\r\n\r\n    //console.log(res.data);\r\n    dispatch({ \r\n      type: FORGOT_PASSWORD,\r\n      payload: \"We have sent you an email, to reset your password\"\r\n    });\r\n\r\n\r\n    // dispatch(loadUser());\r\n  } catch (err) {\r\n    // const errors = err.response.data.errors;\r\n    console.log(err);\r\n    // if(errors) {\r\n    //     errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    // }\r\n\r\n    // dispatch({\r\n    //     type: LOGOUT_FAIL\r\n    // });\r\n  }\r\n}\r\n\r\n//Reset Password\r\nexport const reset_pass = ({ password, passwordConfirm, token }) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const body = JSON.stringify({ password, passwordConfirm });\r\n\r\n    const { data } = await axios.patch(`/api/users/resetPassword/${token}`, body, config);\r\n\r\n    console.log(data);\r\n    dispatch({ \r\n      type: RESET_PASSWORD,\r\n      payload: data.message\r\n    });\r\n\r\n\r\n    // dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data;\r\n\r\n    dispatch({\r\n      type: RESET_PASSWORD_FAIL,\r\n      payload: errors.message\r\n    })\r\n    \r\n  }\r\n}\r\n\r\nexport const activateEmail = ({ email }) => async dispatch => {\r\n  try {\r\n    console.log(email);\r\n    const { data } = await axios.post(`/api/users/activateAccount/${email}`);\r\n    console.log(data);\r\n    dispatch({\r\n      type: EMAIL_ACTIVATION,\r\n      payload: data\r\n    });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const activateEmailAction = (token) => async dispatch => {\r\n  console.log(\"Inside ActiveEmailAction\");\r\n  try {\r\n    console.log(token);\r\n    const res = await axios.post(`/api/users/activate/${token}`);\r\n    console.log(\"-------------------MY DATA\");\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: ACCOUNT_ACTIVATION,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (error) {\r\n    const errors = error.response.data;\r\n    console.log(\"///////// Errors\");\r\n    console.log(errors);\r\n    dispatch({\r\n      type: ACCOUNT_ACTIVATION_FAIL,\r\n      payload: errors\r\n    })\r\n  }\r\n}\r\n\r\nexport const resetMessage = () => async dispatch => {\r\n  console.log(\"inside reset message action\");\r\n  try {\r\n    dispatch({\r\n      type: RESET_MESSAGE\r\n    });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const updateUserAction = (token, userDetails) => async dispatch => {\r\n  try {\r\n    console.log(userDetails);\r\n    const body = JSON.stringify({\r\n      name: userDetails.name,\r\n      newPassword: userDetails.newPassword,\r\n      newPasswordConfirm: userDetails.newPasswordConfirm,\r\n      password: userDetails.password \r\n    });\r\n\r\n    if( userDetails.newPassword !== userDetails.newPasswordConfirm) {\r\n      return dispatch({\r\n        type: UPDATE_USER_ERROR,\r\n        payload: \"Passwords do not Match\"\r\n      });\r\n    }\r\n\r\n    const res = await axios.post(`/api/users/udpateUserDb`, body, {\r\n      headers: {\r\n        Accept: 'application/json', \r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    console.log(res);\r\n\r\n    dispatch({\r\n      type: UPDATE_USER,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (error) {\r\n    // console.log(error.response.data.message);\r\n    dispatch({\r\n      type: UPDATE_USER_ERROR,\r\n      payload: error.response.data.message\r\n    });\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Footer.js",["265","266","267","268","269","270","271","272"],"import React from 'react'\r\nimport footerLogo from '../../images/telmoacademy-logo1.png';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"footerSocialCtn\">\r\n            <img src={footerLogo} alt=\"Telmo Academy Logo\"/>\r\n            {/* <span className=\"footerEmail\"><i className=\"fas fa-envelope\"></i>support@telmoacademy.com</span> */}\r\n            <span className=\"footerSocial\">\r\n              <a href=\"#\"><i className=\"fab fa-youtube\"></i></a>\r\n              <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\r\n              <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"footerLinks\">\r\n            <a href=\"#\">Privacy</a>\r\n            <a href=\"#\">Terms</a>\r\n            <a href=\"#\">Blog</a>\r\n            <a href=\"#\">Contact</a>\r\n            <a href=\"#\">About</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Home.js",["273","274","275","276"],"import React, { Fragment, useEffect } from 'react';\r\nimport Header from '../partials/Header';\r\nimport CourseCard from './CourseCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCourses } from '../../actions/courses';\r\nimport './Home.css';\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading, token } = auth;\r\n\r\n\r\n  const courses = useSelector(state => state.courses);\r\n  const courseLoading = courses.loading;\r\n\r\n  useEffect(() => {\r\n      dispatch(getCourses());\r\n  }, []);\r\n\r\n  console.log(courses);\r\n\r\n  const coursesFiltered = courses.all.length > 0 && courses.all.filter((course) => {\r\n    return course.featured;\r\n  });\r\n\r\n  coursesFiltered.length > 0 && coursesFiltered.sort((a, b) => {\r\n    return a.featuredPosition - b.featuredPosition;\r\n  })\r\n\r\n  const allFeatured = coursesFiltered.length > 0 && coursesFiltered.map((course, i) => {\r\n    return (\r\n      <CourseCard \r\n        name={course.name} \r\n        price={course.price} \r\n        key={i}\r\n        tag={course.tag}\r\n      />\r\n    )\r\n  });\r\n\r\n  console.log(courses)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <h3 className=\"popularCourses\">Popular Courses</h3>\r\n        <div className=\"popularCoursesCtn\">\r\n          <div className=\"row\">\r\n            {/* <CourseCard />\r\n            <CourseCard />\r\n            <CourseCard />\r\n            <CourseCard /> */}\r\n\r\n              {allFeatured}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"homeCounter\">\r\n        <div className=\"overlay\"></div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">3057</h1>\r\n              <h5 className=\"homeCounterSubTitle\">students</h5>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">22471</h1>\r\n              <h5 className=\"homeCounterSubTitle\">views</h5>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">64</h1>\r\n              <h5 className=\"homeCounterSubTitle\">countries reached</h5>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <h1 className=\"homeCounterTitle\">8</h1>\r\n              <h5 className=\"homeCounterSubTitle\">courses published</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"homeObjectives\">\r\n        <div className=\"container\">\r\n          <h3 className=\"homeObjectivesMainTitle\">Learning Objectives </h3>\r\n          <p className=\"homeObjectivesMainDescription\">The skills you can expect to achieve with us</p>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-suitcase\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Get Job Ready</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Gain practical experience as you go by creating portfolio-worthy projects that will help you land your next job</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-trophy\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Get in-depth knowledge</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learning to code means more than just memorizing syntax. Instead, we help you think like a real programmer</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-globe\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Freelancing</h5>\r\n              <p className=\"homeObjectivesObjDescription\">All the tips tricks you need to know to start your freelance career</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <i className=\"far fa-handshake\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Get Hired</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learn how to build an Online Portfolio, and an Awesome CV that will get you hired</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-star\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Responsive Design</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learn how to build websites that will look good on Desktops, Tablets and Mobile phones</p>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <i className=\"fas fa-code\"></i>\r\n              <h5 className=\"homeObjectivesObjTitle\">Clean Code</h5>\r\n              <p className=\"homeObjectivesObjDescription\">Learn to write simple, elegante and bug free code, just like a professional</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseLessons.js",["277","278","279","280","281","282","283","284"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Course.js",["285","286","287","288","289","290","291","292"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport parse from 'html-react-parser';\r\nimport { useParams, Link, Redirect } from 'react-router-dom';\r\nimport store from '../../store';\r\nimport { connect } from 'react-redux';\r\nimport { getCourse } from '../../actions/courses';\r\nimport { addCheckout } from '../../actions/courses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './Course.css';\r\n\r\n\r\nconst Course = ({ course, addCheckout, auth, payment }) => {\r\n\r\n  const [page, setPage] = useState({\r\n    loaded: false\r\n  })\r\n\r\n  useEffect(() => {\r\n    store.dispatch(getCourse(courseTag));\r\n    setPage({ loaded: true });\r\n    console.log(\"after page loaded\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (auth && auth.membership && auth.membership.active) {\r\n      setPage({ loaded: true });\r\n    }\r\n\r\n  }, [auth && auth.membership && auth.membership.active]);\r\n\r\n  // useEffect(() => {\r\n  //   store.dispatch(getCourse(courseTag, auth && auth.token));\r\n  // }, [auth && auth.token])\r\n\r\n  const { courseTag } = useParams();\r\n  console.log(courseTag);\r\n  console.log(course);\r\n  console.log(auth);\r\n  const description = () => {\r\n\r\n    if (course && course.data && course.data.description) {\r\n      return course.data.description\r\n    } else {\r\n      return \"\"\r\n    }\r\n  }\r\n\r\n  const goCheckout = async () => {\r\n    const selectedCourse = course && course.data;\r\n    const userEmail = auth && auth.user && auth.user.email\r\n    await addCheckout({ selectedCourse, userEmail });\r\n  }\r\n\r\n  let classes = course && course.data && course.data.classes.map((theClass, i) => {\r\n    return (\r\n      <div className={ i % 2 == 0 ? \"courseClassItems bg-light\" : \"courseClassItems\" } key={i}>\r\n        <div className=\"courseClassLecture\"><i className=\"far fa-file\"></i>Lecture {theClass.lecture}</div>\r\n        <div className=\"courseClassTitle\">\r\n          <Link to={`/courses/${course.data.tag}/lessons/1`}>{theClass.title}</Link>\r\n          <span>{theClass.duration} min</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const courseId = course && course.data && course.data._id;\r\n\r\n  const userGotCourse = auth && auth.coursesOwned.filter((course) => {\r\n    console.log(course._id)\r\n    return course._id == courseId\r\n  });\r\n  console.log(auth && auth.coursesOwned);\r\n  console.log(userGotCourse);\r\n\r\n  if (payment && payment.addingToCheckout) {\r\n    console.log(payment.addingToCheckout);\r\n    return <Redirect to=\"/cart/checkout\" />\r\n  }\r\n\r\n  if (auth && auth.membership && auth.membership.active) {\r\n    console.log(\"final check\");\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n\r\n      <div className=\"courseCtn\">\r\n        <div className=\"container\">\r\n\r\n          <div className=\"courseCtnHeader\">\r\n            <h1 className=\"coursePageTitle\">{course && course.data && course.data.name}</h1>\r\n          </div>\r\n\r\n          <div className=\"courseCtnBody\">\r\n            <div className=\"courseIntro\">\r\n              <iframe src={course && course.data && course.data.intro} width=\"640\" height=\"360\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen></iframe>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8 col-sm-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\" >Description</div>\r\n                  <div className=\"courseDescription card-body\">\r\n                    {parse(description())}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"curriculumCtn card\">\r\n                  <div className=\"card-body\">\r\n                    <h4 className=\"courseOverview\">Curriculum</h4>\r\n                    {classes}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4 offset-sm-2 offset-lg-0 col-sm-8\">\r\n                {(page.loaded && auth && auth.membership && auth.membership.active) ? null : (\r\n                  <div className=\"card purchaseButtons membershipCardCtn\">\r\n                    <div className=\"card-header\">\r\n                      Unlimited access all courses\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h1>$18/month</h1>\r\n                      <Link className=\"membershipPay\" id=\"membershipButton\" to=\"/membership\"> <span className=\"buyMembershipPrice\">Buy Membership</span></Link>\r\n                    </div>\r\n                  </div>\r\n                )\r\n                }\r\n\r\n                {userGotCourse && userGotCourse.length > 0 || (auth && auth.membership && auth.membership.active) ? (\r\n                  <div className=\"card purchaseButtons\">\r\n                    <div className=\"card-header\">\r\n\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <Link className=\"buyButton\" to={`/courses/${course && course.data && course.data.tag}/lessons/1`}><span className=\"buyCoursePrice\">Start Learning</span></Link>\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n                }\r\n                {userGotCourse && userGotCourse.length < 1 && (\r\n                  <div className=\"card purchaseButtons\">\r\n                    <div className=\"card-header\">\r\n                      Buy Lifetime Access:\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h1>${course && course.data && course.data.price} USD</h1>\r\n                      <Link to=\"/cart/checkout\"></Link>\r\n                      {auth && auth.isAuthenticated ?\r\n                        <button className=\"membershipPay buyLifetime\" onClick={goCheckout}><span className=\"buyCoursePrice\">Buy Course</span></button>\r\n                        : <button className=\"buyButton buyLifetime\"><Link to=\"/register\" className=\"buyCoursePrice\">Buy Course</Link></button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  course: state.courses,\r\n  auth: state.auth,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCheckout })(Course);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Courses.js",["293","294","295","296","297","298","299"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { getCourses } from '../../actions/courses';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport Loader from '../utils/Loader';\r\nimport { Form } from 'react-bootstrap';\r\nimport './Courses.css';\r\n\r\nconst Courses = () => {\r\n  const dispatch = useDispatch();\r\n  const courses = useSelector(state => state.courses);\r\n  const { loading, all } = courses;\r\n\r\n  const [coursesThumbnail, setCoursesThumbnail] = useState([]);\r\n\r\n  const [stateCourses, setStateCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!loading){\r\n      setStateCourses(all);\r\n    }\r\n\r\n  }, [loading]);\r\n\r\n  console.log(courses);\r\n  const images = require.context('../../images/courses', true);\r\n\r\n  // const loadMyThumbNail = async () => {\r\n  //   console.log(courses.all);\r\n  //   const allThumbnails = courses && courses.all.map((course, index) => {\r\n  //     return images(`./${course.tag}.jpg`);\r\n  //   });\r\n  //   setCoursesThumbnail(allThumbnails);\r\n  // };\r\n\r\n  const allCourses = stateCourses.map((course, index) => {\r\n\r\n    // if( course && course.hasThumbnail) {\r\n    //   img = images(`./${course.tag}.jpg`);\r\n    // } else {\r\n    //   img = images(`./default-course.jpg`);\r\n    // }\r\n\r\n    // let img = images(`./${course.tag}.jpg`);\r\n    let img = `/images/${course.tag}.jpg`;\r\n    if (course.tag != \"monthly-plan\") {\r\n      return (\r\n        <div className=\"offset-1 col-10 offset-md-0 col-md-4 col-lg-3\" key={index}>\r\n          <div className=\"cardBorder\">\r\n            <div className=\"courseThumbnail courseFeatured1\">\r\n              <Link to={`/courses/${course.tag}`}>\r\n                <img src={img} alt=\"courseThumbnail\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"courseTitleCtn\">\r\n              <Link to={`/courses/${course.tag}`}>{course.name}</Link>\r\n            </div>\r\n            <div className=\"separator\"></div>\r\n            <div className=\"priceCtn\">\r\n              <span className=\"studentNumbers\"><i className=\"fas fa-user\"></i> Telmo Sampaio</span><span className=\"price\">${course.price}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  })\r\n  \r\n  const findCourse = (e) => {\r\n    console.log(e.target.value);\r\n    const text = e.target.value.toLowerCase();\r\n    console.log(text);\r\n    const filteredCourses = courses && courses.all.filter((course) => {\r\n      console.log(course.name)\r\n      return course.name.toLowerCase().indexOf(text) > -1;\r\n    }) \r\n\r\n    console.log(filteredCourses);\r\n    setStateCourses(filteredCourses);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"main-container\">\r\n        <div className=\"courses container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3 my-4\">\r\n              {/* <input type=\"text\" placeholder=\"Find a course\" /> */}\r\n              <Form.Control type=\"text\" placeholder=\"Find a course\" onChange={findCourse}/>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"row\">\r\n            {loading ? <Loader /> : allCourses.length < 1 ? (\r\n              <div className=\"col-6\"><h2>No Courses found</h2></div>\r\n            ) : allCourses}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Courses;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Register.js",["300","301"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport './Register.css';\r\n\r\nconst Register = () => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tpasswordConfirm: '',\r\n\t\trandNumber1: Math.floor(Math.random() * 10 + 1),\r\n\t\trandNumber2: Math.floor(Math.random() * 10 + 1),\r\n\t\tformMessage: '',\r\n\t\tresult: 0\r\n\t});\r\n\tconst { name, email, password, passwordConfirm, randNumber1, randNumber2, formMessage, result } = formData;\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst auth = useSelector(state => state.auth);\r\n\tconst { isAuthenticated, message } = auth;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (formMessage) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// resetMessage();\r\n\t\t\t\tconsole.log(\"formMessage deleted\");\r\n\t\t\t\tsetFormData({ ...formData, formMessage: \"\" });\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t}, [formMessage])\r\n\r\n\tconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(\"Inside register\")\r\n\t\tif (password !== passwordConfirm) {\r\n\t\t\t// setAlert(\"Passwords do not match\", 'danger', 3000);\r\n\t\t\tconsole.log(\"passwords\")\r\n\t\t\tsetFormData({ ...formData, formMessage: \"Passwords do not match\" });\r\n\t\t} else if ((randNumber1 + randNumber2) !== parseInt(result)) {\r\n\t\t\tconsole.log(\"results\")\r\n\t\t\tconsole.log(\"Random Number 1\", randNumber1);\r\n\t\t\tconsole.log(typeof randNumber1);\r\n\t\t\tconsole.log(\"Random Number 2\", randNumber2);\r\n\t\t\tconsole.log(\"Result\", result);\r\n\t\t\tconsole.log(randNumber1 === result);\r\n\t\t\tconsole.log(randNumber1 !== result);\r\n\t\t\tsetFormData({ ...formData, formMessage: \"You are a robot!\" });\r\n\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Inside register action\")\r\n\t\t\tdispatch(register({ name, email, password, passwordConfirm }));\r\n\t\t\tsetFormData({\r\n\t\t\t\t...formData,\r\n\t\t\t\tname: '',\r\n\t\t\t\temail: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tpasswordConfirm: '',\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkResult = (e) => {\r\n\t\tsetFormData({ ...formData, result: e.target.value })\r\n\t}\r\n\r\n\t//Redirect if logged in\r\n\tif (isAuthenticated) {\r\n\t\treturn <Redirect to=\"/\" />\r\n\t}\r\n\tconsole.log(result);\r\n\tconsole.log(randNumber1)\r\n\tconsole.log(randNumber2)\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"registerCtn\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6 offset-3\">\r\n\t\t\t\t\t\t\t<div className=\"card registerCard\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"loginTitle\"><i className=\"fas fa-user\"></i> Create Your Account</h1>\r\n\t\t\t\t\t\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Name\" name=\"name\" required\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"email\" placeholder=\"Email Address\" name=\"email\" required\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"passwordConfirm\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t{randNumber1 && (\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"anti-bot\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>I'm not a Robot</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{randNumber1}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>+</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{randNumber2}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>=</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" onChange={checkResult} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" className=\"btn btn-success\" value=\"Register\" />\r\n\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t\t{formMessage && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"registerError\">\r\n\t\t\t\t\t\t\t\t\t\t<h1>{formMessage}</h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{message && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"registerSuccess\">\r\n\t\t\t\t\t\t\t\t\t\t<h1>{message}</h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p className=\"goLogin\">\r\n\t\t\t\t\t\t\t\tAlready have an account? <Link to=\"/login\">Log In</Link>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Register;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Logout.js",["302","303"],"import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Logout =  ({ history }) => {\r\n\r\n  useEffect( () => {\r\n    store.dispatch(logout());\r\n    history.push('/');\r\n  }, []);\r\n\r\n  // if(!isAuthenticated) {\r\n  //   return <Redirect to=\"/\" /> \r\n  // }\r\n  return (\r\n    <h1>Logout</h1>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Logout);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Membership.js",["304","305","306","307","308"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Login.js",["309"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import { setAlert } from '../../actions/alert';\r\nimport './Login.css';\r\nimport { login, resetMessage } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = ({ login, resetMessage, isAuthenticated, auth, active }) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\r\n\tconst [message, setMessage] = useState(\"\")\r\n\r\n\tuseEffect(() => {\r\n\t\tresetMessage();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMessage(auth.message);\r\n\t}, [auth.message])\r\n\r\n\tconst { email, password } = formData;\r\n\tconst onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tlogin({ email, password });\r\n\t}\r\n\r\n\t//Redirect if logged in\r\n\tif (isAuthenticated && active === \"notActive\") {\r\n\t\treturn <Redirect to=\"/activate\" />\r\n\t} else if (isAuthenticated) {\r\n\t\treturn <Redirect to=\"/\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"loginCtn\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6 offset-3\">\r\n\t\t\t\t\t\t\t<div className=\"card loginCard\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"loginTitle\"><i className=\"fas fa-user\"></i>Login to Telmo Academy</h1>\r\n\t\t\t\t\t\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Email Address</label><br />\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"email\" name=\"email\" required\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Password</label><br />\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" className=\"btn btn-success\" value=\"Login\" />\r\n\r\n\t\t\t\t\t\t\t\t\t{message && (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"loginError\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h1>{message}</h1>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-3 offset-3\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<h3><Link to=\"/forgotPassword\">Forgot your password?</Link></h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<h3><Link to=\"/register\">Create an Account</Link></h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nLogin.propTypes = {\r\n\t// setAlert: PropTypes.func.isRequired,\r\n\tlogin: PropTypes.func.isRequired,\r\n\tisAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\tauth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, resetMessage })(Login);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Checkout.js",["310","311","312","313"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport './Checkout.css';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { payAction, processPayment } from '../../actions/payments'; \r\nimport { removeCheckout, loadCheckout } from '../../actions/courses'; \r\n\r\nconst Membership = ({payAction, payment, processPayment, auth, removeCheckout, loadCheckout}) => {\r\n  const [data, setData ] = useState({\r\n    instance: {}\r\n  });\r\n\r\n  const [disableButton, setDisableButton] = useState(false)\r\n\r\n  console.log( payment );\r\n  const checkoutPrice = payment && payment.checkoutPrice;\r\n  const courseTag = payment && payment.checkout[0] && payment.checkout[0].tag;\r\n  console.log( checkoutPrice);\r\n\r\n  useEffect( () => {\r\n    payAction(auth.user && auth.user._id, auth.user && auth.token);\r\n    loadCheckout(auth.user && auth.user._id);\r\n  }, [auth && auth.user]);\r\n\r\n  const buy = () => {\r\n    let nonce;\r\n    let getNonce = data.instance.requestPaymentMethod()\r\n    .then( async data => {\r\n      console.log(data);\r\n      nonce = data.nonce\r\n\r\n      // console.log('send nonce and total to process ', nonce);\r\n      const paymentData = {\r\n        paymentMethodNonce: nonce,\r\n        amount: checkoutPrice\r\n      }\r\n\r\n      // processPayment(userId, token, paymentData)\r\n      // processPayment('131asdasd', 'adasdadad', paymentData)\r\n      \r\n      await processPayment(auth.user, auth.token, paymentData, courseTag);\r\n\r\n      console.log( \"before redirect\" );\r\n      // console.log( payment.result );\r\n      // console.log( payment.result.success );\r\n      \r\n      setDisableButton(true);\r\n    })\r\n    .catch(error => {\r\n      console.log('dropin error: ', error)\r\n    })\r\n  }\r\n\r\n  const showDropIn = () => (\r\n    payment.paymentToken && <Fragment>\r\n      <DropIn options ={{ \r\n        authorization: payment.paymentToken,\r\n        paypal: {\r\n          flow: \"vault\"\r\n        }\r\n      }} onInstance={ instance => (data.instance = instance)} />\r\n      <button onClick={buy} className={disableButton ? \"btn btn-primary invisible\" : \"btn btn-primary\" }>Proceed to Payment</button>\r\n    </Fragment>\r\n  )\r\n  \r\n\r\n\r\n  const checkoutItems = payment && payment.checkout.map( (course, i) => {\r\n   \r\n    return (\r\n      <div className=\"courseInCheckout\" key={i}>\r\n        <div>\r\n          <span className=\"courseDelete\" onClick={() => refreshCheckout(course._id, auth.user._id )}><i className=\"fas fa-trash\"></i></span>\r\n          <h3 className=\"checkoutCourse\">{course.name}</h3>\r\n        </div>\r\n        <span className=\"coursePrice\">${course.price}</span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const refreshCheckout = async (courseId, userId) => {\r\n    await removeCheckout(courseId, userId )\r\n    loadCheckout(userId);\r\n  }\r\n  console.log( auth && auth.user && !auth.user.authenticated );\r\n\r\n  if( auth && !auth.isAuthenticated && !auth.loading) {\r\n    console.log( \"inside register redirect \");\r\n    return <Redirect to=\"/register\" />\r\n  }\r\n  //Redirect if payment success\r\n\r\n  // console.log(auth.user);\r\n  // console.log( auth.token );\r\n  // console.log(data);\r\n  console.log(payment);\r\n\r\n  if( payment && payment.result) {\r\n    console.log(\"inside of redirect to success\");\r\n    return <Redirect to=\"/cart/checkout/success\" /> \r\n  }\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"checkoutCtn\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n          { payment && payment.checkout.length > 0 ? (\r\n            <div className=\"col-6\">\r\n              <div className=\"paymentCtn\">\r\n                <h1>Confirm your purchase</h1>\r\n                {showDropIn()}\r\n              </div>\r\n            </div>\r\n            ) : null\r\n          }\r\n            <div className={ payment && payment.checkout.length > 0 ? \"col-6 paper-gray\" : \"col-8 offset-md-2 paper-gray \" }>\r\n              <h1 className=\"basketTitle\">Products in Basket:</h1>\r\n              { checkoutItems.length > 0 ? checkoutItems : <Fragment><h1>Your basket is empty</h1> <Link to=\"/courses\">Continue shopping</Link></Fragment> }\r\n              { checkoutItems.length > 0 ? <div className=\"checkoutPrice\">Total: ${payment.checkoutPrice}</div> : null }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  payment: state.payment,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { \r\n  payAction, processPayment, removeCheckout, loadCheckout })(Membership);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipCheckout.js",["314","315","316"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { payAction, membershipPayment } from '../../actions/payments';\r\nimport './MembershipCheckout.css';\r\n\r\nconst MembershipCheckout = ({ payAction, payment,  paymentToken, auth, membershipPayment }) => {\r\n  const [data, setData] = useState({\r\n    instance: {}\r\n  });\r\n\r\n  const { duration } = useParams();\r\n\r\n  useEffect(() => {\r\n    payAction();\r\n  }, []);\r\n\r\n  const buy = (membershipDuration) => {\r\n    let nonce;\r\n    let getNonce = data.instance.requestPaymentMethod()\r\n      .then(data => {\r\n        console.log(data);\r\n        nonce = data.nonce\r\n\r\n        // console.log('send nonce and total to process ', nonce);\r\n        const paymentData = {\r\n          paymentMethodNonce: nonce\r\n        }\r\n\r\n        // processPayment(userId, token, paymentData)\r\n        membershipPayment(auth && auth.user, auth && auth.token, paymentData, membershipDuration);\r\n      })\r\n      .catch(error => {\r\n        console.log('dropin error: ', error)\r\n      })\r\n  }\r\n\r\n  const showDropIn = () => (\r\n    paymentToken && <Fragment>\r\n      <DropIn options={{\r\n        authorization: paymentToken,\r\n        paypal: {\r\n          flow: \"vault\"\r\n        }\r\n      }} onInstance={instance => (data.instance = instance)} />\r\n      {\r\n        duration === \"monthly\" ? (\r\n          <button onClick={() => buy(\"monthly\")} className=\"membershipPay\">Finish Payment</button>\r\n        ) : (\r\n          <button onClick={() => buy(\"yearly\")} className=\"membershipPay\">Finish Payment</button>\r\n        )\r\n      \r\n      }\r\n\r\n    </Fragment>\r\n  )\r\n  console.log(duration)\r\n  \r\n  if(payment && payment.paymentComplete) {\r\n    return <Redirect to=\"/membership/success\"/>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"MembershipCheckoutCtn\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 offset-lg-2\">\r\n              <div className=\"paypal\">\r\n                <h1>{ duration === \"monthly\" ? \"Monthly Subscription\" : \"Annual Subscription\"}</h1>\r\n                <div className=\"discountCtn\">\r\n                  <input type=\"text\" placeholder=\"Discound Code\"/><button>Apply</button>\r\n                </div>\r\n                \r\n                <div className=\"MembershipTotal\">\r\n                  <span>Total to pay:</span>\r\n                  <span>${ duration === \"monthly\" ? \"24.99\" : \"179.88\"} USD</span>\r\n                </div>\r\n                {showDropIn()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  paymentToken: state.payment.paymentToken,\r\n  payment: state.payment,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { payAction, membershipPayment })(MembershipCheckout);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\MembershipSuccess.js",["317","318","319","320"],"import React, {Fragment, useEffect} from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { resetPaymentResult } from '../../actions/payments';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\n\r\nconst MembershipSuccess = ({auth, payment}) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1>Your membership is now active</h1>\r\n            <h1>You will receive an email soon</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  active: state.auth.active,\r\n  courses: state.courses,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps)(MembershipSuccess);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\Activate.js",["321","322"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activateEmail } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { RESET_MESSAGE } from '../../contants/authConstants';\r\nconst Activate = ({ history }) => {\r\n\r\n  // if (!isAuthenticated) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { isAuthenticated, user, message, loading } = auth;\r\n\r\n  // useEffect(() => {\r\n  //   if(!isAuthenticated && !loading ) {\r\n  //     history.push('/');\r\n  //   }\r\n  // }, [isAuthenticated, loading])\r\n\r\n  useEffect(() => {\r\n    if(user && !loading) {\r\n      dispatch({ type: RESET_MESSAGE });\r\n    } else if (!loading && !user) {\r\n      history.push('/');\r\n    }\r\n  }, [user, loading])\r\n\r\n  const email = user && user.email;\r\n\r\n  const sendEmail = () => {\r\n    dispatch(activateEmail({ email }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>Please confirm Email Address</h1>\r\n            <h4>To activate your account</h4>\r\n            <button className=\"btn btn-success\" onClick={sendEmail}>Resend Email Activation</button>\r\n            {message && (\r\n              <h5>{message}</h5>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Activate;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CheckoutSuccess.js",["323","324","325"],"import React, { useState, useEffect} from 'react';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { resetPaymentResult } from '../../actions/payments';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport store from '../../store';\r\nimport './CheckoutSuccess.css';\r\n\r\nconst CheckoutSuccess = ({auth, payment}) => {\r\n\r\n  const [page, setPage] = useState({\r\n    loaded: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    //     console.log(auth);\r\n    // console.log(active == 'notActive');\r\n    // console.log(!auth.loading)\r\n\r\n    store.dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n    store.dispatch(resetPaymentResult());\r\n    // console.log(auth);\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if( auth && auth.isAuthenticated ) {\r\n      setPage({\r\n        loaded: true\r\n      })\r\n    }\r\n    \r\n  }, [auth && auth.isAuthenticated]);\r\n\r\n  if( auth && !auth.isAuthenticated && page.loaded) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>Thank you! Your Order is Complete</h1>\r\n            <h4>You will receive an email confirmation shortly.</h4>\r\n            <Link className=\"checkoutSuccessBtn\" to=\"/courses\">Start Learning</Link>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  active: state.auth.active,\r\n  courses: state.courses,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutSuccess);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ForgotPassword.js",["326","327"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { fgt_pass, resetMessage } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './ForgotPassword.css';\r\n\r\nconst ForgotPassword = ({ fgt_pass, resetMessage, auth }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: ''\r\n  });\r\n\r\n  const [message, setMessage] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    console.log(\"reseting the message, in forgotpass\");\r\n    resetMessage();\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMessage(auth.message);\r\n    \r\n  }, [auth.message]);\r\n\r\n  const { email } = formData;\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    fgt_pass({ email });\r\n    // removeMessage();\r\n    \r\n  }\r\n\r\n  // const removeMessage = () => {\r\n  //   setTimeout(()=> {\r\n  //     setMessage(\"\");\r\n  //   }, 7000);\r\n  // }\r\n\r\n  console.log(message);\r\n  return (\r\n    <Fragment>\r\n      <SecondHeader />\r\n      <div className=\"forgotPasswordCtn\">\r\n        {/* <h1 className=\"large text-primary\">Forgot Password</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Please enter your email address</p> */}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 offset-3\">\r\n              <div className=\"card forgotPasswordCard\">\r\n                <h1 className=\"loginTitle\"><i className=\"fas fa-envelope\"></i>Please enter your email address</h1>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <input type=\"submit\" className=\"btn btn-success\" value=\"Reset Password\" />\r\n                </form>\r\n                <h1 className=\"forgotPasswordMessage\">{message}</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { fgt_pass, resetMessage })(ForgotPassword);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseUpdate.js",["328","329"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { getCourse } from '../../actions/courses';\r\nimport { updateCourseAction } from '../../actions/courses';\r\nimport AdminSidebar from '../partials/AdminSidebar';\r\nimport './Admin.css'\r\n\r\nconst CourseUpdate = ({ course, auth, updateCourseAction }) => {\r\n\tconsole.log(auth);\r\n\r\n\tconst [courseState, setCourseState] = useState({\r\n\t\tid: \"\",\r\n\t\tcourseName: \"\",\r\n\t\tcourseIntro: \"\",\r\n\t\tcourseTag: \"\",\r\n\t\tcourseDescription: \" \",\r\n\t\tcoursePrice: \"\",\r\n\t\tclasses: [ {\r\n\t\t\tlecture: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\turl: \"\",\r\n\t\t\tduration: 0\r\n\t\t}],\r\n\t\tloaded: false\r\n\t});\r\n\r\n\tconst { courseTag } = useParams();\r\n\r\n\tuseEffect( () => {\r\n\t\tsetCourseValues();\r\n\t}, [courseState.loaded]);\r\n\t\r\n\tconst setCourseValues = async () => {\r\n\t\tawait store.dispatch(getCourse(courseTag));\r\n\r\n\t\tif( course && course.data && course.data._id ) {\r\n\t\t\tfor( let i=0; i < course.data.classes.length; i++) {\r\n\t\t\t\tdelete course.data.classes[i]._id\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tid: course && course.data && course.data._id,\r\n\t\t\tcourseName: course && course.data && course.data.name,\r\n\t\t\tcourseIntro: course && course.data && course.data.intro,\r\n\t\t\tcourseTag: course && course.data && course.data.tag,\r\n\t\t\tcourseDescription: course && course.data && course.data.description,\r\n\t\t\tcoursePrice: parseInt(course && course.data && course.data.price),\r\n\t\t\tclasses: course && course.data && course.data.classes,\r\n\t\t\tloaded: true\r\n\t\t})\r\n\t}\r\n\r\n\tconst addClass = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tclasses: [ ...courseState.classes, {\r\n\t\t\t\tlecture: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\turl: \"\",\r\n\t\t\t\tduration: 0\r\n\t\t\t} ]\r\n\t\t});\r\n\t}\r\n\r\n\tconst updateCourse = (e) => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateClass = (e) => {\r\n\t\t\r\n\t\tconst index = e.target.parentElement.firstChild.value;\r\n    console.log(\"current index is \" + index);\r\n\t\tconst stateRef = { ...courseState };\r\n\r\n\t\tif( e.target.name === ( \"duration\" || \"lecture\") ) {\r\n\t\t\tstateRef.classes[index][e.target.name] = parseInt( e.target.value );\r\n\t\t} else {\r\n\t\t\tstateRef.classes[index][e.target.name] = e.target.value;\r\n\t\t}\r\n\t\tsetCourseState(stateRef);\r\n\t}\r\n\t\t\r\n\tconst allClasses = courseState.classes && courseState.classes.length > 0 && courseState.classes.map( (theClass, i) => {\r\n\t\r\n\t\treturn (\r\n\t\t\t<div key={i}>\r\n\t\t\t\t<input type=\"hidden\" value={i}/>\r\n\t\t\t\t<input type=\"number\" name=\"lecture\" placeholder=\"lecture\" onChange={updateClass} value={courseState.classes[i].lecture} />\r\n\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\" onChange={  updateClass } value={courseState.classes[i].title} />\r\n\t\t\t\t<input type=\"text\" name=\"url\" placeholder=\"url\" onChange={  updateClass } value={courseState.classes[i].url} />\r\n\t\t\t\t<input type=\"number\" name=\"duration\" placeholder=\"duration\" onChange={  updateClass } value={courseState.classes[i].duration} />\r\n\t\t\t</div>\r\n\t\t\t// value={courseState.classes[i].lecture}\r\n\t\t)\r\n\t});\r\n\r\n\tconsole.log( course )\r\n\tconsole.log(courseState);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<AdminSidebar />\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Update the Course</h1>\r\n\t\t\t\t\t\t\t<label>Name</label><input required type=\"text\" name=\"courseName\" onChange={updateCourse} value={courseState.loaded ? courseState.courseName : \" \"} size=\"50\"/><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Intro</label><input required type=\"text\" name=\"courseIntro\" onChange={updateCourse} value={courseState.loaded ? courseState.courseIntro : \"\"} size=\"70\"/><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Tag</label><input required type=\"text\" name=\"courseTag\" onChange={updateCourse} value={courseState.loaded ? courseState.courseTag : \"\"} size=\"50\"/><br/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<label>Course Description</label><br/>\r\n\t\t\t\t\t\t\t\t<textarea required type=\"text\" name=\"courseDescription\" onChange={updateCourse} rows=\"15\" cols=\"80\" value={courseState.loaded ? courseState.courseDescription : \"\"} /><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Price</label><input required type=\"number\" name=\"coursePrice\" onChange={updateCourse} value={courseState.loaded ? courseState.coursePrice : \"\"} /><br/>\r\n\t\t\t\t\t\t\t\t<label>Course Classes</label>\r\n\t\t\t\t\t\t\t\t{allClasses}\r\n\t\t\t\t\t\t\t\t<button onClick={addClass}>Add Class</button>\r\n\t\t\t\t\t\t\t\t<button onClick={() => updateCourseAction(courseState)}>Update Course</button>\r\n\t\t\t\t\t\t\t\t{ course && course.message ? \r\n\t\t\t\t\t\t\t\t\t<h1>{course.message}</h1> : null }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcourse: state.courses,\r\n\tauth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { updateCourseAction })(CourseUpdate);\r\n\r\n\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ResetPassword.js",["330","331"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { reset_pass } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './ResetPassword.css';\r\n\r\nconst ResetPassword = ({history}) => {\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    passwordConfirm: '',\r\n    error: ''\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { message, isAuthenticated } = auth;\r\n\r\n  let { token } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/\");\r\n    } else if(message === 'Password reseted') {\r\n      setTimeout(() => {\r\n        return <Redirect to=\"/profile\" />\r\n      }, 3000);\r\n    }\r\n    \r\n  }, [isAuthenticated, message])\r\n\r\n  const { password, passwordConfirm, error } = formData;\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== passwordConfirm) {\r\n      setFormData({ ...formData, error: 'Passwords are not the same' });\r\n    } else {\r\n      dispatch(reset_pass({ password, passwordConfirm, token }));\r\n      setFormData({ ...formData, error: '' });\r\n    }\r\n\r\n  }\r\n  console.log(\"My token frontend is \" + token);\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  } else if(message === 'Password reseted') {\r\n    setTimeout(() => {\r\n      return <Redirect to=\"/profile\" />\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"forgotPasswordCtn\">\r\n        {/* <h1 className=\"large text-primary\">Forgot Password</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Please enter your email address</p> */}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 offset-3\">\r\n              <div className=\"card forgotPasswordCard\">\r\n                <h1 className=\"loginTitle\"><i className=\"fas fa-user\"></i> Please enter your new password</h1>\r\n                \r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" placeholder=\"Confirm Password\" name=\"passwordConfirm\" required onChange={e => onChange(e)} />\r\n                  </div>\r\n                  <input type=\"submit\" className=\"btn btn-success\" value=\"Update Password\" />\r\n                </form>\r\n                {error && (\r\n                  <h1 className=\"passwordUpdateMessage\">{error}</h1>\r\n                )}\r\n                {message && (\r\n                  <h1 className=\"passwordUpdateMessage\">{message}</h1>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  message: state.auth.message,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default ResetPassword;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\ActivateEmail.js",["332","333","334"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { activateEmailAction } from '../../actions/auth';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport Loader from '../utils/Loader';\r\n\r\nconst ActivateEmail = ({ history }) => {\r\n  const { token } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { user, message, active, loading } = auth;\r\n\r\n  console.log(\"This is my token \" + token);\r\n  useEffect(() => {\r\n    console.log(\"This is My Message+++++\");\r\n    console.log(message);\r\n    dispatch(activateEmailAction(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"current message is\");\r\n    console.log(message);\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"container checkoutSuccessCtn\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 checkoutSuccess\">\r\n            <h1>{message}</h1>\r\n            {loading ? <Loader /> : message === \"You are Activated\" ? (\r\n              <Link to='/courses' className='btn btn-success'>Start learning</Link>\r\n            ) : (\r\n                <Link to='/activate' className='btn btn-success'>Activate account</Link>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActivateEmail;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminCtn.js",["335"],"import React, { memo, useEffect } from 'react'\r\nimport AdminSidebar from './AdminSidebar';\r\nimport Courses from './Courses';\r\nimport CourseCreate from './CourseCreate';\r\nimport CourseUpdate from './CourseUpdate';\r\nimport FeatureCourses from './FeatureCourses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { useSelector } from 'react-redux';\r\nimport AllUsers from './AllUsers';\r\n\r\nconst AdminCtn = ({match, history}) => {\r\n  console.log(match);\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  useEffect(() => {\r\n    if (active === 'notActive' && !auth.loading) {\r\n      console.log(\"inside redirect\");\r\n      history.push(\"/activate\");\r\n    } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [auth, active]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"profileCtn\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <AdminSidebar />\r\n            { (match.params.page === \"courses\" && !match.params.subPage) ? <Courses /> : null }\r\n            { match.params.page === \"courses\" ? (match.params.subPage === \"create\" ? <CourseCreate /> : null) : null }\r\n            { match.params.page === \"courses\" ? (match.params.subPage === \"update\" ? <CourseUpdate /> : null) : null }\r\n            { match.params.page === \"featureCourses\" ? <FeatureCourses /> : null }\r\n            { match.params.page === \"users\" ? <AllUsers /> : null }\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(AdminCtn);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCtn.js",["336"],"import React, { memo, useEffect } from 'react'\r\nimport ProfileSidebar from './ProfileSidebar';\r\nimport Profile from './Profile';\r\nimport ProfileBilling from './ProfileBilling';\r\nimport ProfileCourses from './ProfileCourses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProfileCtn = ({match, history}) => {\r\n  console.log(match);\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  useEffect(() => {\r\n    if (active === 'notActive' && !auth.loading) {\r\n      console.log(\"inside redirect\");\r\n      history.push(\"/activate\");\r\n    } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [auth, active]);\r\n\r\n  return (\r\n    <>\r\n      <SecondHeader />\r\n      <div className=\"profileCtn\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <ProfileSidebar />\r\n            { match.params.page === \"courses\" ? <ProfileCourses /> \r\n            : match.params.page === \"billing\" ? <ProfileBilling />\r\n            : <Profile />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(ProfileCtn);\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseCreate.js",["337","338","339","340","341"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nimport { createCourseAction } from '../../actions/courses';\r\nimport './Admin.css'\r\nimport ImageUpload from '../utils/imageUpload';\r\n\r\n\r\nconst CourseCreate = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst auth = useSelector(state => state.auth);\r\n\tconst course = useSelector(state => state.courses);\r\n\r\n\tconst [courseState, setCourseState] = useState({\r\n\t\tcourseName: \"\",\r\n\t\tcourseIntro: \"\",\r\n\t\tcourseTag: \"\",\r\n\t\tcourseDescription: [],\r\n\t\tcoursePrice: \"\",\r\n\t\tclasses: [{\r\n\t\t\tlecture: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\turl: \"\",\r\n\t\t\tduration: 0\r\n\t\t}],\r\n\t});\r\n\tconst [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\tconst addClass = () => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tclasses: [...courseState.classes, {\r\n\t\t\t\tlecture: \"\",\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\turl: \"\",\r\n\t\t\t\tduration: 0\r\n\t\t\t}]\r\n\t\t});\r\n\t}\r\n\r\n\tconst updateCourse = (e) => {\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateClass = (e) => {\r\n\r\n\t\tconst index = e.target.parentElement.firstChild.value;\r\n\t\tconsole.log(\"current index is \" + index);\r\n\t\tconst stateRef = { ...courseState };\r\n\r\n\t\tstateRef.classes[index][e.target.name] = e.target.value;\r\n\t\tsetCourseState(stateRef);\r\n\t}\r\n\r\n\tconst allClasses = courseState.classes.map((theClass, i) => {\r\n\r\n\t\treturn (\r\n\t\t\t<div key={i}>\r\n\t\t\t\t<input type=\"hidden\" value={i} />\r\n\t\t\t\t<input type=\"text\" name=\"lecture\" placeholder=\"lecture\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"url\" placeholder=\"url\" onChange={updateClass} />\r\n\t\t\t\t<input type=\"text\" name=\"duration\" placeholder=\"duration\" onChange={updateClass} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t});\r\n\r\n\r\n\tconst saveBlogDetails = () => {\r\n\t\tsetEditorState(editorState);\r\n\t}\r\n\r\n\tconst createCourse = () => {\r\n\t\t// editor.save().then((outputData) => {\r\n\t\t// \tconsole.log(outputData);\r\n\t\t// \tsetCourseState({\r\n\t\t// \t\t...courseState,\r\n\t\t// \t\tcourseDescription: outputData\r\n\t\t// \t})\r\n\t\t// })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (courseState.courseDescription.length > 0) {\r\n\t\t\tdispatch(createCourseAction(courseState));\r\n\t\t}\r\n\t}, [courseState.courseDescription]);\r\n\r\n\tconst onEditorStateChange = (editorState) => {\r\n\t\tsetEditorState(editorState);\r\n\t\tsetCourseState({\r\n\t\t\t...courseState,\r\n\t\t\tcourseDescription: draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n\t\t})\r\n\t}\r\n\r\n\tconsole.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Create your Course</h1>\r\n\t\t\t\t\t\t\t\t<ImageUpload courseTag={courseState.courseTag} />\r\n\t\t\t\t\t\t\t\t<label>Name</label><input required type=\"text\" name=\"courseName\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Intro</label><input required type=\"text\" name=\"courseIntro\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Tag</label><input required type=\"text\" name=\"courseTag\" onChange={updateCourse} /><br />\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Description</label><br />\r\n\t\t\t\t\t\t\t\t{/* <textarea id=\"editorjs\" required type=\"text\" name=\"courseDescription\" onChange={updateCourse} rows=\"15\" cols=\"80\" /><br /> */}\r\n\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\t\t\ttoolbarClassName=\"toolbarClassName\"\r\n\t\t\t\t\t\t\t\t\twrapperClassName=\"wrapperClassName\"\r\n\t\t\t\t\t\t\t\t\teditorClassName=\"editorClassName\"\r\n\t\t\t\t\t\t\t\t\tonEditorStateChange={onEditorStateChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<label>Course Price</label><input required type=\"text\" name=\"coursePrice\" onChange={updateCourse} /><br />\r\n\t\t\t\t\t\t\t\t<label>Course Classes</label>\r\n\t\t\t\t\t\t\t\t{allClasses}\r\n\t\t\t\t\t\t\t\t<button onClick={addClass}>Add Class</button>\r\n\t\t\t\t\t\t\t\t<button onClick={createCourse}>Create Course</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CourseCreate;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\types.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\authConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\userConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\courses.js",["342","343","344"],"import axios from 'axios';\r\nimport {\r\n  COURSE_ACCESS,\r\n  GET_ONE_COURSE,\r\n  GET_LESSONS_WATCHED,\r\n  GET_COURSES,\r\n  GET_COURSES_OWNED,\r\n  ADD_CHECKOUT,\r\n  REMOVE_CHECKOUT,\r\n  LOAD_CHECKOUT,\r\n  CREATE_COURSE,\r\n  UPDATE_COURSE,\r\n  FINISH_LESSON\r\n} from './types';\r\nimport { COURSE_LIST_REQUEST, \r\n  SAVE_FEATURED_COURSES_FAIL, \r\n  SAVE_FEATURED_COURSES_REQUEST, \r\n  SAVE_FEATURED_COURSES_SUCCESS \r\n} from '../contants/courseConstants';\r\nimport { RESET_MESSAGE } from '../contants/authConstants';\r\n\r\nexport const getCourses = (courses) => async dispatch => {\r\n\r\n  try {\r\n    dispatch({\r\n      type: COURSE_LIST_REQUEST\r\n    });\r\n\r\n    console.log(\"inside actions getCourses\");\r\n\r\n    const body = JSON.stringify({ courses });\r\n\r\n    const res = await axios.post(`/api/getCourses`, body, {\r\n      headers: {\r\n        Accept: 'application/json', \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_COURSES,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    // const errors = err.response.data.message;\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const getCoursesOwned = (userId) => async dispatch => {\r\n  try {\r\n    // console.log(\"inside actions getCoursesOwned\");\r\n    // console.log( userId )\r\n\r\n    const body = JSON.stringify({ userId });\r\n\r\n    const res = await axios.post(`/api/getCoursesOwned`, body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\"\r\n        // Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_COURSES_OWNED,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const getCourse = (courseTag) => async dispatch => {\r\n  // if(localStorage.token) {\r\n  //     setAuthToken(localStorage.token);\r\n  // }\r\n\r\n  try {\r\n    console.log(\"inside getCourse\");\r\n\r\n    const body = JSON.stringify({ courseTag });\r\n    console.log(body);\r\n    const res = await axios.post(`/api/getCourse`, body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: GET_ONE_COURSE,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    // const errors = err.response.data.message;\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const lessonsWatchedAction = (courseTag, token) => async dispatch => {\r\n  try {\r\n    console.log(\"inside lessonsWatchedAction\");\r\n    console.log(token)\r\n\r\n    const body = JSON.stringify({ courseTag });\r\n    console.log(body);\r\n    const res = await axios.post(`/api/getLessonsWatched`, body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: GET_LESSONS_WATCHED,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const createCourseAction = ({ courseName, courseIntro, courseTag, courseDescription, coursePrice, classes }) => async dispatch => {\r\n  console.log(\"Inside Create COURSE ACTION\");\r\n  try {\r\n    const body = JSON.stringify({ courseName, courseIntro, courseTag, courseDescription, coursePrice, classes });\r\n\r\n    const res = await axios.post(`/api/createCourse`, body, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    // console.log(res.data);\r\n    console.log(body);\r\n    console.log(\"inside create course\");\r\n\r\n    // dispatch({\r\n    //   type: CREATE_COURSE,\r\n    //   payload: res.data\r\n    // });\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const addCheckout = ({ selectedCourse, userEmail }) => async dispatch => {\r\n  try {\r\n    console.log(\"This is the course\");\r\n    console.log(userEmail);\r\n    const body = JSON.stringify({ selectedCourse, userEmail });\r\n    console.log(body);\r\n    const res = await axios.post(\"/api/addCheckout\", body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: ADD_CHECKOUT,\r\n      payload: res.data.checkout\r\n    });\r\n\r\n    console.log(selectedCourse);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const removeCheckout = (courseId, userId) => async dispatch => {\r\n  try {\r\n\r\n    const body = JSON.stringify({ courseId, userId });\r\n    console.log(body);\r\n    const res = await axios.post(\"/api/removeCheckout\", body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: REMOVE_CHECKOUT,\r\n      payload: res.data.checkout\r\n    });\r\n\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const updateCourseAction = ({ id, courseName, courseIntro, courseTag, courseDescription, coursePrice, classes }) => async dispatch => {\r\n  try {\r\n\r\n    const body = JSON.stringify({ id, courseName, courseIntro, courseTag, courseDescription, coursePrice, classes });\r\n    console.log(body);\r\n    const res = await axios.post(\"/api/updateCourse\", body, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: UPDATE_COURSE,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const loadCheckout = (userId) => async dispatch => {\r\n  try {\r\n    console.log(\"inside loadCheckout action\");\r\n    const body = JSON.stringify({ userId });\r\n    const res = await axios.post(\"/api/loadCheckout\", body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    // console.log(res);\r\n\r\n    // console.log(res.data);\r\n    dispatch({\r\n      type: LOAD_CHECKOUT,\r\n      payload: res.data\r\n    });\r\n\r\n    // dispatch({\r\n    //   type: RESET_MESSAGE\r\n    // });\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const courseAccess = (courseTag, userId) => async dispatch => {\r\n\r\n  try {\r\n    console.log(userId);\r\n    const body = JSON.stringify({ courseTag, userId });\r\n    console.log(\"inside courseAccess\");\r\n    console.log(body);\r\n    const res = await axios.post(\"/api/courseAccess\", body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: COURSE_ACCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const finishLessonAction = (lesson, courseId, token) => async dispatch => {\r\n  try {\r\n    console.log(\"clicking lesson finished \" + lesson);\r\n\r\n    const body = JSON.stringify({ lesson, courseId });\r\n    console.log(body);\r\n    const res = await axios.post(\"/api/finishLesson\", body, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: FINISH_LESSON,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const saveFeaturedCoursesAction = (data, token) => async dispatch => {\r\n  try {\r\n    console.log(data);\r\n    dispatch({\r\n      type: SAVE_FEATURED_COURSES_REQUEST\r\n    });\r\n\r\n    console.log(data);\r\n    const res = await axios.post(\"/api/saveFeaturedCourses\", data, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: SAVE_FEATURED_COURSES_SUCCESS,\r\n      payload: res.data.courses\r\n    });\r\n\r\n  } catch (error) {\r\n    const errors = error.response.data;\r\n    console.log(\"SAVING FAIL\");\r\n    console.log(errors);\r\n    dispatch({\r\n      type: SAVE_FEATURED_COURSES_FAIL,\r\n      payload: errors.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\pages\\CourseCard.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileBilling.js",["345","346"],"import React, { useEffect } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { checkMembership, cancelMembership, membershipResubscribe } from '../../actions/membership';\r\nimport { getBilling } from '../../actions/payments';\r\nimport './Profile.css';\r\n\r\nfunction ProfileBilling() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const payment = useSelector(state => state.payment);\r\n  \r\n  useEffect(() => {\r\n\r\n    dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n    // console.log(\"before check membership \");\r\n    if (auth && auth.user && auth.user.membership && auth.user.membership.customerId) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n\r\n    dispatch(getBilling());\r\n\r\n    // console.log(auth);\r\n  }, [auth && auth.user && auth.user._id]);\r\n \r\n  const userBilling = payment && payment.billing && payment.billing.map((bill) => {\r\n    const date = new Date(bill.date);\r\n    const newDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    return (\r\n      <div key={bill._id} className=\"row billingRow\">\r\n        <div className=\"col-2\"><h4>{newDate}</h4></div>\r\n        <div className=\"col-3\"><h4>{bill.productName}</h4></div>\r\n        <div className=\"col-3\"><h4>{bill._id}</h4></div>\r\n        <div className=\"col-2\"><h4>${bill.price}</h4></div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const untilDate = new Date(auth && auth.membership.paidThroughDate);\r\n  const newUntilDate = `${untilDate.getDate()}/${untilDate.getMonth() + 1}/${untilDate.getFullYear()}`;\r\n\r\n  return (\r\n    <div className=\"col-lg-9 col-md-12 col-sm-12 billingCtn\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          Membership Details\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {auth && auth.membership && !auth.membership.active && (\r\n            <h3><b>Membership Status:</b> Not active</h3>\r\n          )}\r\n          {auth && auth.membership.active && (\r\n            <>\r\n              <h3><b>Membership Status:</b> {auth && auth.membership.status}</h3>\r\n              <h3><b>Membership Valid Until:</b> {newUntilDate}</h3>\r\n            </>\r\n          )}\r\n          {auth && auth.membership.status === \"Active\" && (\r\n            <button className=\"cancelMembership\" onClick={() => dispatch(cancelMembership(auth && auth.token))}>Cancel Membership</button>\r\n          )}\r\n          {auth && auth.membership.status === \"Canceled\" && auth && auth.user &&\r\n            auth.user.membership && auth.user.membership.billingHistory && auth.user.membership.billingHistory.length > 0 && (\r\n              <button onClick={() => dispatch(membershipResubscribe(auth && auth.token))} className=\"actionButton\">Resubscribe</button>\r\n            )}\r\n          {auth && auth.membership && auth.membership.status === \"Failed\" && (\r\n            <Link to=\"/membership\">Add a new payment method</Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <h2><b>Billing History</b></h2>\r\n      <div className=\"userBillingCtn\">\r\n        <div className=\"billingScroll\">\r\n          <div className=\"row userBillingHistoryTitle\">\r\n            <div className=\"col-2\"><h4>Date - dd/mm/yyyy</h4></div>\r\n            <div className=\"col-3\"><h4>Product Name</h4></div>\r\n            <div className=\"col-3\"><h4>Order Number</h4></div>\r\n            <div className=\"col-2\"><h4>Sale Price</h4></div>\r\n          </div>\r\n          <hr />\r\n          {userBilling}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileBilling;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileCourses.js",["347","348","349","350","351"],"import React, { useEffect, Fragment, useState, useRef } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { checkMembership } from '../../actions/membership';\r\nimport Loader from '../utils/Loader';\r\nimport './Profile.css';\r\n\r\nfunction ProfileCourses() {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading } = auth;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n\r\n    console.log(\"before check membership \");\r\n    if (auth && auth.user && auth.user.membership && auth.user.membership.customerId) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n  }, [auth && auth.user && auth.user._id]);\r\n\r\n  const coursesimage = require.context('../../images/courses', true);\r\n\r\n  const allCourses = auth && auth.coursesOwned.map((course, index) => {\r\n    let img = \"\";\r\n    if (course && course.hasThumbnail) {\r\n      img = coursesimage(`./${course.tag}.jpg`);\r\n    } else {\r\n      img = coursesimage(`./default-course.jpg`);\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-xl-3 col-lg-4 col-md-6\" key={index}>\r\n        <div className=\"cardBorder\">\r\n          <div className=\"courseThumbnail courseFeatured1\">\r\n            <Link to={`/courses/${course.tag}/lessons/1`}>\r\n              <img src={img} alt=\"javascript\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"courseTitleCtn\">\r\n            <Link to={`/courses/${course.tag}/lessons/1`}>{course.name}</Link>\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div className=\"priceCtn\">\r\n            <span className=\"studentNumbers\"><i className=\"fas fa-user\"></i> Telmo Sampaio</span><span className=\"price\">${course.price}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"col-lg-9 col-md-8\">\r\n      <div className=\"myCoursesCtn\">\r\n        <h1>My Courses</h1>\r\n        <div className=\"row\">\r\n          {loading ? <Loader /> : allCourses.length > 0 ? allCourses :\r\n            <div className=\"col-12\">\r\n              <h2>No courses owned...</h2>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileCourses.propTypes = {\r\n  // getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n  // profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileCourses;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AllUsers.js",["352","353","354","355","356","357"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\Profile.js",["358","359","360","361","362","363"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCoursesOwned } from '../../actions/courses';\r\nimport { updateUserAction } from '../../actions/auth';\r\nimport { checkMembership } from '../../actions/membership';\r\nimport './Profile.css';\r\n\r\nfunction Profile( ) {\r\n  const [cropState, setCropState] = useState({\r\n    src: null,\r\n    crop: {\r\n      aspect: 1,\r\n      height: 297,\r\n      unit: \"px\",\r\n      width: 297,\r\n      x: 0,\r\n      y: 0\r\n    }\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const { active } = auth;\r\n\r\n  const [page, setPage] = useState({\r\n    loaded: false,\r\n    showImagePreview: false\r\n  });\r\n\r\n  const [userDetails, setUserDetails] = useState({\r\n    name: '',\r\n    newPassword: '',\r\n    newPasswordConfirm: '',\r\n    password: '',\r\n    error: ''\r\n  })\r\n\r\n  const [imageUpload, setImageUpload] = useState({\r\n    error: ''\r\n  })\r\n\r\n  const loaderDelay = () => {\r\n    setTimeout(() => {\r\n      setPage({ ...page, loaded: true })\r\n    }, 500);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch(getCoursesOwned(auth && auth.user && auth.user._id));\r\n    // console.log(auth.user.name);\r\n    console.log(\"before check membership \");\r\n    if (auth && auth.user && auth.user.membership && auth.user.membership.customerId) {\r\n      dispatch(checkMembership(auth.token));\r\n    }\r\n\r\n    setUserDetails({\r\n      ...userDetails,\r\n      name: auth && auth.user && auth.user.name\r\n    })\r\n\r\n    // console.log(auth);\r\n  }, [auth && auth.user && auth.user._id]);\r\n\r\n  const updateUserDetails = (event) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  const submitUserDetails = (event) => {\r\n    event.preventDefault();\r\n    if (userDetails.newPassword !== userDetails.newPasswordConfirm) {\r\n      setUserDetails({\r\n        ...userDetails,\r\n        error: \"Passwords do not match\"\r\n      })\r\n    }\r\n\r\n    dispatch(updateUserAction(auth && auth.token, userDetails));\r\n  }\r\n\r\n  const imageMaxSize = 2000000 // bytes\r\n  const acceptedFileTypes = 'image/png, image/jpg, image/jpeg, image/gif';\r\n  const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => { return item.trim() });\r\n  //let imageRef = null;\r\n  let imageRef = useRef();\r\n  let fileRef = useRef();\r\n\r\n  let userPic = null;\r\n  const images = require.context('../../images/', true);\r\n\r\n  let img;\r\n\r\n  if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n    // import Pic from `/${auth.user._id}.jpg`;\r\n    // userPic = <img src={`/${auth.user._id}.jpg`} />\r\n    img = images(`./${auth.user._id}.jpg`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" onLoad={() => setPage({ loaded: true })} />\r\n  } else {\r\n    img = images(`./default.png`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" onLoad={() => setPage({ loaded: true })} />\r\n  }\r\n\r\n  const onSelectFile = e => {\r\n    console.log(\"INSIDE onSelectFile\");\r\n    console.log(e.target.files[0].size);\r\n    console.log(e.target.files[0].type);\r\n    console.log(acceptedFileTypesArray)\r\n\r\n    if (e.target.files[0].size > imageMaxSize) {\r\n      setImageUpload({ error: 'Image size should be less than 2 MB' });\r\n      return\r\n    } else if (!acceptedFileTypesArray.includes(e.target.files[0].type)) {\r\n      setImageUpload({ error: 'Image should be of the type JPG, JPEG, PNG or GIF' });\r\n      return\r\n    }\r\n\r\n    setPage({ ...page, showImagePreview: true })\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      console.log(reader.result);\r\n      reader.addEventListener('load', () => {\r\n\r\n        setCropState({\r\n          ...cropState,\r\n          src: reader.result\r\n        })\r\n        // setPage({ ...page, showImagePreview: true })\r\n      }\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onImageLoaded = async image => {\r\n    console.log(image);\r\n    imageRef.current = image;\r\n  };\r\n\r\n  const onCropComplete = crop => {\r\n    makeClientCrop(crop);\r\n  };\r\n\r\n  const onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    console.log(\"inside onCropChange\");\r\n    setCropState({\r\n      ...cropState,\r\n      crop\r\n    });\r\n  };\r\n\r\n  const makeClientCrop = async (crop) => {\r\n    console.log(imageRef.current);\r\n    if (imageRef.current && crop.width && crop.height) {\r\n      console.log(crop);\r\n      const croppedImageUrl = await getCroppedImg(\r\n        imageRef.current,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      console.log(croppedImageUrl);\r\n      setCropState({\r\n        ...cropState,\r\n        croppedImageUrl: croppedImageUrl\r\n      });\r\n    }\r\n  }\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    console.log(image);\r\n    console.log(crop);\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const reader = new FileReader()\r\n    canvas.toBlob(blob => {\r\n      reader.readAsDataURL(blob)\r\n      reader.onloadend = () => {\r\n        dataURLtoFile(reader.result, `${auth.user._id}.jpg`);\r\n      }\r\n    })\r\n  }\r\n\r\n  const dataURLtoFile = (dataurl, filename) => {\r\n    let arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    let croppedImage = new File([u8arr], filename, { type: mime });\r\n    setCropState({\r\n      ...cropState,\r\n      croppedImage: croppedImage\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', cropState.croppedImage);\r\n    formData.append('userId', auth.user._id);\r\n\r\n    console.log(formData);\r\n\r\n    const res = await axios.post(\"/api/users/profilePic\", formData, config);\r\n    console.log(\"res.data\");\r\n    console.log(res.data);\r\n  }\r\n\r\n  const closeImagePreview = () => {\r\n    setPage({ ...page, showImagePreview: false })\r\n    console.log(fileRef.current);\r\n    fileRef.current.value = null;\r\n    setCropState({\r\n      ...cropState,\r\n      crop: {\r\n        aspect: 1 / 1\r\n      }\r\n    })\r\n  }\r\n\r\n  // if (active == 'notActive' && !auth.loading) {\r\n  //   console.log(\"inside redirect\");\r\n  //   return <Redirect to=\"/activate\" />\r\n  // } else if (auth && !auth.isAuthenticated && !auth.loading) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n\r\n  console.log(page);\r\n  // console.log(cropState)\r\n\r\n  return (\r\n\r\n    <div className=\"col-xl-10 col-lg-9 col-md-12 col-sm-12 userRightCol\">\r\n      <div className=\"userDetails\">\r\n        {imageUpload.error &&\r\n          <h1>{imageUpload.error}</h1>\r\n        }\r\n        {!page.loaded && (\r\n          <div className=\"preLoaderProfilePic\">\r\n            <div className=\"spinner-border \" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"uploadButtonCtn\">\r\n          <label htmlFor=\"file\">{userPic}</label>\r\n          <input ref={fileRef} type=\"file\" id=\"file\" accept=\"image/*\" onChange={onSelectFile} />\r\n        </div>\r\n\r\n        {page.showImagePreview && (<div className=\"imagePreviewOverlay\">\r\n          <i className=\"fa fa-times-circle closeOverlay\" onClick={closeImagePreview}></i>\r\n          <h2>Crop your Image</h2>\r\n          {cropState.src && (\r\n            <ReactCrop\r\n              src={cropState.src}\r\n              crop={cropState.crop}\r\n              ruleOfThirds\r\n              onImageLoaded={onImageLoaded}\r\n              onComplete={onCropComplete}\r\n              onChange={onCropChange}\r\n            />\r\n          )}\r\n          {cropState.croppedImageUrl && (\r\n            <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={cropState.croppedImageUrl} />\r\n          )}\r\n          {cropState.src ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <button type=\"submit\" className=\"uploadButton\">Save image</button>\r\n            </form>\r\n          ) : null\r\n          }\r\n        </div>)\r\n        }\r\n\r\n        <h3>Upload a new profile image</h3>\r\n        <form onSubmit={submitUserDetails}>\r\n          <label htmlFor=\"\">Full Name</label>\r\n          <input type=\"text\" placeholder=\"My name\" value={userDetails.name || \"\"} name=\"name\" onChange={updateUserDetails} />\r\n          <label htmlFor=\"\">New Password</label>\r\n          <input type=\"password\" name=\"newPassword\" onChange={updateUserDetails} />\r\n          <label htmlFor=\"\">Confirm Password</label>\r\n          <input type=\"password\" name=\"newPasswordConfirm\" onChange={updateUserDetails} />\r\n\r\n          <hr />\r\n          <label htmlFor=\"\">To save changes, enter current password</label>\r\n          <input type=\"password\" name=\"password\" onChange={updateUserDetails} />\r\n          <p className=\"formError\">{auth && auth.message}</p>\r\n          <button className=\"saveChanges\" type=\"submit\">Save Changes</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\CourseUpdate.js",["364","365","366"],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\private\\ProfileSidebar.js",["367","368","369"],"import React, { useState } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../utils/Loader';\r\nimport './Profile.css';\r\n\r\nfunction ProfileSidebar( ) {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading } = auth;\r\n\r\n  let userPic = null;\r\n  const images = require.context('../../images/', true);\r\n\r\n  let img;\r\n\r\n  if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n    img = images(`./${auth.user._id}.jpg`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" />\r\n  } else {\r\n    img = images(`./default.png`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-xl-2 col-lg-3 col-md-4 userLeftCol\">\r\n      { loading ? <Loader /> : userPic }\r\n      <h3>{auth && auth.user && auth.user.name}</h3>\r\n      <h4>{auth && auth.user && auth.user.email}</h4>\r\n\r\n      <ul className=\"profileLinks\">\r\n        <li>\r\n          <NavLink exact to=\"/profile\" activeClassName=\"activeProfilePage\"><i className=\"fa fa-user\"></i>USER PROFILE</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/profile/courses\" activeClassName=\"activeProfilePage\"><i className=\"fa fa-graduation-cap\"></i>COURSES PURCHASED</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/profile/billing\" activeClassName=\"activeProfilePage\"><i className=\"far fa-credit-card\"></i>BILLING</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\FeatureCourses.js",["370","371","372"],"import React, {useRef, useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCourses, saveFeaturedCoursesAction } from '../../actions/courses';\r\nimport './FeatureCourses.css';\r\n\r\nconst FeatureCourses = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const auth = useSelector(state => state.auth);\r\n  const {loading, token} = auth;\r\n\r\n  \r\n  const courses = useSelector(state => state.courses);\r\n  const courseLoading = courses.loading;\r\n  const { message } = courses;\r\n\r\n  courses.all.length > 0 && courses.all.sort((a, b) => {\r\n    return a.featuredPosition - b.featuredPosition;\r\n  })\r\n  \r\n  const [data, setData] = useState(courses.all);\r\n\r\n  const [allItems, setAllItems] = useState([])\r\n\r\n  const updateCourses = () => {\r\n    const allupdatedCourses = courses.all.length > 0 && courses.all.map((course, i) => {\r\n      return {\r\n        id: course._id,\r\n        name: course.name,\r\n        tag: course.tag,\r\n        price: course.price,\r\n        newIndex: i + 1,\r\n        featured: course.featured,\r\n        featuredPosition: i + 1\r\n      }\r\n    });\r\n\r\n    console.log(allupdatedCourses);\r\n\r\n    setData(allupdatedCourses);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    dispatch(getCourses());\r\n  }, [loading]);\r\n  \r\n  useEffect(() => {\r\n    if( !courseLoading ) {\r\n      updateCourses();\r\n    }\r\n\r\n\t}, [courseLoading]);\r\n\r\n  \r\n\r\n  let item = useRef();\r\n  let itemOver = useRef();\r\n  let dropzoneRef = useRef();\r\n\r\n  const onDragStart = (event) => {\r\n    console.log(\"---- ON DRAG START -------\");\r\n    item.current = event.target;\r\n    console.log(item.current);\r\n    event\r\n      .dataTransfer\r\n      .setData('text/plain', event.target.id);\r\n  \r\n    // event\r\n    //   .currentTarget\r\n    item.current\r\n      .style\r\n      .backgroundColor = 'yellow';\r\n  }\r\n\r\n  const onDrop = (event) => {\r\n    console.log(\"on drop starting\");\r\n    console.log(item.current);\r\n    console.log(itemOver.current);\r\n    let currenTarget = itemOver.current;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // const id = event\r\n    //   .dataTransfer\r\n    //   .getData('text');\r\n\r\n    //   console.log(id);\r\n    //   const draggableElement = document.getElementById(id);\r\n    //   console.log(draggableElement);\r\n\r\n      const dropzone = event.target;\r\n      // dropzone.appendChild(draggableElement);\r\n      dropzone.appendChild(itemOver.current);\r\n\r\n      const test = [...allItems, itemOver.current]\r\n\r\n      setAllItems(test);\r\n      console.log(currenTarget.dataset.item);\r\n      // setFeatureCourses([...featureCourses, JSON.parse(dropzone.querySelector(\".example-draggable\").dataset.item) ]);\r\n      // console.log(JSON.parse(dropzone.querySelector(\".example-draggable\").dataset.item));\r\n\r\n      // const allFeatureCourses = [];\r\n      // let featureCourseNodes = dropzoneRef.current.querySelectorAll(\".example-draggable\");\r\n      // for(let i=0; i < featureCourseNodes.length; i++) {\r\n      //   allFeatureCourses.push(featureCourseNodes[i].dataset.item);\r\n      // }\r\n\r\n      // console.log(featureCourses);\r\n      \r\n\r\n    //   event\r\n    // .dataTransfer\r\n    // .clearData();\r\n  }\r\n\r\n  const onDragOver = (event) => {\r\n    // event.stopPropagation();\r\n    console.log(\"calling OnDragOver\");\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  const onDragEnd = (e) => {\r\n    console.log(\"----ON DRAG END---------\");\r\n    console.log(item.current);\r\n    item.current.style.display = 'block';\r\n\r\n    e.target.classList.remove(\"drag-up\");\r\n    itemOver.current.classList.remove(\"drag-up\");\r\n\r\n    e.target.classList.remove(\"drag-down\");\r\n    itemOver.current.classList.remove(\"drag-down\");\r\n    \r\n    let newData = [...data];\r\n    let from = Number(item.current.dataset.id);\r\n    let to = Number(itemOver.current.dataset.id);\r\n\r\n    console.log(from);\r\n    console.log(to);\r\n    newData.splice(to, 0, newData.splice(from, 1)[0]);\r\n\r\n    // console.log(newData);\r\n    // console.log(newData.splice(from, 1)[0])\r\n\r\n    // //set newIndex to judge direction of drag and drop\r\n    newData = newData.map((doc, index)=> {\r\n      doc.newIndex = index + 1;\r\n      return doc;\r\n    })\r\n\r\n    console.log(newData);\r\n\r\n    setData(newData);\r\n\r\n    // console.log(dropzoneRef.current.dataset.id);\r\n    // console.log(dropzoneRef.current.querySelectorAll(\".example-draggable\")[0]);\r\n    // console.log(dropzoneRef.current.querySelectorAll(\".example-draggable\"));\r\n\r\n    // const allFeatureCourses = [];\r\n    //   let featureCourseNodes = dropzoneRef.current.querySelectorAll(\".example-draggable\");\r\n    //   console.log(featureCourseNodes);\r\n    //   for(let i=0; i < featureCourseNodes.length; i++) {\r\n    //     console.log(\"THIS IS\");\r\n    //     console.log(featureCourseNodes[i]);\r\n    //     console.log(JSON.parse(featureCourseNodes[i].dataset.item));\r\n    //     allFeatureCourses.push(JSON.parse(featureCourseNodes[i].dataset.item));\r\n    //   }\r\n\r\n    // console.log(allFeatureCourses);\r\n  }\r\n\r\n  const dragOverItem = (e) => {\r\n    console.log(\"------ DRAG OVER ITEM -----\");\r\n    console.log(item.current);\r\n    \r\n\r\n      let featureCourseNodes = document.querySelectorAll(\".example-draggable\");\r\n      for(let i=0; i < featureCourseNodes.length; i++) {\r\n        featureCourseNodes[i].classList.remove(\"drag-up\", \"drag-down\");\r\n      }\r\n\r\n\r\n    \r\n    //itemOver.current = e.target;\r\n    itemOver.current = e.target;\r\n    // item.current = e.target;\r\n    console.log(\"ITEM OVER \");\r\n    console.log(itemOver.current);\r\n\r\n    console.log(\"EVENT TARGET \");\r\n    console.log(item.current);\r\n\r\n    item.current.style.display = \"none\";\r\n    //itemOver.current.style.display = \"none\";\r\n\r\n    if (e.target.tagName !== \"DIV\") {\r\n      return;\r\n    }\r\n\r\n    const fromIndex = JSON.parse(item.current.dataset.item).newIndex;\r\n    console.log(\"fromIndex \" + fromIndex);\r\n\r\n    const toIndex = JSON.parse(itemOver.current.dataset.item).newIndex;\r\n    console.log(\"toIndex \" + toIndex);\r\n\r\n    const animateName = fromIndex > toIndex ? \"drag-up\" : \"drag-down\";\r\n    console.log(\"animateName \" + animateName);\r\n\r\n\r\n    if (itemOver.current && item.current.dataset.item !== itemOver.current.dataset.item) {\r\n      itemOver.current.classList.remove(\"drag-up\", \"drag-down\");\r\n      // itemOver.current.classList.remove(\"drag-up\", \"drag-down\");\r\n      // itemOver.current = e.target\r\n    }\r\n\r\n    if(!itemOver.current.classList.contains(animateName)) {\r\n      itemOver.current.classList.add(animateName);\r\n      // itemOver.current = e.target;\r\n    }\r\n\r\n  }\r\n\r\n  // const allData = data.map((item, i) => {\r\n  //   return (\r\n  //     <div\r\n  //         className=\"example-draggable\"\r\n  //         draggable=\"true\"\r\n  //         onDragStart={onDragStart}\r\n  //         onDragEnd={onDragEnd}\r\n  //         onDragOver={dragOverItem}\r\n  //         data-id={i}\r\n  //         data-item={JSON.stringify(item)}\r\n         \r\n  //     >{item.name}</div>\r\n  //   )\r\n  // })\r\n\r\n  const updateFeatureCourses = (i) => {\r\n    console.log(\"Updating!!!\");\r\n    let copyFeature = [...data];\r\n    \r\n    console.log(copyFeature[i]);\r\n    console.log(copyFeature[i].featured)\r\n    copyFeature[i] = {\r\n      ...copyFeature[i],\r\n      featured: !copyFeature[i].featured\r\n    }\r\n\r\n    console.log(copyFeature[i].featured);\r\n    setData(copyFeature)\r\n  }\r\n\r\n  const allCourses = data.length > 0 && data.map((course, i) => {\r\n    // if(course.name === \"css animation\") {\r\n    //   console.log(course.name);\r\n    //   console.log(course.featured)\r\n    // }\r\n    return (\r\n      <div key={i}>\r\n        <div className=\"example-draggable\"\r\n            draggable=\"true\"\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n            onDragOver={dragOverItem}\r\n            data-id={i}\r\n            data-item={JSON.stringify(course)}\r\n        >{course.name}</div>\r\n        <input type=\"checkBox\" value={course.featured} checked={course.featured ? \"checked\" : false} onChange={() => updateFeatureCourses(i)}/>\r\n      </div>\r\n    )\r\n\t\t\r\n  })\r\n\r\n  // const allFeatureCourses = featureCourses.length > 0 && featureCourses.map((course, i) => {\r\n\r\n  //   return (\r\n  //     <div className=\"example-draggable\"\r\n  //         draggable=\"true\"\r\n  //         onDragStart={onDragStart}\r\n  //         onDragEnd={onDragEnd}\r\n  //         onDragOver={dragOverItem}\r\n  //         data-id={i}\r\n  //         data-item={course}\r\n  //     >{course.name}</div>\r\n  //   )\r\n\t\t\r\n  // })\r\n\r\n  const saveFeaturedCourses = (e) => {\r\n    // const filteredData = data.filter((course) => {\r\n    //   return course.featured;\r\n    // })\r\n    e.preventDefault();\r\n    console.log(data);\r\n    dispatch(saveFeaturedCoursesAction(data, token));\r\n  }\r\n\r\n  console.log(data)\r\n  return (\r\n    <div>\r\n    <div className=\"example-parent\">\r\n      <h1>To-do list</h1>\r\n      <div className=\"example-origin\">\r\n        To-do\r\n        {allCourses}\r\n        <button onClick={saveFeaturedCourses}>Save Feature courses</button>\r\n        { message ? ( \r\n          <h3>{message}</h3> \r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <h2>Featured Courses</h2>\r\n        <div\r\n          className=\"example-dropzone\"\r\n          onDrop={e => onDrop(e)}\r\n          onDragOver={e => onDragOver(e)}\r\n          data-id={5}\r\n        >\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FeatureCourses\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\Courses.js",["373","374"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getCourses } from '../../actions/courses';\r\nimport SecondHeader from '../partials/SecondHeader';\r\nimport './Courses.css'\r\n\r\nconst Courses = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const courses = useSelector(state => state.courses);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCourses());\r\n\t}, []);\r\n\r\n\tconst images = require.context('../../images/courses', true);\r\n\r\n\tconst allCourses = courses.all && courses.all.map((course, index) => {\r\n\r\n\t\tlet img = \"\";\r\n\t\tif (course && course.hasThumbnail) {\r\n\t\t\timg = images(`./${course.tag}.jpg`);\r\n\t\t} else {\r\n\t\t\timg = images(`./default-course.jpg`);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"col-3\" key={index}>\r\n\t\t\t\t<div className=\"cardBorder\">\r\n\t\t\t\t\t<div className=\"courseThumbnail courseFeatured1\">\r\n\t\t\t\t\t\t<Link to={`/admin/courses/update/${course.tag}`}>\r\n\t\t\t\t\t\t\t<img src={img.default} alt=\"javascript\" />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"courseTitleCtn\">\r\n\t\t\t\t\t\t<Link to={`/admin/courses/update/${course.tag}`}>{course.name}</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"separator\"></div>\r\n\t\t\t\t\t<div className=\"priceCtn\">\r\n\t\t\t\t\t\t<span className=\"studentNumbers\"><i className=\"fas fa-user\"></i> Telmo Sampaio</span><span className=\"price\">${course.price}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t})\r\n\r\n\tif (auth && auth.user && auth.user.role !== \"admin\") {\r\n\t\treturn <Redirect to=\"/\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"adminCtn\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t<div className=\"adminCourseTop\">\r\n\t\t\t\t\t\t\t\t<h1>Admin</h1>\r\n\t\t\t\t\t\t\t\t<Link to=\"/admin/courses/create\">New Course</Link>\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t{allCourses}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Courses;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\admin\\AdminSidebar.js",["375","376","377"],"import React, { useState } from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../utils/Loader';\r\nimport './Admin.css';\r\n\r\nfunction AdminSidebar( ) {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading } = auth;\r\n\r\n  let userPic = null;\r\n  const images = require.context('../../images/', true);\r\n\r\n  let img;\r\n\r\n  if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n    img = images(`./${auth.user._id}.jpg`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" />\r\n  } else {\r\n    img = images(`./default.png`);\r\n    userPic = <img src={img.default} className=\"userAvatar\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-xl-2 col-lg-3 col-md-4 userLeftCol\">\r\n      { loading ? <Loader /> : userPic }\r\n      <h3>{auth && auth.user && auth.user.name}</h3>\r\n      <h4>{auth && auth.user && auth.user.email}</h4>\r\n\r\n      <ul className=\"profileLinks\">\r\n        <li>\r\n          <NavLink exact to=\"/admin/courses\" activeClassName=\"activeProfilePage\"><i className=\"fa fa-user\"></i>Courses</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/admin/featureCourses\" activeClassName=\"activeProfilePage\"><i className=\"fa fa-graduation-cap\"></i>FEATURE COURSES</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/admin/users\" activeClassName=\"activeProfilePage\"><i className=\"fa fa-user\"></i>Users</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSidebar;\r\n","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Header.js",["378"],"import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport SecondHeader from './SecondHeader';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<SecondHeader />\r\n\t\t\t<div className=\"heroTitle\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t<h3>LEARN TO CODE</h3>\r\n\t\t\t\t\t\t\t<h1>GET YOUR DREAM JOB</h1>\r\n\t\t\t\t\t\t\t<Link to=\"/courses\" className=\"actionButton\">VIEW COURSES</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\SecondHeader.js",["379","380","381","382","383","384","385"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './SecondHeader.css';\r\nimport logo from '../../images/telmo-academy1.png';\r\nimport { loadCheckout } from '../../actions/courses';\r\nimport { checkMembership } from '../../actions/membership';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SecondHeader = ({ auth, isAuthenticated, payment, loadCheckout, checkMembership }) => {\r\n\r\n  let userPic = null;\r\n\r\n  const [dropDown, setDropdown] = useState({\r\n    open: false,\r\n  });\r\n\r\n  const [mobileMenu, setMobileMenu] = useState({\r\n    open: false,\r\n  });\r\n\r\n  const dropMenu = React.useRef();\r\n  const dropMobileMenu = React.useRef();\r\n\r\n  const profileIcon = React.useRef();\r\n  const burgerMenuIcon = React.useRef();\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (dropMenu.current && !dropMenu.current.contains(event.target) && !profileIcon.current.contains(event.target)) {\r\n        console.log(\"dropMenu\");\r\n        // alert(\"You clicked outside of me!\");\r\n        // console.log(\"outside\");\r\n        setDropdown({\r\n          open: false\r\n        })\r\n      } \r\n      \r\n      if(dropMobileMenu.current && dropMenu.current && !dropMenu.current.contains(event.target) && !burgerMenuIcon.current.contains(event.target)){\r\n        console.log(\"inside dropMobileMenu\");\r\n        setMobileMenu({\r\n          open: false\r\n        })\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [dropMenu]);\r\n\r\n  useEffect(() => {\r\n    if (auth && auth.isAuthenticated) {\r\n      loadCheckout(auth && auth.user && auth.user._id);\r\n    }\r\n\r\n  }, [auth && auth.isAuthenticated && auth.user && auth.user.checkout]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"loading check\")\r\n    // console.log(auth && auth.token)\r\n    if (auth && auth.token) {\r\n      checkMembership(auth && auth.token);\r\n    }\r\n\r\n  }, [auth && auth.isAuthenticated]);\r\n\r\n\r\n  const handleDropdown = (state, myFunc) => {\r\n    // if (!state.open) {\r\n    //   myFunc({\r\n    //     open: true\r\n    //   })\r\n    // } else {\r\n    //   myFunc({\r\n    //     open: false\r\n    //   })\r\n    // }\r\n    console.log(\"calling handleDropdown\")\r\n    myFunc({\r\n      open: !state.open\r\n    })\r\n  }\r\n\r\n  const images = require.context('../../images/', true, /\\.(png|jpe?g|svg)$/);\r\n\r\n  console.log(\"+++++++\");\r\n  console.log(images);\r\n\r\n  if (auth && auth.user && auth.user._id && auth.user.hasProfilePic) {\r\n    // import Pic from `/${auth.user._id}.jpg`;\r\n    // userPic = <img src={`/${auth.user._id}.jpg`} />\r\n\r\n    // console.log(\"before image\");\r\n\r\n    let img = images(`./${auth && auth.user && auth.user._id}.jpg`);\r\n    \r\n    userPic = <img src={img.default} className=\"userAvatarNav\" />;\r\n  } else {\r\n    let img = images(`./default.png`);\r\n    userPic = <img src={img.default} className=\"userAvatarNav\" />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"secondHeader\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 mainNav\">\r\n              <Link to=\"/\">\r\n                <img src={logo} alt=\"Telmo Academy Logo\" className=\"logo logo-light\" />\r\n              </Link>\r\n              <div className=\"mobileMenu\" onClick={() => handleDropdown(mobileMenu, setMobileMenu)}>\r\n                <i ref={burgerMenuIcon} className=\"fas fa-bars\"></i>\r\n              </div>\r\n              <ul className=\"desktopMenu\">\r\n                <li><Link to='/'>HOME</Link></li>\r\n                <li><Link to='/courses'>COURSES</Link></li>\r\n                {/* Add when all finished\r\n            { auth && auth.membership && !auth.membership.active && (\r\n              <li><Link to='/membership'>PRICING</Link></li>\r\n\r\n            )} */}\r\n                <li><Link to='/membership'>PRICING</Link></li>\r\n                {isAuthenticated ? (\r\n\r\n                  <div ref={dropMenu} className={dropDown.open ? \"navDropDown\" : \"hideDropDown\"}>\r\n                    <li><Link to='/profile'><i className=\"fa fa-user\"></i> Profile</Link></li>\r\n                    <li><Link to='/profile/courses'><i className=\"fa fa-play-circle\"></i> My Courses</Link></li>\r\n                    { auth && auth.user && auth.user.role === \"admin\" ? <li><Link to='/admin/courses'><i className=\"fas fa-user-shield\"></i> Admin</Link></li> : \"\"}\r\n                    <li><Link to='/logout'><i className=\"fa fa-door-open\"></i> Logout</Link></li>\r\n                  </div>\r\n\r\n                ) : (\r\n                    <Fragment>\r\n                      <li><Link to='/login'>Login</Link></li>\r\n                      <li><Link to='/Register'>Register</Link></li>\r\n                    </Fragment>\r\n                  )}\r\n                {\r\n                  isAuthenticated ? (\r\n                    <li>\r\n                      <Link className=\"checkoutLink\" to=\"/cart/checkout\">\r\n                        <i className=\"fa fa-shopping-cart\"></i>\r\n                        {payment && payment.checkout && payment.checkout.length > 0 ? (\r\n                          <span className=\"checkoutNumber\">{payment && payment.checkout && payment.checkout.length}</span>\r\n                        ) : null\r\n                        }\r\n                      </Link>\r\n                    </li>\r\n                  ) : null\r\n                }\r\n                {isAuthenticated ? <li ref={profileIcon} className=\"userAvatarNavCtn\" onClick={() => handleDropdown(dropDown, setDropdown)}>{userPic}<span className=\"userBorder\"></span></li> : \"\"}\r\n              </ul>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"navMenuCtn\">        \r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <ul ref={dropMobileMenu} className={`navMenu ${mobileMenu.open ? \"navMenuActive\" : \"\"}`}>\r\n              <li><Link to=\"/\">Home</Link></li>\r\n              <li><Link to=\"/courses\">Courses</Link></li>\r\n              <li><Link to=\"/membership\">Pricing</Link></li>\r\n              <li><Link to=\"/profile\">Profile</Link></li>\r\n              <li><Link to=\"/profile/billing\">Billing</Link></li>\r\n              <li><Link to=\"/profile/courses\">My Courses</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  payment: state.payment\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCheckout, checkMembership })(SecondHeader);","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\AdminSidebar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\Loader.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\utils\\imageUpload.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\payments.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\index.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\courseConstants.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\membership.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\actions\\admin.js",["386"],"import { \r\n  USERS_LIST_REQUEST, \r\n  USERS_LIST_SUCCESS,\r\n  USERS_LIST_FAIL,\r\n  ADMIN_UPDATE_USERS_REQUEST,\r\n  ADMIN_UPDATE_USERS_SUCCESS,\r\n  ADMIN_UPDATE_USERS_FAIL,\r\n  ADMIN_DELETE_USERS_REQUEST,\r\n  ADMIN_DELETE_USERS_SUCCESS,\r\n  ADMIN_DELETE_USERS_FAIL\r\n} from '../contants/adminConstants';\r\nimport axios from 'axios';\r\n\r\nexport const allUsersAction = ( token ) => async dispatch => {\r\n  try {\r\n    console.log(\"INSIDE GET ALL USERS ACTION\");\r\n    console.log(\"The token is\")\r\n    console.log(token);\r\n    dispatch({\r\n      type: USERS_LIST_REQUEST\r\n    });\r\n\r\n    console.log(\"Before axios\")\r\n    const {data} = await axios.get(`/api/admin/getUsers`);\r\n\r\n    console.log(\"All users\");\r\n    console.log(data);\r\n\r\n    dispatch({\r\n      type: USERS_LIST_SUCCESS,\r\n      payload: data.users\r\n    });\r\n\r\n  } catch (error) {\r\n    const errors = error.response.data;\r\n    console.log(errors);\r\n    dispatch({\r\n      type: USERS_LIST_FAIL,\r\n      payload: errors.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const saveUsersAction = ( modelText ) => async dispatch => {\r\n  console.log(\"Inside Save users action out\")\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_UPDATE_USERS_REQUEST\r\n    })\r\n\r\n    console.log(\"Inside Save users action\")\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const body = modelText;\r\n\r\n    const {data} = await axios.post(`/api/admin/updateUsers`, body, config);\r\n\r\n    console.log(data);\r\n\r\n    dispatch({\r\n      type: ADMIN_UPDATE_USERS_SUCCESS,\r\n      payload: data.users\r\n    })\r\n\r\n  } catch (error) {\r\n    const errors = error.response.data;\r\n    console.log(errors);\r\n    dispatch({\r\n      type: USERS_LIST_FAIL,\r\n      payload: errors.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUsersAction = ( modelText ) => async dispatch => {\r\n  console.log(\"Inside Delete users action out\")\r\n  console.log(modelText);\r\n  try {\r\n    dispatch({\r\n      type: ADMIN_DELETE_USERS_REQUEST\r\n    })\r\n\r\n    console.log(\"Inside Delete users action\")\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const body = modelText;\r\n\r\n    const {data} = await axios.post(`/api/admin/deleteUsers`, body, config);\r\n\r\n    console.log(data);\r\n\r\n    dispatch({\r\n      type: ADMIN_DELETE_USERS_SUCCESS,\r\n      payload: data.users\r\n    })\r\n\r\n  } catch (error) {\r\n    const errors = error.response.data;\r\n    console.log(errors);\r\n    dispatch({\r\n      type: ADMIN_DELETE_USERS_FAIL,\r\n      payload: errors.message\r\n    })\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\components\\partials\\Navbar.js",[],"D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\courses.js",["387"],"import {\r\n  GET_ONE_COURSE,\r\n  GET_LESSONS_WATCHED,\r\n  GET_COURSES,\r\n  UPDATE_COURSE,\r\n  FINISH_LESSON\r\n} from '../actions/types';\r\nimport {\r\n  COURSE_LIST_REQUEST,\r\n  SAVE_FEATURED_COURSES_REQUEST,\r\n  SAVE_FEATURED_COURSES_SUCCESS,\r\n  SAVE_FEATURED_COURSES_FAIL\r\n} from '../contants/courseConstants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: null,\r\n  all: [],\r\n  message: \"\"\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  console.log(type);\r\n\r\n  switch (type) {\r\n    case COURSE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        all: []\r\n      }\r\n    case GET_ONE_COURSE:\r\n      console.log(\"inside reducer get one course\");\r\n      return {\r\n        ...state,\r\n        data: payload.course\r\n      }\r\n    case GET_COURSES:\r\n      console.log(\"Reducer ALL courses\");\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        all: payload.courses\r\n      }\r\n    case UPDATE_COURSE:\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        message: payload.message\r\n      }\r\n    case FINISH_LESSON:\r\n      // console.log(payload);\r\n      const updatedClasses = state.data.classes;\r\n      updatedClasses[payload.lesson].watched[0] = payload.watched;\r\n\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          classes: updatedClasses\r\n        }\r\n      }\r\n    case GET_LESSONS_WATCHED:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          classes: payload.course.classes\r\n        }\r\n      }\r\n    case SAVE_FEATURED_COURSES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case SAVE_FEATURED_COURSES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        all: payload\r\n      }\r\n    case SAVE_FEATURED_COURSES_FAIL:\r\n      return {\r\n        ...state,\r\n        message: payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\auth.js",["388","389"],"import {\r\n  UPDATE_USER,\r\n  UPDATE_USER_ERROR,\r\n  REGISTER_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  USER_GUEST,\r\n  LOGOUT,\r\n  LOGOUT_FAIL,\r\n  FORGOT_PASSWORD,\r\n  EMAIL_ACTIVATION,\r\n  ACCOUNT_ACTIVATION,\r\n  GET_COURSES_OWNED,\r\n  COURSE_ACCESS,\r\n  CHECK_MEMBERSHIP,\r\n  CANCEL_MEMBERSHIP,\r\n  RESUBSCRIBE_MEMBERSHIP,\r\n  AUTH_ERROR\r\n} from '../actions/types';\r\nimport { USER_DETAILS_REQUEST } from '../contants/userConstants';\r\nimport { \r\n  RESET_PASSWORD, \r\n  RESET_PASSWORD_FAIL, \r\n  ACCOUNT_ACTIVATION_FAIL,\r\n  RESET_MESSAGE \r\n} from '../contants/authConstants';\r\n\r\nconst initialState = {\r\n\t// token: localStorage.getItem('token'),\r\n\ttoken: null,\r\n  isAuthenticated: null,\r\n  active: null,\r\n  user: null,\r\n  loading: true,\r\n  message: \"\",\r\n  coursesOwned: [],\r\n  membership: {\r\n    active: false\r\n  }\r\n}\r\n\r\nexport default function( state = initialState, action ) {\r\n  const { type, payload } = action;\r\n  // console.log(\"inside auth reducers\");\r\n  // console.log( type );\r\n  if(payload) {\r\n  \r\n    console.log(\"-------------CHANGING MESSAGE----------\")\r\n    console.log(type)\r\n    console.log( payload.message );\r\n  }\r\n  switch(type) {\r\n      case USER_DETAILS_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      case USER_LOADED:\r\n        return {\r\n            ...state,\r\n            isAuthenticated: true,\r\n            user: payload.user,\r\n            token: payload.token,\r\n            active: payload.active,\r\n            loading: false\r\n        }\r\n      case USER_GUEST:\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          isAuthenticated: null,\r\n          user: null,\r\n          loading: false\r\n        }\r\n      case REGISTER_SUCCESS:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n            message: payload.message\r\n        }\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          token: payload.token,\r\n          message: payload.message,\r\n          user: payload.user,\r\n          active: payload.user.active,\r\n          loading: false\r\n        }\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          message: payload.message\r\n        }\r\n      case RESET_MESSAGE:\r\n        return {\r\n          ...state,\r\n          message: \"\"\r\n        }\r\n      // case REGISTER_FAIL:\r\n      case AUTH_ERROR:\r\n      case LOGOUT_FAIL:\r\n      case LOGOUT:\r\n        return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            user: null,\r\n            message: null\r\n        }\r\n      case FORGOT_PASSWORD:\r\n      case UPDATE_USER_ERROR:\r\n        return {\r\n          ...state,\r\n          message: payload\r\n        }\r\n      case RESET_PASSWORD:\r\n        return {\r\n          ...state,\r\n          message: payload\r\n        }\r\n      case RESET_PASSWORD_FAIL:\r\n        return {\r\n          ...state,\r\n          message: payload\r\n        }\r\n      case EMAIL_ACTIVATION:\r\n      case ACCOUNT_ACTIVATION:\r\n      case ACCOUNT_ACTIVATION_FAIL:\r\n        return {\r\n          ...state,\r\n          active: \"active\",\r\n          message: payload.message\r\n        }\r\n      case GET_COURSES_OWNED:\r\n        return {\r\n          ...state,\r\n          coursesOwned: payload.courses\r\n        }\r\n      case COURSE_ACCESS:\r\n        return {\r\n          ...state,\r\n          courseAcces: payload.courses\r\n        }\r\n      case CHECK_MEMBERSHIP:\r\n        return {\r\n          ...state,\r\n          membership: payload\r\n        }\r\n      case CANCEL_MEMBERSHIP:\r\n        return {\r\n          ...state,\r\n          membership: {\r\n            ...state.membership,\r\n            active: payload.active,\r\n            status: payload.status\r\n          }\r\n        }\r\n      case RESUBSCRIBE_MEMBERSHIP:\r\n        return {\r\n          ...state,\r\n          membership: {\r\n            ...state.membership,\r\n            active: payload.active,\r\n            status: payload.status\r\n          }\r\n        }\r\n      case UPDATE_USER:\r\n        return {\r\n          ...state,\r\n          message: payload.message,\r\n          user: {\r\n            ...state.user,\r\n            name: payload.user.name\r\n          }\r\n        }\r\n      default:\r\n          return state;\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\payment.js",["390","391"],"import {\r\n  PAY_MEMBERSHIP,\r\n  PAY_COURSE,\r\n  PAY_ERROR,\r\n  GET_PAYMENT_TOKEN,\r\n  ADD_CHECKOUT,\r\n  REMOVE_CHECKOUT,\r\n  LOAD_CHECKOUT,\r\n  RESET_PAYMENT_RESULT,\r\n  GET_USER_BILLING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  paymentToken: '',\r\n  result: \"\",\r\n  checkout: [],\r\n  checkoutPrice: 0,\r\n  addingToCheckout: false,\r\n  paymentComplete: false,\r\n  billing: []\r\n}\r\n\r\nexport default function( state = initialState, action ) {\r\n  const { type, payload } = action;\r\n\r\n  switch(type) {\r\n    case PAY_MEMBERSHIP:\r\n      return {\r\n          ...state,\r\n          paymentToken: payload.clientToken,\r\n          paymentComplete: payload.paymentComplete\r\n      }\r\n    case GET_PAYMENT_TOKEN:\r\n      return {\r\n          ...state,\r\n          addingToCheckout: false,\r\n          paymentToken: payload.clientToken\r\n      }\r\n    case PAY_COURSE:\r\n      return {\r\n          ...state,\r\n          result: payload.status,\r\n          checkout: []\r\n      }\r\n    case ADD_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        addingToCheckout: true,\r\n        checkout: payload\r\n      }\r\n    case REMOVE_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        checkout: payload\r\n      }\r\n    case LOAD_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        checkout: payload.checkout,\r\n        checkoutPrice: payload.checkoutPrice\r\n      }\r\n    case RESET_PAYMENT_RESULT:\r\n      return {\r\n        ...state,\r\n        result: '',\r\n        checkout: []\r\n      }\r\n    case GET_USER_BILLING: \r\n      return {\r\n        ...state,\r\n        billing: payload.billing\r\n      }\r\n    default:\r\n      return state;\r\n    }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\reducers\\admin.js",["392"],"import {\r\n  USERS_LIST_REQUEST,\r\n  USERS_LIST_SUCCESS,\r\n  USERS_LIST_FAIL,\r\n  ADMIN_UPDATE_USERS_FAIL,\r\n  ADMIN_UPDATE_USERS_SUCCESS,\r\n  ADMIN_UPDATE_USERS_REQUEST,\r\n  ADMIN_DELETE_USERS_REQUEST,\r\n  ADMIN_DELETE_USERS_SUCCESS,\r\n  ADMIN_DELETE_USERS_FAIL\r\n} from '../contants/adminConstants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  users: [],\r\n  message: \"\"\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USERS_LIST_REQUEST:\r\n    case ADMIN_UPDATE_USERS_REQUEST:\r\n    case ADMIN_DELETE_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case USERS_LIST_SUCCESS:\r\n    case ADMIN_UPDATE_USERS_SUCCESS:\r\n    case ADMIN_DELETE_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: payload\r\n      }\r\n    case USERS_LIST_FAIL:\r\n    case ADMIN_UPDATE_USERS_FAIL:\r\n    case ADMIN_DELETE_USERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\dev-projects\\telmo-academy-v3\\client\\src\\contants\\adminConstants.js",[],{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","severity":1,"message":"398","line":27,"column":8,"nodeType":"399","messageId":"400","endLine":27,"endColumn":20},{"ruleId":"397","severity":1,"message":"401","line":28,"column":8,"nodeType":"399","messageId":"400","endLine":28,"endColumn":20},{"ruleId":"397","severity":1,"message":"402","line":122,"column":11,"nodeType":"399","messageId":"400","endLine":122,"endColumn":14},{"ruleId":"397","severity":1,"message":"402","line":153,"column":11,"nodeType":"399","messageId":"400","endLine":153,"endColumn":14},{"ruleId":"403","severity":1,"message":"404","line":14,"column":15,"nodeType":"405","endLine":14,"endColumn":27},{"ruleId":"403","severity":1,"message":"404","line":15,"column":15,"nodeType":"405","endLine":15,"endColumn":27},{"ruleId":"403","severity":1,"message":"404","line":16,"column":15,"nodeType":"405","endLine":16,"endColumn":27},{"ruleId":"403","severity":1,"message":"404","line":21,"column":13,"nodeType":"405","endLine":21,"endColumn":25},{"ruleId":"403","severity":1,"message":"404","line":22,"column":13,"nodeType":"405","endLine":22,"endColumn":25},{"ruleId":"403","severity":1,"message":"404","line":23,"column":13,"nodeType":"405","endLine":23,"endColumn":25},{"ruleId":"403","severity":1,"message":"404","line":24,"column":13,"nodeType":"405","endLine":24,"endColumn":25},{"ruleId":"403","severity":1,"message":"404","line":25,"column":13,"nodeType":"405","endLine":25,"endColumn":25},{"ruleId":"397","severity":1,"message":"406","line":12,"column":11,"nodeType":"399","messageId":"400","endLine":12,"endColumn":18},{"ruleId":"397","severity":1,"message":"407","line":12,"column":20,"nodeType":"399","messageId":"400","endLine":12,"endColumn":25},{"ruleId":"397","severity":1,"message":"408","line":16,"column":9,"nodeType":"399","messageId":"400","endLine":16,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":20,"column":6,"nodeType":"411","endLine":20,"endColumn":8,"suggestions":"412"},{"ruleId":"397","severity":1,"message":"413","line":4,"column":8,"nodeType":"399","messageId":"400","endLine":4,"endColumn":13},{"ruleId":"409","severity":1,"message":"414","line":33,"column":5,"nodeType":"411","endLine":33,"endColumn":7,"suggestions":"415"},{"ruleId":"409","severity":1,"message":"416","line":43,"column":5,"nodeType":"411","endLine":43,"endColumn":41,"suggestions":"417"},{"ruleId":"409","severity":1,"message":"418","line":43,"column":6,"nodeType":"419","endLine":43,"endColumn":40},{"ruleId":"409","severity":1,"message":"420","line":51,"column":5,"nodeType":"411","endLine":51,"endColumn":24,"suggestions":"421"},{"ruleId":"409","severity":1,"message":"422","line":56,"column":5,"nodeType":"411","endLine":56,"endColumn":25,"suggestions":"423"},{"ruleId":"409","severity":1,"message":"418","line":56,"column":6,"nodeType":"419","endLine":56,"endColumn":24},{"ruleId":"424","severity":1,"message":"425","line":180,"column":8,"nodeType":"405","endLine":180,"endColumn":232},{"ruleId":"409","severity":1,"message":"426","line":22,"column":6,"nodeType":"411","endLine":22,"endColumn":8,"suggestions":"427"},{"ruleId":"409","severity":1,"message":"428","line":29,"column":6,"nodeType":"411","endLine":29,"endColumn":57,"suggestions":"429"},{"ruleId":"409","severity":1,"message":"418","line":29,"column":7,"nodeType":"419","endLine":29,"endColumn":56},{"ruleId":"430","severity":1,"message":"431","line":56,"column":30,"nodeType":"432","messageId":"433","endLine":56,"endColumn":32},{"ruleId":"430","severity":1,"message":"431","line":70,"column":23,"nodeType":"432","messageId":"433","endLine":70,"endColumn":25},{"ruleId":"424","severity":1,"message":"425","line":97,"column":15,"nodeType":"405","endLine":97,"endColumn":158},{"ruleId":"434","severity":1,"message":"435","line":130,"column":32,"nodeType":"419","messageId":"436","endLine":130,"endColumn":34},{"ruleId":"434","severity":1,"message":"435","line":130,"column":60,"nodeType":"419","messageId":"436","endLine":130,"endColumn":62},{"ruleId":"397","severity":1,"message":"437","line":15,"column":10,"nodeType":"399","messageId":"400","endLine":15,"endColumn":26},{"ruleId":"397","severity":1,"message":"438","line":15,"column":28,"nodeType":"399","messageId":"400","endLine":15,"endColumn":47},{"ruleId":"409","severity":1,"message":"410","line":21,"column":6,"nodeType":"411","endLine":21,"endColumn":8,"suggestions":"439"},{"ruleId":"409","severity":1,"message":"440","line":28,"column":6,"nodeType":"411","endLine":28,"endColumn":15,"suggestions":"441"},{"ruleId":"397","severity":1,"message":"442","line":31,"column":9,"nodeType":"399","messageId":"400","endLine":31,"endColumn":15},{"ruleId":"443","severity":1,"message":"444","line":41,"column":55,"nodeType":"445","messageId":"446","endLine":41,"endColumn":57},{"ruleId":"430","severity":1,"message":"447","line":51,"column":20,"nodeType":"432","messageId":"433","endLine":51,"endColumn":22},{"ruleId":"397","severity":1,"message":"448","line":7,"column":8,"nodeType":"399","messageId":"400","endLine":7,"endColumn":17},{"ruleId":"409","severity":1,"message":"449","line":35,"column":5,"nodeType":"411","endLine":35,"endColumn":18,"suggestions":"450"},{"ruleId":"397","severity":1,"message":"451","line":2,"column":10,"nodeType":"399","messageId":"400","endLine":2,"endColumn":18},{"ruleId":"409","severity":1,"message":"452","line":12,"column":6,"nodeType":"411","endLine":12,"endColumn":8,"suggestions":"453"},{"ruleId":"397","severity":1,"message":"451","line":4,"column":16,"nodeType":"399","messageId":"400","endLine":4,"endColumn":24},{"ruleId":"409","severity":1,"message":"449","line":30,"column":5,"nodeType":"411","endLine":30,"endColumn":14,"suggestions":"454"},{"ruleId":"397","severity":1,"message":"455","line":32,"column":8,"nodeType":"399","messageId":"400","endLine":32,"endColumn":16},{"ruleId":"397","severity":1,"message":"456","line":34,"column":8,"nodeType":"399","messageId":"400","endLine":34,"endColumn":16},{"ruleId":"397","severity":1,"message":"457","line":58,"column":8,"nodeType":"399","messageId":"400","endLine":58,"endColumn":19},{"ruleId":"409","severity":1,"message":"458","line":20,"column":5,"nodeType":"411","endLine":20,"endColumn":7,"suggestions":"459"},{"ruleId":"397","severity":1,"message":"460","line":11,"column":16,"nodeType":"399","messageId":"400","endLine":11,"endColumn":23},{"ruleId":"409","severity":1,"message":"461","line":25,"column":6,"nodeType":"411","endLine":25,"endColumn":25,"suggestions":"462"},{"ruleId":"409","severity":1,"message":"418","line":25,"column":7,"nodeType":"419","endLine":25,"endColumn":24},{"ruleId":"397","severity":1,"message":"463","line":29,"column":9,"nodeType":"399","messageId":"400","endLine":29,"endColumn":17},{"ruleId":"397","severity":1,"message":"460","line":10,"column":16,"nodeType":"399","messageId":"400","endLine":10,"endColumn":23},{"ruleId":"409","severity":1,"message":"464","line":18,"column":6,"nodeType":"411","endLine":18,"endColumn":8,"suggestions":"465"},{"ruleId":"397","severity":1,"message":"463","line":22,"column":9,"nodeType":"399","messageId":"400","endLine":22,"endColumn":17},{"ruleId":"397","severity":1,"message":"466","line":1,"column":26,"nodeType":"399","messageId":"400","endLine":1,"endColumn":35},{"ruleId":"397","severity":1,"message":"467","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":25},{"ruleId":"397","severity":1,"message":"468","line":4,"column":10,"nodeType":"399","messageId":"400","endLine":4,"endColumn":28},{"ruleId":"397","severity":1,"message":"413","line":6,"column":8,"nodeType":"399","messageId":"400","endLine":6,"endColumn":13},{"ruleId":"397","severity":1,"message":"469","line":13,"column":11,"nodeType":"399","messageId":"400","endLine":13,"endColumn":26},{"ruleId":"409","severity":1,"message":"470","line":27,"column":6,"nodeType":"411","endLine":27,"endColumn":21,"suggestions":"471"},{"ruleId":"409","severity":1,"message":"428","line":26,"column":6,"nodeType":"411","endLine":26,"endColumn":8,"suggestions":"472"},{"ruleId":"409","severity":1,"message":"428","line":35,"column":6,"nodeType":"411","endLine":35,"endColumn":36,"suggestions":"473"},{"ruleId":"409","severity":1,"message":"418","line":35,"column":7,"nodeType":"419","endLine":35,"endColumn":35},{"ruleId":"397","severity":1,"message":"451","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":18},{"ruleId":"409","severity":1,"message":"458","line":19,"column":6,"nodeType":"411","endLine":19,"endColumn":8,"suggestions":"474"},{"ruleId":"397","severity":1,"message":"475","line":4,"column":21,"nodeType":"399","messageId":"400","endLine":4,"endColumn":25},{"ruleId":"409","severity":1,"message":"476","line":34,"column":5,"nodeType":"411","endLine":34,"endColumn":25,"suggestions":"477"},{"ruleId":"409","severity":1,"message":"452","line":30,"column":6,"nodeType":"411","endLine":30,"endColumn":32,"suggestions":"478"},{"ruleId":"397","severity":1,"message":"479","line":91,"column":7,"nodeType":"399","messageId":"400","endLine":91,"endColumn":22},{"ruleId":"397","severity":1,"message":"480","line":13,"column":11,"nodeType":"399","messageId":"400","endLine":13,"endColumn":15},{"ruleId":"397","severity":1,"message":"481","line":13,"column":26,"nodeType":"399","messageId":"400","endLine":13,"endColumn":32},{"ruleId":"409","severity":1,"message":"482","line":20,"column":6,"nodeType":"411","endLine":20,"endColumn":8,"suggestions":"483"},{"ruleId":"409","severity":1,"message":"452","line":24,"column":6,"nodeType":"411","endLine":24,"endColumn":20,"suggestions":"484"},{"ruleId":"409","severity":1,"message":"452","line":22,"column":6,"nodeType":"411","endLine":22,"endColumn":20,"suggestions":"485"},{"ruleId":"397","severity":1,"message":"486","line":1,"column":17,"nodeType":"399","messageId":"400","endLine":1,"endColumn":23},{"ruleId":"397","severity":1,"message":"487","line":18,"column":8,"nodeType":"399","messageId":"400","endLine":18,"endColumn":12},{"ruleId":"397","severity":1,"message":"488","line":19,"column":8,"nodeType":"399","messageId":"400","endLine":19,"endColumn":14},{"ruleId":"397","severity":1,"message":"489","line":79,"column":8,"nodeType":"399","messageId":"400","endLine":79,"endColumn":23},{"ruleId":"409","severity":1,"message":"490","line":97,"column":5,"nodeType":"411","endLine":97,"endColumn":36,"suggestions":"491"},{"ruleId":"397","severity":1,"message":"492","line":11,"column":3,"nodeType":"399","messageId":"400","endLine":11,"endColumn":16},{"ruleId":"397","severity":1,"message":"493","line":20,"column":10,"nodeType":"399","messageId":"400","endLine":20,"endColumn":23},{"ruleId":"397","severity":1,"message":"402","line":136,"column":11,"nodeType":"399","messageId":"400","endLine":136,"endColumn":14},{"ruleId":"409","severity":1,"message":"494","line":27,"column":6,"nodeType":"411","endLine":27,"endColumn":42,"suggestions":"495"},{"ruleId":"409","severity":1,"message":"418","line":27,"column":7,"nodeType":"419","endLine":27,"endColumn":41},{"ruleId":"397","severity":1,"message":"496","line":1,"column":28,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"497","line":1,"column":38,"nodeType":"399","messageId":"400","endLine":1,"endColumn":46},{"ruleId":"397","severity":1,"message":"486","line":1,"column":48,"nodeType":"399","messageId":"400","endLine":1,"endColumn":54},{"ruleId":"409","severity":1,"message":"494","line":24,"column":6,"nodeType":"411","endLine":24,"endColumn":42,"suggestions":"498"},{"ruleId":"409","severity":1,"message":"418","line":24,"column":7,"nodeType":"419","endLine":24,"endColumn":41},{"ruleId":"397","severity":1,"message":"407","line":14,"column":11,"nodeType":"399","messageId":"400","endLine":14,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":37,"column":6,"nodeType":"411","endLine":37,"endColumn":8,"suggestions":"499"},{"ruleId":"409","severity":1,"message":"500","line":43,"column":6,"nodeType":"411","endLine":43,"endColumn":15,"suggestions":"501"},{"ruleId":"430","severity":1,"message":"447","line":73,"column":26,"nodeType":"432","messageId":"433","endLine":73,"endColumn":28},{"ruleId":"443","severity":1,"message":"444","line":89,"column":45,"nodeType":"445","messageId":"446","endLine":89,"endColumn":47},{"ruleId":"443","severity":1,"message":"502","line":125,"column":16,"nodeType":"503","messageId":"446","endLine":125,"endColumn":25},{"ruleId":"397","severity":1,"message":"481","line":26,"column":11,"nodeType":"399","messageId":"400","endLine":26,"endColumn":17},{"ruleId":"397","severity":1,"message":"504","line":45,"column":9,"nodeType":"399","messageId":"400","endLine":45,"endColumn":20},{"ruleId":"409","severity":1,"message":"505","line":66,"column":6,"nodeType":"411","endLine":66,"endColumn":42,"suggestions":"506"},{"ruleId":"409","severity":1,"message":"418","line":66,"column":7,"nodeType":"419","endLine":66,"endColumn":41},{"ruleId":"507","severity":1,"message":"508","line":103,"column":15,"nodeType":"405","endLine":103,"endColumn":104},{"ruleId":"507","severity":1,"message":"508","line":106,"column":15,"nodeType":"405","endLine":106,"endColumn":104},{"ruleId":"397","severity":1,"message":"509","line":11,"column":8,"nodeType":"399","messageId":"400","endLine":11,"endColumn":19},{"ruleId":"409","severity":1,"message":"476","line":44,"column":5,"nodeType":"411","endLine":44,"endColumn":25,"suggestions":"510"},{"ruleId":"409","severity":1,"message":"511","line":56,"column":5,"nodeType":"411","endLine":56,"endColumn":17,"suggestions":"512"},{"ruleId":"397","severity":1,"message":"497","line":1,"column":17,"nodeType":"399","messageId":"400","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"508","line":20,"column":15,"nodeType":"405","endLine":20,"endColumn":63},{"ruleId":"507","severity":1,"message":"508","line":23,"column":15,"nodeType":"405","endLine":23,"endColumn":63},{"ruleId":"409","severity":1,"message":"410","line":45,"column":6,"nodeType":"411","endLine":45,"endColumn":15,"suggestions":"513"},{"ruleId":"409","severity":1,"message":"514","line":52,"column":5,"nodeType":"411","endLine":52,"endColumn":20,"suggestions":"515"},{"ruleId":"397","severity":1,"message":"516","line":58,"column":7,"nodeType":"399","messageId":"400","endLine":58,"endColumn":18},{"ruleId":"397","severity":1,"message":"517","line":5,"column":8,"nodeType":"399","messageId":"400","endLine":5,"endColumn":20},{"ruleId":"409","severity":1,"message":"410","line":16,"column":5,"nodeType":"411","endLine":16,"endColumn":7,"suggestions":"518"},{"ruleId":"397","severity":1,"message":"497","line":1,"column":17,"nodeType":"399","messageId":"400","endLine":1,"endColumn":25},{"ruleId":"507","severity":1,"message":"508","line":20,"column":15,"nodeType":"405","endLine":20,"endColumn":63},{"ruleId":"507","severity":1,"message":"508","line":23,"column":15,"nodeType":"405","endLine":23,"endColumn":63},{"ruleId":"397","severity":1,"message":"519","line":2,"column":8,"nodeType":"399","messageId":"400","endLine":2,"endColumn":14},{"ruleId":"397","severity":1,"message":"486","line":1,"column":48,"nodeType":"399","messageId":"400","endLine":1,"endColumn":54},{"ruleId":"409","severity":1,"message":"520","line":62,"column":6,"nodeType":"411","endLine":62,"endColumn":71,"suggestions":"521"},{"ruleId":"409","severity":1,"message":"418","line":62,"column":7,"nodeType":"419","endLine":62,"endColumn":70},{"ruleId":"409","severity":1,"message":"522","line":71,"column":6,"nodeType":"411","endLine":71,"endColumn":36,"suggestions":"523"},{"ruleId":"409","severity":1,"message":"418","line":71,"column":7,"nodeType":"419","endLine":71,"endColumn":35},{"ruleId":"507","severity":1,"message":"508","line":103,"column":15,"nodeType":"405","endLine":103,"endColumn":66},{"ruleId":"507","severity":1,"message":"508","line":106,"column":15,"nodeType":"405","endLine":106,"endColumn":66},{"ruleId":"397","severity":1,"message":"524","line":7,"column":3,"nodeType":"399","messageId":"400","endLine":7,"endColumn":26},{"ruleId":"525","severity":1,"message":"526","line":22,"column":1,"nodeType":"527","endLine":93,"endColumn":2},{"ruleId":"397","severity":1,"message":"528","line":7,"column":3,"nodeType":"399","messageId":"400","endLine":7,"endColumn":16},{"ruleId":"525","severity":1,"message":"526","line":44,"column":1,"nodeType":"527","endLine":182,"endColumn":2},{"ruleId":"397","severity":1,"message":"529","line":4,"column":3,"nodeType":"399","messageId":"400","endLine":4,"endColumn":12},{"ruleId":"525","severity":1,"message":"526","line":23,"column":1,"nodeType":"527","endLine":76,"endColumn":2},{"ruleId":"525","severity":1,"message":"526","line":19,"column":1,"nodeType":"527","endLine":49,"endColumn":2},"no-native-reassign",["530"],"no-negated-in-lhs",["531"],"no-unused-vars","'CourseCreate' is defined but never used.","Identifier","unusedVar","'CourseUpdate' is defined but never used.","'res' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","'token' is assigned a value but never used.","'courseLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["532"],"'store' is defined but never used.","React Hook useEffect has missing dependencies: 'courseTag' and 'getCourse'. Either include them or remove the dependency array. If 'getCourse' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["533"],"React Hook useEffect has a missing dependency: 'setCoursesOwned'. Either include it or remove the dependency array.",["534"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has a missing dependency: 'redirectUser'. Either include it or remove the dependency array.",["535"],"React Hook useEffect has missing dependencies: 'auth.token', 'courseTag', and 'lessonsWatchedAction'. Either include them or remove the dependency array. If 'lessonsWatchedAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["536"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'courseTag'. Either include it or remove the dependency array.",["537"],"React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["538"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","unexpectedMixedOperator","'coursesThumbnail' is assigned a value but never used.","'setCoursesThumbnail' is assigned a value but never used.",["539"],"React Hook useEffect has a missing dependency: 'all'. Either include it or remove the dependency array.",["540"],"'images' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["541"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["542"],["543"],"'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'checkResult' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'resetMessage'. Either include it or remove the dependency array. If 'resetMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["544"],"'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.token', 'auth.user', 'loadCheckout', and 'payAction'. Either include them or remove the dependency array. If 'payAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["545"],"'getNonce' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'payAction'. Either include it or remove the dependency array. If 'payAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["546"],"'useEffect' is defined but never used.","'getCoursesOwned' is defined but never used.","'resetPaymentResult' is defined but never used.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["547"],["548"],["549"],["550"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'setCourseValues'. Either include it or remove the dependency array.",["551"],["552"],"'mapStateToProps' is assigned a value but never used.","'user' is assigned a value but never used.","'active' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'message', and 'token'. Either include them or remove the dependency array.",["553"],["554"],["555"],"'useRef' is defined but never used.","'auth' is assigned a value but never used.","'course' is assigned a value but never used.","'saveBlogDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'courseState' and 'dispatch'. Either include them or remove the dependency array.",["556"],"'CREATE_COURSE' is defined but never used.","'RESET_MESSAGE' is defined but never used.","React Hook useEffect has missing dependencies: 'auth' and 'dispatch'. Either include them or remove the dependency array.",["557"],"'Fragment' is defined but never used.","'useState' is defined but never used.",["558"],["559"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["560"],"Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","'loaderDelay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'userDetails'. Either include them or remove the dependency array. You can also do a functional update 'setUserDetails(u => ...)' if you only need 'userDetails' in the 'setUserDetails' call.",["561"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'htmlToDraft' is defined but never used.",["562"],"React Hook useEffect has missing dependencies: 'courseState' and 'updateCourseAction'. Either include them or remove the dependency array. If 'updateCourseAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["563"],["564"],"React Hook useEffect has a missing dependency: 'updateCourses'. Either include it or remove the dependency array.",["565"],"'dropzoneRef' is assigned a value but never used.","'SecondHeader' is defined but never used.",["566"],"'Navbar' is defined but never used.","React Hook useEffect has missing dependencies: 'auth' and 'loadCheckout'. Either include them or remove the dependency array. If 'loadCheckout' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["567"],"React Hook useEffect has missing dependencies: 'auth' and 'checkMembership'. Either include them or remove the dependency array. If 'checkMembership' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["568"],"'ADMIN_UPDATE_USERS_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'REGISTER_FAIL' is defined but never used.","'PAY_ERROR' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"569","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"581","fix":"600"},{"desc":"581","fix":"601"},{"desc":"592","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"609","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"614","fix":"616"},{"desc":"569","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"603","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"569","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},"Update the dependencies array to be: [dispatch]",{"range":"634","text":"635"},"Update the dependencies array to be: [courseTag, getCourse]",{"range":"636","text":"637"},"Update the dependencies array to be: [setCoursesOwned]",{"range":"638","text":"639"},"Update the dependencies array to be: [auth.coursesOwned, redirectUser]",{"range":"640","text":"641"},"Update the dependencies array to be: [auth.token, courseTag, lessonsWatchedAction]",{"range":"642","text":"643"},"Update the dependencies array to be: [courseTag]",{"range":"644","text":"645"},"Update the dependencies array to be: [auth]",{"range":"646","text":"647"},{"range":"648","text":"635"},"Update the dependencies array to be: [all, loading]",{"range":"649","text":"650"},"Update the dependencies array to be: [formData, formMessage]",{"range":"651","text":"652"},"Update the dependencies array to be: [history]",{"range":"653","text":"654"},"Update the dependencies array to be: [formData, message]",{"range":"655","text":"656"},"Update the dependencies array to be: [resetMessage]",{"range":"657","text":"658"},"Update the dependencies array to be: [auth.token, auth.user, loadCheckout, payAction]",{"range":"659","text":"660"},"Update the dependencies array to be: [payAction]",{"range":"661","text":"662"},"Update the dependencies array to be: [user, loading, dispatch, history]",{"range":"663","text":"664"},{"range":"665","text":"647"},{"range":"666","text":"647"},{"range":"667","text":"658"},"Update the dependencies array to be: [courseState.loaded, setCourseValues]",{"range":"668","text":"669"},"Update the dependencies array to be: [history, isAuthenticated, message]",{"range":"670","text":"671"},"Update the dependencies array to be: [dispatch, message, token]",{"range":"672","text":"673"},"Update the dependencies array to be: [auth, active, history]",{"range":"674","text":"675"},{"range":"676","text":"675"},"Update the dependencies array to be: [courseState, courseState.courseDescription, dispatch]",{"range":"677","text":"678"},"Update the dependencies array to be: [auth, dispatch]",{"range":"679","text":"680"},{"range":"681","text":"680"},{"range":"682","text":"635"},"Update the dependencies array to be: [loading, users]",{"range":"683","text":"684"},"Update the dependencies array to be: [auth, dispatch, userDetails]",{"range":"685","text":"686"},{"range":"687","text":"669"},"Update the dependencies array to be: [courseState, saveCourse, updateCourseAction]",{"range":"688","text":"689"},"Update the dependencies array to be: [dispatch, loading]",{"range":"690","text":"691"},"Update the dependencies array to be: [courseLoading, updateCourses]",{"range":"692","text":"693"},{"range":"694","text":"635"},"Update the dependencies array to be: [auth, loadCheckout]",{"range":"695","text":"696"},"Update the dependencies array to be: [auth, checkMembership]",{"range":"697","text":"698"},[580,582],"[dispatch]",[851,853],"[courseTag, getCourse]",[1009,1045],"[setCoursesOwned]",[1191,1210],"[auth.coursesOwned, redirectUser]",[1289,1309],"[auth.token, courseTag, lessonsWatchedAction]",[697,699],"[courseTag]",[836,887],"[auth]",[712,714],[803,812],"[all, loading]",[1120,1133],"[formData, formMessage]",[331,333],"[history]",[949,958],"[formData, message]",[632,634],"[resetMessage]",[1001,1020],"[auth.token, auth.user, loadCheckout, payAction]",[621,623],"[payAction]",[842,857],"[user, loading, dispatch, history]",[828,830],[966,996],[591,593],[885,905],"[courseState.loaded, setCourseValues]",[854,880],"[history, isAuthenticated, message]",[710,712],"[dispatch, message, token]",[800,814],"[auth, active, history]",[730,744],[2459,2490],"[courseState, courseState.courseDescription, dispatch]",[988,1024],"[auth, dispatch]",[870,906],[1133,1135],[1224,1233],"[loading, users]",[1673,1709],"[auth, dispatch, userDetails]",[1233,1253],[1547,1559],"[courseState, saveCourse, updateCourseAction]",[1245,1254],"[dispatch, loading]",[1348,1363],"[courseLoading, updateCourses]",[506,508],[1905,1970],"[auth, loadCheckout]",[2163,2193],"[auth, checkMembership]"]